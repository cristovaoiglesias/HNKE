using  Plots,Distributions,DifferentialEquations
using BSON#: @load
using Statistics
using CSV, DataFrames
using Flux
using Measurements, StaticArrays




include("/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/mAb_synthetic_dataset.jl")
# using .mAb_synthetic_dt

path="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/ensemble/trained_Ensemble_MLP/"

#load all trained sub-MLP that compose the ensemble
ensemble_MLP = Dict()
ensemble_size=100
for i=1:ensemble_size
    pt=path*"$(i)_sub_MLP.bson"
    m = BSON.load(pt, @__MODULE__)
    ensemble_MLP[i]=m[:model]
end


function normalize_data(x,min,max)
    y=(x-min)/(max-min)
    return y
end

function inverse_normalizetion(y,min,max)
    x=(y*(max-min))+min
    return x
end

function normalize_input(u0)
    #the max and min values were obtained from the dataset used to train the Ensemble, see file dataset_to_train_EnMLP.jl
    min_values_state_variables=[1.1247355623692597e8, 1.0876934495531811, 0.0016493210047543638, 0.0, 0.002675178467605843, 13.163672825054604, 0.0]
    max_values_state_variables=[3.9843740973885384e9, 100.72750841246663, 25.078825296718655, 124.32540101966985, 16.566031188582603, 4632.744925522347, 91.0]
    for i=1:7
        u0[i]=normalize_data(u0[i],min_values_state_variables[i],max_values_state_variables[i])
    end
    return u0
end

function unnormalize_output(p)
    #the max and min values were obtained from the dataset used to train the Ensemble, see file dataset_to_train_EnMLP.jl
    min_values_estimated_params=[-0.13240732597403193, -5.0243094334252736e-9, -7.242819067849792e-10, -2.075801104192634e-9, -4.1946626959321127e-10, -7.189692896472483e-8]
    max_values_estimated_params=[0.2247201064149725, 6.382248486023288e-9, 9.252830910761743e-10, 3.860459201515955e-9, 1.0219287122168513e-9, 1.2732423754124306e-7]
    for i=1:6
        p[i]=inverse_normalizetion(p[i],min_values_estimated_params[i],max_values_estimated_params[i])
    end
    return p
end


function ensemble_prediction(ensemble,inpt) # make predictions with MLP ensemble where input is states(t) and output params(t)
    #the input is normalized and the output is unnromalized.
    row_prediction=[]
    u0=normalize_input(inpt)
    for j=1:length(ensemble)
        p=ensemble[j](u0)
        # println(p)
        p=unnormalize_output(p)
        push!(row_prediction,p)
    end
    rp=vcat(map(x->x', row_prediction)...)
    rp_mean= [mean(rp[:,1]),mean(rp[:,2]),mean(rp[:,3]),mean(rp[:,4]),mean(rp[:,5]),mean(rp[:,6])]
    rp_std = [std(rp[:,1]),std(rp[:,2]),std(rp[:,3]),std(rp[:,4]),std(rp[:,5]),std(rp[:,6])]
    return rp_mean,rp_std #return mean and std
end




## making predictions with MLP ensemble where input is states(t) and the output is params(t) that enable to predict the states(t+1).

tstart=0.0
tend=103.0
sampling= 7.0
tgrid=tstart:sampling:tend
sampling= 0.125
tgrid_large=tstart:sampling:tend
tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
#
# function ode_system(u, p, t)
#     Xv, GLC, GLN, LAC, AMM, mAb = u
#     μ_Xv, μ_GLC, μ_GLN, μ_LAC, μ_AMM, μ_mAb = p
#     # du[1] = μ_Xv*Xv  #dXv
#     # du[2] = -μ_GLC*Xv #dGLC
#     # du[3] = -μ_GLN*Xv #dGLN
#     # du[4] = μ_LAC*Xv #+ klac1*GLC + klac2*GLN   #dLAC
#     # du[5] = μ_AMM*Xv  #- klac1*GLC  #μ_AMM*Xv - kdeg*du[3] #dAMM #(eq10: dAMM)
#     # du[6] = μ_mAb*Xv
#     du1 = μ_Xv*Xv;  #dXv
#     du2 = -μ_GLC*Xv; #dGLC
#     du3 = -μ_GLN*Xv; #dGLN
#     du4 = μ_LAC*Xv; #+ klac1*GLC + klac2*GLN   #dLAC
#     du5 = μ_AMM*Xv;  #- klac1*GLC  #μ_AMM*Xv - kdeg*du[3] #dAMM #(eq10: dAMM)
#     du6 = μ_mAb*Xv;
#     return SVector(du1,du2,du3,du4,du5,du6)
# end



function ode_system(u, p, t)
    Xv, GLC, GLN, LAC, AMM, mAb = u
    μ_Xv, μ_GLC, μ_GLN, μ_LAC, μ_AMM, μ_mAb = p
    # du[1] = μ_Xv*Xv  #dXv
    # du[2] = -μ_GLC*Xv #dGLC
    # du[3] = -μ_GLN*Xv #dGLN
    # du[4] = μ_LAC*Xv #+ klac1*GLC + klac2*GLN   #dLAC
    # du[5] = μ_AMM*Xv  #- klac1*GLC  #μ_AMM*Xv - kdeg*du[3] #dAMM #(eq10: dAMM)
    # du[6] = μ_mAb*Xv
    du1 = μ_Xv*Xv;  #dXv
    du2 = -μ_GLC*Xv; #dGLC
    du3 = -μ_GLN*Xv; #dGLN
    du4 = μ_LAC*Xv; #+ klac1*GLC + klac2*GLN   #dLAC
    du5 = μ_AMM*Xv;  #- klac1*GLC  #μ_AMM*Xv - kdeg*du[3] #dAMM #(eq10: dAMM)
    du6 = μ_mAb*Xv;
    return Array([du1,du2,du3,du4,du5,du6])
end






# ODE system for mAb production used in "Bioprocess optimization under uncertainty using ensemble modeling (2017)"
function ode_system2!(du, u, p, t)
    Xv, Xt, GLC, GLN, LAC, AMM, MAb = u
    mu_max, Kglc, Kgln, KIlac, KIamm, mu_dmax, Kdamm, Klysis, Yxglc, mglc, Yxgln, alpha1, alpha2, Kdgln, Ylacglc, Yammgln, r1, r2 ,lambda = p

    mu = mu_max*(GLC/(Kglc+GLC))*(GLN/(Kgln+GLN))*(KIlac/(KIlac+LAC))*(KIamm/(KIamm+AMM));
    mu_d = mu_dmax/(1+(Kdamm/AMM)^2);

    du[1] = mu*Xv-mu_d*Xv;  #viable cell density XV
    du[2] = mu*Xv-Klysis*(Xt-Xv); #total cell density Xt
    du[3] = -(mu/Yxglc+mglc)*Xv;
    du[4] = -(mu/Yxgln+alpha1*GLN/(alpha2+GLN))*Xv - Kdgln*GLN;
    du[5] = Ylacglc*(mu/Yxglc+mglc)*Xv;
    du[6] = Yammgln*(mu/Yxgln+alpha1*GLN/(alpha2+GLN))*Xv+Kdgln*GLN;
    du[7] = (r2-r1*mu)*lambda*Xv;
end
#parameters from the paper "Bioprocess optimization under uncertainty using ensemble modeling (2017)"
p = [5.8e-2, 0.75, 0.075, 171.756, 28.484, 3e-2, 1.76, 0.05511, 1.061e8, 4.853e-14, 5.57e8, 3.4e-13, 4, 9.6e-3, 1.399, 4.27e-1, 0.1, 2, 7.21e-9 ]

u0 = [2e8   2e8   29.1   4.9  0.0  0.310  80.6; #SPN initial condition from "Bioprocess optimization under uncertainty using ensemble modeling(2017)"
      2e8   2e8   100    4.9  0.0  0.310  80.6; #SP1 In-silico Optimization of a Batch Bioreactor for mAbs Production in Relationship to the Net Evolution of the Hybridoma Cell Culture (2019)
      2e8   2e8   29.1   9.0  0.0  0.310  80.6; #SP2 In-silico Optimization of a Batch Bioreactor for mAbs Production in Relationship to the Net Evolution of the Hybridoma Cell Culture (2019)
      2e8   2e8   45.0   10   0.0  0.310  80.6; #SP3 In-silico Optimization of a Batch Bioreactor for mAbs Production in Relationship to the Net Evolution of the Hybridoma Cell Culture (2019)
      2e9   2e8   100    25   0.0  0.310  80.6] #SP4  In-silico Optimization of a Batch Bioreactor for mAbs Production in Relationship to the Net Evolution of the Hybridoma Cell Culture (2019)

prob =  ODEProblem(ode_system2!, u0[1,:], (tstart,tend), p)
sol_SPN_gt = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid)
sol_SPN_gt_7min = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid_large)
prob =  ODEProblem(ode_system2!, u0[2,:], (tstart,tend), p)
sol_SP1_gt = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid)
sol_SP1_gt_7min = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid_large)
prob =  ODEProblem(ode_system2!, u0[3,:], (tstart,tend), p)
sol_SP2_gt = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid)
sol_SP2_gt_7min = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid_large)
prob =  ODEProblem(ode_system2!, u0[4,:], (tstart,tend), p)
sol_SP3_gt = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid)
sol_SP3_gt_7min = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid_large)
prob =  ODEProblem(ode_system2!, u0[5,:], (tstart,tend), p)
sol_SP4_gt = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid)
sol_SP4_gt_7min = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid_large)



xdt=[(mAb_synthetic_dt.sol_SPN_trainingset1[:,:],sol_SPN_gt),
(mAb_synthetic_dt.sol_SPN_trainingset2[:,:],sol_SPN_gt),
(mAb_synthetic_dt.sol_SPN_trainingset3[:,:],sol_SPN_gt),
(mAb_synthetic_dt.sol_SPN_testingset1[:,:],sol_SPN_gt),
(mAb_synthetic_dt.sol_SPN_testingset2[:,:],sol_SPN_gt),
# (mAb_synthetic_dt.sol_SPN_testingset3[:,:],sol_SPN_gt),
# (mAb_synthetic_dt.sol_SPN_testingset4[:,:],sol_SPN_gt),

(mAb_synthetic_dt.sol_SP1_trainingset1[:,:],sol_SP1_gt),
(mAb_synthetic_dt.sol_SP1_trainingset2[:,:],sol_SP1_gt),
(mAb_synthetic_dt.sol_SP1_trainingset3[:,:],sol_SP1_gt),
(mAb_synthetic_dt.sol_SP1_testingset1[:,:],sol_SP1_gt),
(mAb_synthetic_dt.sol_SP1_testingset2[:,:],sol_SP1_gt),
# (mAb_synthetic_dt.sol_SP1_testingset3[:,:],sol_SPN_gt),
# (mAb_synthetic_dt.sol_SP1_testingset4[:,:],sol_SPN_gt),

(mAb_synthetic_dt.sol_SP2_trainingset1[:,:],sol_SP2_gt),
(mAb_synthetic_dt.sol_SP2_trainingset2[:,:],sol_SP2_gt),
(mAb_synthetic_dt.sol_SP2_trainingset3[:,:],sol_SP2_gt),
(mAb_synthetic_dt.sol_SP2_testingset1[:,:],sol_SP2_gt),
(mAb_synthetic_dt.sol_SP2_testingset2[:,:],sol_SP2_gt),
# (mAb_synthetic_dt.sol_SP2_testingset3[:,:],sol_SPN_gt),
# (mAb_synthetic_dt.sol_SP2_testingset4[:,:],sol_SPN_gt),

(mAb_synthetic_dt.sol_SP3_trainingset1[:,:],sol_SP3_gt),
(mAb_synthetic_dt.sol_SP3_trainingset2[:,:],sol_SP3_gt),
(mAb_synthetic_dt.sol_SP3_trainingset3[:,:],sol_SP3_gt),
(mAb_synthetic_dt.sol_SP3_testingset1[:,:],sol_SP3_gt),
(mAb_synthetic_dt.sol_SP3_testingset2[:,:],sol_SP3_gt),
# (mAb_synthetic_dt.sol_SP3_testingset3[:,:],sol_SPN_gt),
# (mAb_synthetic_dt.sol_SP3_testingset4[:,:],sol_SPN_gt),

(mAb_synthetic_dt.sol_SP4_trainingset1[:,:],sol_SP4_gt),
(mAb_synthetic_dt.sol_SP4_trainingset2[:,:],sol_SP4_gt),
(mAb_synthetic_dt.sol_SP4_trainingset3[:,:],sol_SP4_gt),
(mAb_synthetic_dt.sol_SP4_testingset1[:,:],sol_SP4_gt),
(mAb_synthetic_dt.sol_SP4_testingset2[:,:],sol_SP4_gt)
# (mAb_synthetic_dt.sol_SP4_testingset3[:,:],sol_SPN_gt),
# (mAb_synthetic_dt.sol_SP4_testingset4[:,:],sol_SPN_gt),
]

#predictions with Ensemble of MLP.
for e in xdt
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_EnMLP=[]
    for i=1:datasetsize
        u02=xtest[i,1:6] #state (t)
        p=ensemble_prediction(ensemble_MLP,xtest[i,:]) #parameters(t) with value ± std
        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        pp = Measurement{Float64}[]
        for j=1:length(p[1])
            push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
        end
        prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
        sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
        push!(pred_EnMLP,sol[:,end])
    end

    pred_EnMLP=vcat(map(x->x', pred_EnMLP)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for i = 1:6
        plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_EnMLP[:, i]), ribbon = Measurements.uncertainty.(pred_EnMLP[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
    end
    # plot(tgrid_opt[2:end],pred_EnMLP,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)
end





































































println("\n ************************* Testing BHM")

## testing BHM

# function unpack(nn_params::AbstractVector)
#     W4 = reshape(nn_params[1:192], 6, 32);
#     return W4 #, b1, W2, b2, W3, b3 , W4, b4
# end

function nn_forward_w3(xs, nn_params::AbstractVector)
    W3 = reshape(nn_params[1:1024], 32, 32); #unpack(nn_params)

    W1 = Float32[1.875037 1.1254121 -1.6523789 1.5346975 1.0946065 2.0236628 -1.781368; 1.1849939 2.4872336 0.16947997 0.24015091 0.76725644 1.0294813 0.008388019; 0.19933994 0.041592497 0.9930616 3.3768384 -0.16517787 -0.8620704 1.1798269; 0.6621956 0.5697205 1.6394995 0.62589717 -1.2822636 -0.524545 -1.0280635; 0.75996464 1.2655748 2.1498165 -3.9478884 -1.0966669 2.515487 1.6903596; -1.2811621 1.2494835 -1.1632073 -1.6594534 -0.28918305 0.67527246 -1.0473766; 0.71244764 -0.027102798 1.3396991 1.3735096 1.1200949 -0.49458805 -0.62206423; -0.11508237 -0.01922267 1.5188955 1.3123283 -1.5188425 1.9113997 -1.1606687; 1.1261019 -1.1684437 0.41439736 -0.26806295 0.95478123 0.20197538 -2.5004952; 0.027464751 -0.6694523 0.30190885 2.1730852 -1.3137022 1.3764294 0.59978926; -0.79648256 1.7893125 0.790273 -0.38281518 -0.62346935 -2.2573824 -1.6544231; -2.0673068 0.08959968 -1.2679441 -0.18318911 0.47558436 2.3448966 -0.60707825; 0.27717242 1.3110815 0.73451287 0.12156324 -0.08354788 2.129595 0.49636868; -0.5185398 0.8297732 1.4335537 0.7593017 1.6420763 -1.1676195 1.8847827; -2.9929762 -1.693472 1.7082407 0.5164434 0.7216979 0.34592497 -0.29277512; -2.4589424 -1.5406679 1.5259192 -0.50386685 0.1312101 -0.06828885 0.7239177; 0.32808805 2.0651217 1.3987501 0.9505764 0.21946955 0.42859954 0.30438864; -0.4769967 -0.1268065 -0.1480291 -1.02924 0.35529235 0.38330525 -1.8763349; 0.048549738 0.030717384 -0.015512208 -1.2850326 1.6933136 0.027674092 -2.0974805; -1.9203032 1.3332775 -1.0716028 1.0925014 -1.6358042 -0.42013207 0.32777017; -1.7994617 0.36843354 0.9200355 1.6104907 -2.8435357 1.0258245 0.82370746; -0.35568294 -0.8280433 0.48461705 1.5055448 -2.0833967 0.3492692 -0.7755077; 0.2661939 -2.2464447 -1.1077467 0.8937257 1.2601322 2.5857713 1.4310482; -1.8176641 -0.13798366 0.34108278 0.045400903 1.8629364 0.90406436 -0.8243387; 2.3616302 -1.7160623 -0.51216495 -0.9347112 1.1020021 -1.1571113 -0.46800578; -1.4990104 0.58605605 -0.7178554 2.190985 1.9242573 -1.3922927 -0.13934413; 0.18476129 -0.58578783 -0.34979632 -0.5602423 2.241023 0.7317399 0.791364; 1.63639 -0.43810016 -0.12454961 2.9972796 1.1618222 3.285467 -0.97797906; 2.7793767 0.76737785 1.2944779 0.46054885 1.7080824 0.1778659 -1.1738527; -0.79900515 -0.71591353 1.5848976 0.55842113 0.80082273 0.8786477 -2.3495617; 3.6012979 0.063776866 0.5981749 -2.592507 -1.0484397 2.325337 -0.12874882; 0.74201524 -0.38235232 -2.0198178 -0.31031093 -1.541383 2.096844 -0.29958856];

    b1 = Float32[-0.5862943, -1.0257035, -0.73381644, -0.7884702, -0.9117348, 0.47210136, -0.39930332, -0.4684479, 0.8132911, 0.10442278, -0.47558445, 0.37302473, -1.1047943, -1.9203515, 1.0013118, 0.14018516, -0.90396297, 0.21087494, -0.014168853, -0.15436468, -0.47222131, 0.7049316, -0.14248064, -0.05979966, 0.58153534, -0.2080053, 0.22227293, -0.8042843, -0.65096706, 1.0692599, -0.42351288, 0.40101072];

    W2 = Float32[0.6804578 0.28278744 -0.16062957 0.003617258 0.20550005 0.108358726 -0.21805543 -1.2395384 0.2651021 -0.39506698 -0.07302815 -0.39976382 -0.4350195 -0.786347 -0.24521859 -0.24244462 -0.4823956 0.13864286 0.12154219 -0.16243078 -0.0062925583 0.36619273 0.40894765 -0.8730386 0.45881024 0.19028683 0.4735364 -0.30296084 0.163885 -0.94565517 -0.42931226 0.52449936; 0.33783782 -0.026352651 -0.61394244 0.021516506 1.2301589 0.34718698 -0.14685811 -0.008993369 0.26710758 -0.28859836 -1.0791125 0.7238075 -0.39153883 -1.1735833 -0.34123835 1.3163664 0.23396589 0.13857539 0.21551442 -0.3418975 -0.74947274 0.48957902 0.43637353 -0.36320406 -0.29557323 -1.3391513 0.79894245 0.76839006 0.70723605 -0.0072257207 0.1975094 -0.46455154; 0.22135407 -0.04274687 -0.027500272 0.18261428 1.0965649 0.6275103 -0.07949413 0.5243795 -0.49724957 0.12507965 -0.098583706 0.4372843 0.5037246 0.53959846 0.42143255 0.64803094 0.33866796 0.28726885 -0.34238505 1.044006 1.6205139 0.22854239 -0.69306463 -0.010711789 -0.9478157 -0.27787638 -0.78522116 0.20476232 -0.021236647 -0.276219 0.16580921 0.5511922; -0.70297796 0.13440835 0.3034858 -0.040962774 -0.735138 0.11831725 0.5726754 -0.10165633 -1.514815 -0.55316025 0.6250016 -0.32225117 -1.06863 0.6073781 1.071829 -0.62786734 -0.27038962 -0.115030475 0.057949048 0.97683513 -0.29900977 -0.513571 -0.2551261 -0.31764352 -0.29343614 0.23725978 -0.114166036 -1.0144721 -0.013780598 -0.80139196 0.21797249 -0.4791141; 0.7876804 0.28620636 -0.18961181 0.51386636 -0.73647004 0.23946537 0.09291557 -0.016553737 0.4055588 -1.0950317 0.79278785 0.09871724 -0.7767456 -0.05732626 0.001377365 -0.5952586 -0.10937494 0.8213527 1.4163476 -0.36974895 -0.6848033 -0.38359392 -0.6628976 0.18038419 0.2519996 -0.45263684 -0.2876166 -0.00801974 0.97684884 0.20885868 0.2630963 -1.069334; 0.45711675 0.06855 -0.20560654 -0.32751033 -0.87659186 -0.4965555 -0.028360793 -0.8580177 0.24791005 -0.5263438 -0.03758844 -0.2295868 0.19470061 -0.041184463 0.28469923 0.030916156 0.21579422 -0.53276104 -0.37707728 -0.79075277 -0.2268347 -0.18494603 -0.8944732 -0.3347961 0.90557575 -0.06424967 0.55470526 -0.56250536 0.47358635 -0.1345762 -0.60011584 0.24250473; -0.29350466 0.074764185 -0.009236284 -0.29626754 -0.56052816 0.5646797 -0.2121066 0.7041961 0.3406658 0.3423991 -0.1421234 0.3608111 -0.32171628 -0.39548168 -0.010568233 0.02497404 0.050575104 0.5632225 0.5558513 1.1167912 1.001433 1.6693245 0.037179418 -0.38450903 0.1351926 -0.30633855 -0.6623628 1.5610305 0.15628275 0.32918492 -0.18280429 0.99898684; 0.27956858 -0.098384306 0.18173027 0.01950598 0.5231369 0.3322547 -0.16973236 0.37197882 0.04273077 0.101192325 -0.45348063 0.6381072 0.2314173 0.5165387 0.7410124 0.9529104 -0.015460607 0.28653076 0.056824885 0.38802797 0.99995506 0.8168981 1.1207236 0.5429204 -1.0965014 0.29174668 -0.28262246 -0.09756423 -0.09207589 0.7008973 0.16073634 -0.3110465; -1.2030644 -0.0065155197 -0.714288 -0.8825254 1.0336586 -0.3616806 -0.091413885 0.32343644 0.63779426 -0.3682627 0.053004388 -0.39101106 -0.2834184 0.9658016 -1.206136 -0.06255151 -0.2862205 0.16408482 0.92926383 -0.9429376 -0.743567 0.13996813 0.047444876 0.23971635 -0.013369507 -0.56138974 0.32058415 -0.2226674 -0.27874902 -0.8181476 0.72579706 0.20076035; -0.304472 0.50581104 -0.5311466 0.030244634 0.68945205 0.2883647 0.056860324 -0.01196088 -0.6864524 0.095864266 -0.4105283 0.18817955 0.057473324 0.6546966 -0.5918956 -0.1331269 -0.3546523 -0.7153028 -0.80127025 -0.21581103 -0.037816156 0.26543006 0.16293345 -1.3782732 -0.57398033 0.031027397 0.23228964 -0.8520563 -0.3236434 -0.36986324 0.3043048 0.018868294; 0.2358889 -0.1744168 -0.23070303 -0.71078753 0.32150388 -0.34426898 0.54629695 -0.6492414 1.0167751 -0.6688188 0.2763904 0.32957575 -0.54105294 0.2802947 0.17915215 -0.5265066 0.30204564 0.492982 1.0824558 -0.7519701 -0.69803506 -0.05770057 0.031800672 0.17596546 1.1358209 0.52126664 0.08418607 -0.72207546 0.65628654 0.20690034 0.26990867 0.26933023; -0.2153258 -0.37531933 -0.3213711 -0.7713467 0.8879553 -0.24639551 0.26179472 0.68988204 -0.22900099 -0.5327524 -0.531878 -0.6213712 0.8094931 0.2447153 0.516134 0.5738744 0.0013552507 -0.13802387 -0.31586388 0.18388829 0.546437 0.5725489 0.2875683 0.11236265 -0.2093088 0.38764358 0.22154008 -0.62339884 -0.3724608 0.17521787 0.26945996 1.2431315; -1.1115767 0.3668065 -0.5110412 -0.38102195 0.44194326 0.29720148 -0.9306929 -0.008222177 -0.55308074 -0.12275925 -0.9097665 0.2976609 -0.31130794 0.18216713 1.1452469 -0.028636586 0.35399425 -0.299265 -0.6043246 0.69573784 1.2809716 0.44314885 -0.5595561 -0.6748122 -0.43376833 -0.6399698 -0.35440314 -0.4965953 -1.4157776 -1.2511587 -1.4096491 0.65934074; -1.6268604 -0.14312524 0.88448405 -0.3878806 -0.18271802 -0.80289096 0.5376877 0.20375878 -0.6935337 -0.04585205 1.4076266 -0.84763014 0.7982694 1.5000187 0.41971686 0.4670378 1.150668 -0.073837675 0.27655286 -0.65429467 0.49072015 -0.4325563 -1.1566019 0.32678524 -1.0812366 0.8477287 0.15633914 0.21672897 0.9015538 0.23033306 0.16708148 -0.6673651; 0.09242403 0.3124562 0.44236058 0.837848 1.2064128 0.6774716 0.5902868 1.4065455 0.19898401 0.18404834 -0.45648342 0.013469535 0.44284073 0.40372497 -0.6151503 -0.5205165 0.4639506 -0.1916693 -0.41008732 -0.8887778 0.17101482 -0.06977456 -0.6687642 -0.398835 0.43554965 -1.2665881 -0.2682616 -0.1780306 1.0803628 -0.5677286 1.7777942 -0.20368701; 0.4636736 0.28923613 -0.44543144 -0.22644283 0.45252788 1.0713465 1.0088551 -0.73665124 0.7953326 -0.08357276 -0.29383615 0.46349943 0.013074085 1.141665 1.5931089 0.5899175 0.74403894 0.2316189 -0.102622904 -1.0550736 -1.3689787 0.16014934 -1.2883548 0.6546875 0.14091088 -0.24334326 0.16096213 0.28714582 0.6318463 1.2743468 -0.50615937 -0.3632507; 0.3724666 0.6914803 -1.1210195 -0.001972146 0.84032726 0.11019876 0.17261738 0.39148062 0.42928362 -0.14950636 -0.6792753 0.25465545 0.1643668 -0.9111263 -0.823761 -1.1041108 0.021653138 0.20858401 0.1215132 -0.7334359 -0.7876134 -0.18238051 1.2339101 -0.32385293 0.47484973 -0.9121168 0.71350276 0.7484179 0.26903462 0.45248514 1.2362026 0.83813083; -0.1063096 1.230548 1.013436 -0.38176104 -0.99578667 0.62979597 0.5448851 0.13644265 -0.9646988 0.2499442 0.73095256 -0.05834376 0.46030813 0.026497127 0.23656507 -1.2450308 0.62931687 -0.2099994 -0.55554515 0.84414244 0.16230969 -0.5151888 -0.4162749 0.12559879 -1.1020648 0.34401086 -0.019340625 -0.68636173 0.56621367 -0.884602 -0.19217668 -0.48976; -0.55319756 0.6440522 -0.78752035 -0.9735291 2.4976637 0.41762868 0.0005642082 0.56804436 -0.0075017656 -0.7280591 -0.54392993 0.7355064 0.8274273 0.6985056 0.9045392 0.04993315 0.63982 0.7420409 0.81586856 0.16749656 0.23839054 -0.0131988 1.3566971 0.32415766 -1.3908353 -0.7634782 0.90838027 1.6704242 -0.64029515 0.7658659 0.8873957 -0.47969258; -0.74401796 -0.10787654 -0.3337535 -0.046330463 -1.0877056 -0.22830212 0.0070232064 0.28722137 0.6835976 0.67511916 -0.23115022 0.5680029 -0.085950136 0.045425165 0.4701034 -0.015141951 -0.16157022 -0.26456013 -0.5619007 -0.2271631 0.7020972 -0.2584178 0.6517655 0.12286448 0.42245755 0.39919043 0.02584959 1.0314512 -1.034869 0.37470943 -0.25567427 0.6895296; 0.9602171 0.4841928 0.180371 -0.13784806 -1.2962365 0.3336268 0.21559283 -0.10600125 0.16315235 0.6044462 -0.87217975 0.8798517 0.3759277 0.40876153 -0.08292098 -0.85712755 0.55440253 -0.66651535 -0.87244403 0.7698026 0.26602066 -0.28476864 0.106833234 -0.10706385 -0.40229046 0.72398055 0.20877957 0.42801732 0.515314 1.2247268 -0.51015186 -0.06907187; 0.01531509 0.94129175 1.806051 0.89205474 0.37373948 -0.7144353 0.5830645 0.532031 0.40500808 0.56885266 -0.4537285 -0.6024207 0.7663738 0.21140529 -0.6356773 -0.49589878 0.49413204 -0.16252336 -0.25606123 -0.7266703 -0.3488212 0.087134466 -0.8686055 -0.6992168 0.18692514 -0.41377038 0.40132564 0.7524265 0.888652 0.36481518 1.43236 -0.6307168; -0.12541512 0.76520324 -0.2363976 0.36876383 -0.5792033 -0.17704317 -0.45786542 0.14868936 -0.011869221 0.62032396 -0.49721217 -0.30655134 0.2632675 0.07469976 -0.2782349 -0.7388224 -0.049047325 -0.3064054 -0.26386303 0.2511813 0.6401712 0.120278955 0.16926213 -0.88229877 0.54641473 0.29656053 -0.28711054 -0.6940683 0.06902513 0.20097944 -0.29925114 0.88764703; 0.31474006 0.16944 -0.51041496 -0.9561099 0.105035074 0.65727085 -0.73705125 -0.5643329 -0.58895445 -0.2849398 0.8125123 0.52644473 0.51976913 0.4096798 0.12286528 -0.20393394 0.6573325 0.335912 -0.21335545 0.62881315 -0.0012894508 -0.47115496 -0.29708484 0.26767814 -1.1024895 0.52267313 0.96034926 0.2352085 -0.28588685 -0.15012917 -1.0044868 0.84393835; -0.11659277 -0.54613215 -0.9675873 0.18434334 0.35940585 0.44585228 -0.22042221 -0.09958735 0.79137796 -0.61615974 0.17193149 0.041879755 -0.34443694 -0.5714356 0.14246969 0.5321053 -0.61877275 0.793345 0.05105399 -0.06159033 -0.3184359 0.729116 -0.04772824 0.3622838 0.24367277 -0.39130142 -0.40524408 -0.35362515 -0.026669849 0.849495 0.64475584 0.6074278; -0.7158928 -0.842865 -0.761251 -0.5118484 -0.027548656 0.5879605 -0.2400839 -0.8221961 -0.07768324 -1.044397 0.72454023 0.31586227 -0.7736568 0.99743104 0.23666134 1.022919 -0.7012109 0.28081825 0.64917755 0.74108547 -0.013627707 -0.21241789 0.12344267 0.66715413 -0.06546625 0.6090162 0.18089062 -1.3738139 -0.10932159 -0.8389805 -0.6439139 -0.22149947; -1.2704676 0.5447812 -0.6442816 0.12122076 -0.0021443095 -0.33631468 -0.071105815 -0.0033960661 -0.95218825 -0.76136166 -0.013476173 0.11959386 0.065317236 -0.32715222 -0.44465986 -0.29733655 0.089837626 -0.57485765 -0.15102671 -0.67661035 -0.64786386 -0.62109685 -0.13730153 -1.2225087 0.03402459 -0.1736835 0.72688556 -0.8051181 -0.088483244 -0.845415 1.4065837 0.86934173; 0.19149022 0.4719401 -0.23021364 -0.08310467 -1.4916842 -0.21688884 0.61525214 0.41014278 0.1410259 0.18026592 -0.25848117 -0.42228192 -0.39462453 -1.0086232 -0.35203338 0.2098197 0.59412336 -0.12688336 -0.5407948 0.38060486 0.1519711 0.9413621 0.47547805 -0.5832145 0.78208506 -0.024454389 -0.76527876 -1.1062464 -0.48900852 -0.2864733 -1.6859107 -0.23503137; 0.82181257 -0.47815078 0.4807471 -0.5887729 -1.0121493 -0.67328334 0.50289387 0.22330512 0.6025479 1.2083777 -1.0969126 0.34283736 -0.27749562 -0.7754698 -0.4670164 -0.18404272 -0.5243201 -0.5662256 -0.2719042 0.13853337 0.23928441 0.36180764 -0.06982149 -0.12865067 0.38658735 0.35554925 0.3176503 0.8895351 -0.07446973 0.06466241 -0.5845471 0.34024388; -1.1468756 -0.81580293 0.3895001 -0.2822132 -2.2417054 -0.28091374 0.5782089 -0.1557909 1.2578785 -0.25311604 -0.3252115 -0.19776557 -1.2142341 -0.17751262 -0.4098602 -0.01455177 -0.15891944 -0.20254041 0.19103216 0.37672448 0.64937437 0.3618145 1.152375 0.014856128 0.19582961 0.63779587 0.10842551 0.4090225 -0.173552 0.6117327 -1.2470537 -0.5810952; -0.47916937 1.0296837 0.18977019 -0.5492241 0.2017495 -0.10156848 0.271921 -0.7552183 -0.09790941 0.53206813 -0.65959656 -0.25578186 0.6066777 0.065870516 0.10213259 -0.16077292 -0.025702735 -1.0526066 -0.6959036 0.25975952 -0.11542898 -0.11264547 0.33344865 -0.5069723 -0.036698665 0.34055012 0.3659064 0.43641794 0.2088635 -0.4153733 -0.08233093 0.32292828; 0.14402449 -0.29328355 -0.46196678 -0.50225437 -0.49673477 0.49743265 0.60233015 -1.3044418 -0.30664328 -0.43316045 0.24385011 0.6282748 -0.54672176 0.8907907 0.88847214 -0.22940457 0.28870344 0.03927299 -0.01771152 0.3719941 -0.7430466 -0.3138847 -0.4669159 -0.057468455 -0.1042561 1.439855 -0.0014644244 0.5380111 0.9509501 -0.04634559 -0.9033527 -0.10858981];
    b2 = Float32[-0.024882097, -0.0026112983, -0.36909348, -0.3232622, -0.2196465, -0.59232616, 0.8949424, 0.02158277, -0.35671902, 0.24836946, -0.7679545, 0.23118152, -0.15300319, -0.78421944, -0.39089328, 1.4769539, 0.4478099, 0.5264765, -0.16473249, 0.21223366, 0.7137157, 0.07046325, -0.1255484, -0.08307452, 0.24176377, 0.003734943, -0.15885453, 0.67915505, 0.58964086, -0.8239974, 0.23779191, 0.3168843];

    # W3 = Float32[0.20533809 -0.41106328 -0.13860254 -0.9629813 -1.8970687 1.2849605 -0.2933595 -0.15171514 -0.4165185 -0.6928103 -0.17867887 0.76894844 -0.5718053 0.24093434 0.028635355 -0.06264878 -1.2029189 0.25981468 -1.3077531 -0.15942237 0.17805019 -1.1511883 -0.14883801 -0.094123326 -0.7586343 -0.34404412 -0.97675776 -0.4489359 0.45948836 1.011673 -0.17085582 -0.017975973; -0.003431288 0.3152834 0.70252657 -0.09777866 -0.0053030844 0.2783946 -0.26229915 -0.08878146 -0.085553445 -1.3019373 0.45804593 -0.18755795 0.34766516 0.7152086 -0.78765404 0.75012267 -1.3544054 -0.34043288 0.08943082 0.7652809 0.4888276 -0.09777465 0.7596791 -0.090944245 -0.14069834 -0.36992648 -0.26704907 0.008221689 0.89677185 0.4329592 -0.714222 -0.84943515; 0.56904733 0.17504376 0.28854755 0.09572665 -0.40581352 0.41284147 -0.0057112374 0.30394274 0.16913141 0.96053165 0.109475434 -0.37139624 0.43607855 -0.083068386 0.6381161 -1.1899396 0.57652885 0.45696318 -0.052723635 0.6188653 -0.39031804 0.2884737 -0.31824863 -0.2821247 0.30768046 0.47670123 -0.014394795 0.16413312 0.19421284 -0.7101263 0.44064108 -0.07390463; -0.60895205 -0.47039413 0.8493678 -0.38134554 -0.27236724 -0.2058588 0.37010884 0.39831176 0.29724392 -0.006184312 -0.33475098 -0.10411036 0.24748781 -0.20170613 -0.38849002 0.106848024 0.61057365 0.45698315 -0.3311618 -0.001835474 0.88045245 -0.7171201 -0.16196401 0.50245607 0.56557894 -0.92618424 0.44310364 -0.39712504 0.2530503 0.16362709 0.9847707 -0.0140459165; 0.78485644 0.21132499 -0.40502962 0.7718285 0.52431065 0.38665143 1.141252 -0.57895774 -0.8373647 0.07425888 1.3806933 0.25263792 -0.1297495 -0.16778713 0.61304075 0.75618464 -0.7160821 -0.27886987 -0.26864353 1.0837059 0.73381305 0.5629915 -0.40475133 0.4277438 -0.15848136 0.67621416 0.45632136 0.014375546 -1.2467955 -1.2821281 -0.11040579 0.06503409; -0.2703146 0.1875931 -0.40155473 -0.9226945 0.06836379 -0.47382832 0.48336563 0.18997827 0.2158048 0.55636626 0.28721797 -0.19503492 0.31552386 -1.0133241 1.1343939 -0.24704874 -0.10203384 0.0021621205 -0.30289516 0.26202005 -0.09595472 1.2680929 0.18268265 0.10606413 -0.42846236 0.47300035 0.61256146 0.93701476 -0.030976905 0.14462939 0.023120664 0.4181796; 0.10650003 -0.26290697 0.12896772 -0.57226676 -0.83683443 0.08588602 1.4290771 -0.8962288 1.0557187 0.11511148 1.1467239 0.2890789 -0.23401637 0.8606264 -0.5984647 0.546435 -0.7260774 -0.06311277 -0.4676936 -0.35636067 0.040782366 -0.86782014 0.29178444 0.47208437 -0.18519579 0.4029162 -0.34106284 -0.37330404 1.2855341 0.017455123 0.12439004 -0.020192409; -0.15878695 -0.11058709 -0.917149 0.7173898 0.98591304 0.36140582 -0.45185465 0.2044787 0.6183655 0.0831367 0.3623041 -0.6660932 0.56418234 -0.7871292 0.76157326 0.20522758 0.6318065 0.07481962 0.38462707 -0.45445508 0.5231617 0.60979974 -0.10480109 0.26348817 -0.18641582 -0.87196064 0.64315253 -0.5659732 -0.08398706 0.83232933 -0.22633936 -1.5695454; 0.39522162 0.040808458 0.105590135 -0.20527735 -0.61461097 -0.18670207 0.3652957 0.018949922 0.259449 0.3710509 -0.2370716 0.27767697 -0.4642537 0.25213215 -0.329339 0.2623031 0.15991344 0.31908524 0.5148598 0.013437153 0.54495025 -0.27018836 0.008494594 0.47419402 0.51466066 -0.02030406 1.0749215 -0.22578251 0.284174 -0.47713622 0.2571574 -0.29624724; -0.5003752 0.6565755 -0.80164135 0.49640298 -0.2779677 -0.35386667 0.6145379 -0.3263268 -0.082682475 -0.096838795 -0.2708555 -0.21691626 0.4344354 -0.4131453 0.3206389 -0.5047892 -0.5229118 0.17373908 0.018003467 -0.24933258 0.05955161 0.80629545 0.561063 0.21223296 0.35120338 0.5539882 -0.92978966 -0.19012617 0.4800278 0.020132167 -0.884382 1.5051757; 0.121099554 -0.26606688 0.5210699 -0.72312814 0.81431526 -0.43965837 0.33886355 0.305351 -0.57911366 -0.5919334 0.55025077 -0.400003 -0.10531322 0.24621536 0.09560701 0.19587454 0.09810366 -0.21519232 0.37659216 -0.15607466 0.23025304 -0.061316337 0.14682932 0.53962034 -0.09318403 -0.5920732 -1.0777359 -0.039656207 -0.2503273 -0.07289091 -0.79139644 0.038511652; 0.06361816 0.06368567 0.6388758 0.44238767 -0.29413006 0.18579769 0.5862523 -0.04873731 -0.6760875 0.081307195 -0.4845632 -0.54353046 -0.76005316 0.16507946 -0.55671656 -0.5615992 -0.026148705 -0.97643036 1.0455039 -0.1435558 0.89068735 -0.2627344 0.13616155 -0.050076604 1.1800591 -0.57706165 -0.015379149 -0.72101104 -0.024073325 -0.2628846 -0.530888 -0.42902556; -0.56153977 -0.8300559 0.16272661 0.22803497 -0.21250488 -0.03731282 0.61002517 0.07317524 0.68190646 0.4657603 0.2984822 -0.36372203 0.6695763 -0.36650214 -0.11063412 0.33338147 -0.009859767 -0.40292373 -0.81652516 -0.00953016 -0.00499175 -0.114329845 -0.31784657 0.1256656 0.27594793 -0.41349208 0.26780745 0.44989538 -0.50770855 -0.214492 -0.4784485 0.16825265; -1.0645255 0.5670972 0.29013625 -0.5118309 -0.43315867 -0.30847085 -0.27285984 -1.0695767 -0.51913494 -0.26088488 -0.18751404 0.56152457 -0.5921344 -0.97768503 1.3775253 -0.6890664 0.25976604 -0.43159008 -0.17736456 0.24552828 0.70802224 0.029887417 -0.24188873 0.45184883 0.081353866 -0.14477733 0.8858056 0.28753993 0.78778046 -0.33710688 0.23086783 0.26611015; -0.25922218 0.015274936 -1.1301281 -0.3199793 0.12882903 0.7202563 -0.5542642 0.09365351 -0.20065123 0.19525711 -0.20032781 -0.65573764 0.6947152 1.0581138 0.33522478 -0.5788504 0.38627464 0.05794068 0.3801358 0.12969843 -0.92937315 0.13537383 0.4719745 0.018350616 0.4613548 -0.18742678 0.82934034 -0.16898543 -0.68629014 0.34723008 0.10037133 -0.26989684; -0.2386536 -0.3558992 -0.119833 0.16240567 -0.054123063 0.032777946 0.1656164 0.5719948 0.58294034 -0.0036629348 -0.19586322 0.74992317 0.18093714 0.30725762 0.5325633 1.4504414 -0.98382545 -0.013507771 -0.15530874 0.14125974 0.3307113 0.59122956 0.75299555 -0.7263225 0.075003155 -0.3223046 -1.0100417 0.94498837 0.06344029 -0.21185686 0.15188648 -1.6136254; 0.8220917 0.46249256 -0.074663654 -0.68922657 1.0237217 -0.57728314 -0.45082396 -0.3084664 -0.7800262 -0.6740943 -0.14482573 -0.15518674 0.27131346 -0.4972529 -0.42489508 -0.39656067 0.07116953 0.12217554 -0.31541085 0.33655894 0.23691405 -0.23816009 -0.119953446 -0.7194887 -0.7327876 1.3123885 0.31173646 -0.102879845 0.88043344 0.6088577 0.07690334 -0.12983635; 0.3049532 0.52583426 -0.17578627 0.25360933 -0.4535461 0.51730204 -0.7753481 -0.5613596 0.038597282 0.3214977 0.059778646 0.2541444 0.1746875 0.15680866 -0.0061979024 0.13059622 0.5677557 0.2889217 -0.21282496 0.30511042 0.73829234 -0.29422745 0.24612074 0.43805215 -0.29610744 -0.2310602 -0.16332798 -0.021024777 0.22765124 -0.18432538 1.05603 0.07234458; 0.08089099 0.43126377 -0.12257677 0.16330887 -0.39234674 0.3160227 -0.32843938 -0.50223225 -0.021194892 0.2532827 -0.35311946 -0.35717964 -0.93724704 0.23318264 -0.46555775 -0.28037107 0.22630703 -0.036279447 -0.30144987 0.4737101 0.7569835 0.534748 -0.7239464 0.39520028 0.16505164 0.1439391 -0.6046981 -0.728969 -1.1393597 0.012989725 -0.32945672 -0.61025536; -0.16186936 0.53796804 0.9421473 -0.028851613 0.1735877 -0.4081164 -0.21945576 0.9183022 0.19556288 -0.46995395 0.18259214 -0.13820551 0.38233638 -0.13599734 0.09532475 0.48965973 0.0025235205 -0.11164645 -0.42709288 0.69392055 -0.9386877 -0.19284086 0.34364325 0.2776211 0.10363195 -0.5270927 0.029742114 -0.3733432 -0.07980072 -0.74587536 0.04771048 0.5294218; -0.6275003 0.0062437695 0.33864737 -0.21033935 1.0037025 -0.061309207 -0.71686876 -0.13098218 -0.49981624 0.17041364 0.07081456 0.25011548 -1.178361 1.1034495 -0.6592523 -1.0418812 0.69207805 0.20910195 0.36815745 -0.3452859 0.22890642 0.9373714 -0.70594203 -0.85355496 0.6271394 -0.36761037 -0.710204 -0.026811518 -0.26573667 -0.851814 0.15622117 -0.95234495; 0.07737461 0.2684504 -0.74326646 -0.7289905 0.84057045 -0.3824491 -0.23659265 0.15755197 -0.54764974 -0.52715945 -0.18411624 -0.07445617 1.4923458 -0.6274286 0.5059 -0.4886202 -0.09926407 0.57401496 -0.5462063 0.9743261 0.6353918 0.102751605 0.9043702 -0.5993595 0.38819855 -0.2326868 0.11847116 -0.10742506 0.009600305 -0.7488709 0.69084793 -0.40949303; -0.65655756 0.028774533 -0.3075163 0.35020193 1.1051403 -0.2391326 0.76579034 -0.03189075 0.060260493 -0.98102474 -0.05869151 -1.1572254 -0.5543124 -0.046100795 -0.74026304 -0.026955456 0.4933696 0.41587666 0.6015443 0.11976287 -0.49970493 -0.48979834 -0.18240212 0.6163819 -0.33501205 0.915268 -0.2038153 -0.20916149 0.23959549 -0.3634735 -0.13311586 -0.056360304; 0.16936132 1.3396428 -0.35383773 1.1728534 0.45332032 -0.0032010977 0.20809615 -0.5235349 -0.8048 -0.16160615 -0.19460632 -0.56772923 0.14737442 -0.5766509 0.2497204 0.2729569 -0.2072811 0.55728155 0.1769998 -0.526481 -0.4527378 0.53569895 -0.08567722 -0.4656315 -0.48780426 -0.2524442 -0.06617268 0.37365723 -0.42084387 -0.95236737 0.20498559 -0.15856327; -0.6252873 0.8881259 0.16744298 0.6508085 0.19798778 0.33817062 0.46066564 -1.0895818 0.6103884 -0.83561283 -0.5097995 -0.8210106 -0.039535988 -1.0050058 -0.283068 0.8328649 -0.7692068 0.43549064 -0.0031561446 -0.8135245 0.38993856 -0.0015180141 -0.45542786 1.0001689 -0.8081253 -0.46413606 -0.7213118 0.16723627 0.4053587 -0.08728242 -0.17672482 -0.31738245; -0.09020152 -0.3287121 -0.8564197 -0.20122992 0.3383422 0.42448747 0.09676342 -0.6870097 -0.31108147 -0.24026436 0.6297489 -0.07493471 -0.0030458255 -0.3677668 0.87230337 0.27557212 0.68660736 0.20687939 1.4090599 -0.09768821 1.1616338 -0.14695847 -0.23005058 0.1385014 -0.14893463 0.28399062 -0.46969053 -0.51194257 -0.6228432 0.82455176 -0.09025867 -1.0238136; 0.033164177 0.4073328 -0.2379289 -0.95638174 0.2085064 0.99673826 -0.8801633 -0.7990414 -0.9353708 -0.5942693 1.3069148 -0.96540207 -0.32490483 1.4550121 0.3243065 -0.25895688 0.9764331 -0.38080588 0.11790292 0.1631987 -0.22087109 -0.2531914 0.09573213 0.13864882 -1.232544 0.049962763 -0.10745659 0.0519821 0.19529207 0.70539653 -0.81152725 0.25654235; 0.25897238 0.56906855 0.30572695 -0.97500116 0.36226273 -0.0011385776 -0.40533233 0.7699807 0.21128651 0.046626553 -0.5228392 0.50576764 0.70584273 -0.8224552 0.025292132 -0.08733732 0.016865171 0.062033843 -0.5151933 0.36036342 0.12122896 -0.8400108 0.26983538 -0.28684938 0.33458784 -0.26931402 0.39285815 -0.06461715 0.25090224 -0.19342536 0.38475788 0.737818; 0.43106487 0.9448763 -0.25815988 -0.2876913 -0.28338835 -0.48259908 0.10531579 -0.06304436 0.44477743 0.09425497 0.19249567 0.33267435 0.2185132 0.5046082 -0.14975536 0.49735516 0.56801945 -0.5806736 0.728397 -0.4011794 -0.026351178 -0.18491933 -0.2064129 0.26191688 -0.21706139 0.16597424 0.37034184 -0.8605535 -0.22951788 0.688779 0.7764402 0.08641105; 0.3017974 -0.4953003 -0.35478014 -1.072422 0.483425 0.5370177 -0.4291917 -1.3480053 -0.78022975 -0.36800218 -0.9114689 0.022802943 -0.2626728 -0.45040363 -0.27740476 0.26829255 -0.8867265 0.542287 0.97306174 -1.0723906 0.13349046 -0.33906737 -0.43138194 0.88173777 0.11688897 0.6186026 -0.78321064 0.88472706 0.68348324 -0.033472225 -0.5648668 -0.43060964; 0.21109764 0.45646343 -0.6874206 -0.71367633 -0.30264026 0.3712082 0.10001916 -0.054534756 0.40804648 -0.038266122 0.031815294 -0.64124584 -0.56696105 -0.06836897 0.22854055 0.51355416 -0.43293756 0.38026983 0.88493526 0.9590771 0.29075357 0.6317953 0.2842665 -0.46547115 0.23635978 -0.32560155 0.48060194 0.04787019 -0.34551516 -0.4732386 0.9817961 0.32389495; -0.075336784 0.10892963 -0.40472057 -0.39212066 -0.09547349 0.1432483 -0.15125224 0.36515817 -0.21521585 0.39352208 0.66149676 0.66391486 -0.2947092 0.0667654 -0.13665143 -0.264737 0.084484816 0.76436764 0.13730898 0.6192258 1.491436 0.37673545 -0.020335613 0.1711287 0.46133414 -0.6490829 0.5746336 -0.019069642 0.746776 0.7809718 0.53210974 -0.09580776];
    b3 = Float32[0.096206784, -0.2390327, 0.48590726, 0.33061516, 0.39822403, 0.04388712, -0.48006204, 0.2879784, -0.101239145, -0.24840482, -0.34336218, 0.43773392, -0.57922417, -0.3526708, 0.3950133, 0.58662057, 1.1428145, 0.29346457, -0.60665536, -0.20996472, 1.0504376, 0.09317274, -0.47802052, 0.1008141, 0.8011498, 0.5504473, -0.88792354, -0.75492823, 0.43187365, 0.48290008, -0.118733235, 0.20117745];

    W4 = Float32[0.0031297675 -0.70070004 0.8609931 0.28424865 0.73844284 -1.0468863 -0.32860088 0.0988063 -1.3642232 0.77325034 0.49830607 0.77514035 -0.68814117 0.80704963 0.7959812 0.7480641 0.3744666 0.49263152 0.45191488 0.16332187 -0.56995994 -0.77170473 -1.0389373 -0.34489077 0.34291556 -0.10244019 0.59362555 0.74389505 0.15539353 0.1899106 -1.5217375 -0.20311601; -0.0066863163 -0.3111632 1.0110573 1.2317684 -0.075199775 1.1530871 0.24391438 -0.072974846 -1.0127448 -0.4068718 0.47339836 -0.33078194 0.036923498 -1.1896777 -0.16908185 0.19488816 -0.19540295 0.16024466 -0.20025593 0.33271435 0.1851974 -0.60534453 0.6017938 0.08742508 0.22183979 -0.06904843 0.14947869 0.13807409 0.8157212 0.1824069 -0.15710667 0.77015895; 0.16761957 0.25973806 -1.3161138 -0.6291167 -0.40240613 1.1675882 1.0824345 -0.29067847 0.6048037 0.037276562 -0.5730638 0.19791251 -1.1759266 -0.019520508 0.5878012 0.17267728 -0.40459317 1.563563 0.011813549 1.1577456 -0.21838816 -0.7632831 0.16991402 1.1393272 -0.30929962 0.07673578 -0.10498064 0.15019126 -0.70707935 0.0143744685 -0.1319971 -0.8494896; -0.75333583 -0.18384708 -0.84190685 0.621681 0.8295873 1.2645888 -0.52264804 -0.85007435 0.6606096 0.586767 0.9141163 -0.67816955 -0.45194674 0.726779 0.4645929 -0.16449206 1.1226655 -1.0033714 0.09481509 -1.0531461 -0.35410318 -0.53846633 -0.5113347 -0.4905315 -0.31545913 -0.0078586005 -0.4169571 -0.7125172 0.95861614 -0.7128779 -1.2073138 0.32758513; 0.64003235 -1.6026698 0.25690576 -0.3354347 -0.5581222 -0.4048775 -0.063088045 0.5021416 -0.4764712 -0.6271975 0.60528904 -0.40582922 0.9898907 -0.9195368 -1.0999287 0.33539888 0.54790586 -0.410485 0.6765621 0.8591869 -0.21187015 0.8766645 -0.71545327 -0.018755142 -0.44904998 0.75672394 -0.8077237 -1.1873738 0.6969679 0.53294504 -0.7517767 1.5618443; -0.20857494 0.78263754 0.43966517 -0.2038045 -0.10740324 -0.06593002 0.81966525 0.79707956 0.8587005 0.8884383 1.4313861 -1.2716031 -0.81835824 -0.5211389 -1.008655 0.050382778 -0.103212714 0.4735864 0.8186511 -0.48135093 0.07591491 0.5276123 -0.69539875 0.9083532 -1.8306369 -0.68301713 -0.07379727 -0.0968854 0.79073364 0.6050883 0.021014005 -1.2070093];
    b4 = Float32[0.6525144, -0.13996503, 0.86447346, -0.6117222, -0.13055107, 0.98097247];

    MLP = Chain(
        Dense(W1, b1, softsign),
        Dense(W2, b2, softsign),
        Dense(W3, b3, softsign),
        Dense(W4, b4)     #
    )
    return MLP(xs)
end


function nn_forward(xs, nn_params::AbstractVector)
    W4 = reshape(nn_params[1:192], 6, 32); #unpack(nn_params)

    W1 = Float32[1.875037 1.1254121 -1.6523789 1.5346975 1.0946065 2.0236628 -1.781368; 1.1849939 2.4872336 0.16947997 0.24015091 0.76725644 1.0294813 0.008388019; 0.19933994 0.041592497 0.9930616 3.3768384 -0.16517787 -0.8620704 1.1798269; 0.6621956 0.5697205 1.6394995 0.62589717 -1.2822636 -0.524545 -1.0280635; 0.75996464 1.2655748 2.1498165 -3.9478884 -1.0966669 2.515487 1.6903596; -1.2811621 1.2494835 -1.1632073 -1.6594534 -0.28918305 0.67527246 -1.0473766; 0.71244764 -0.027102798 1.3396991 1.3735096 1.1200949 -0.49458805 -0.62206423; -0.11508237 -0.01922267 1.5188955 1.3123283 -1.5188425 1.9113997 -1.1606687; 1.1261019 -1.1684437 0.41439736 -0.26806295 0.95478123 0.20197538 -2.5004952; 0.027464751 -0.6694523 0.30190885 2.1730852 -1.3137022 1.3764294 0.59978926; -0.79648256 1.7893125 0.790273 -0.38281518 -0.62346935 -2.2573824 -1.6544231; -2.0673068 0.08959968 -1.2679441 -0.18318911 0.47558436 2.3448966 -0.60707825; 0.27717242 1.3110815 0.73451287 0.12156324 -0.08354788 2.129595 0.49636868; -0.5185398 0.8297732 1.4335537 0.7593017 1.6420763 -1.1676195 1.8847827; -2.9929762 -1.693472 1.7082407 0.5164434 0.7216979 0.34592497 -0.29277512; -2.4589424 -1.5406679 1.5259192 -0.50386685 0.1312101 -0.06828885 0.7239177; 0.32808805 2.0651217 1.3987501 0.9505764 0.21946955 0.42859954 0.30438864; -0.4769967 -0.1268065 -0.1480291 -1.02924 0.35529235 0.38330525 -1.8763349; 0.048549738 0.030717384 -0.015512208 -1.2850326 1.6933136 0.027674092 -2.0974805; -1.9203032 1.3332775 -1.0716028 1.0925014 -1.6358042 -0.42013207 0.32777017; -1.7994617 0.36843354 0.9200355 1.6104907 -2.8435357 1.0258245 0.82370746; -0.35568294 -0.8280433 0.48461705 1.5055448 -2.0833967 0.3492692 -0.7755077; 0.2661939 -2.2464447 -1.1077467 0.8937257 1.2601322 2.5857713 1.4310482; -1.8176641 -0.13798366 0.34108278 0.045400903 1.8629364 0.90406436 -0.8243387; 2.3616302 -1.7160623 -0.51216495 -0.9347112 1.1020021 -1.1571113 -0.46800578; -1.4990104 0.58605605 -0.7178554 2.190985 1.9242573 -1.3922927 -0.13934413; 0.18476129 -0.58578783 -0.34979632 -0.5602423 2.241023 0.7317399 0.791364; 1.63639 -0.43810016 -0.12454961 2.9972796 1.1618222 3.285467 -0.97797906; 2.7793767 0.76737785 1.2944779 0.46054885 1.7080824 0.1778659 -1.1738527; -0.79900515 -0.71591353 1.5848976 0.55842113 0.80082273 0.8786477 -2.3495617; 3.6012979 0.063776866 0.5981749 -2.592507 -1.0484397 2.325337 -0.12874882; 0.74201524 -0.38235232 -2.0198178 -0.31031093 -1.541383 2.096844 -0.29958856];

    b1 = Float32[-0.5862943, -1.0257035, -0.73381644, -0.7884702, -0.9117348, 0.47210136, -0.39930332, -0.4684479, 0.8132911, 0.10442278, -0.47558445, 0.37302473, -1.1047943, -1.9203515, 1.0013118, 0.14018516, -0.90396297, 0.21087494, -0.014168853, -0.15436468, -0.47222131, 0.7049316, -0.14248064, -0.05979966, 0.58153534, -0.2080053, 0.22227293, -0.8042843, -0.65096706, 1.0692599, -0.42351288, 0.40101072];

    W2 = Float32[0.6804578 0.28278744 -0.16062957 0.003617258 0.20550005 0.108358726 -0.21805543 -1.2395384 0.2651021 -0.39506698 -0.07302815 -0.39976382 -0.4350195 -0.786347 -0.24521859 -0.24244462 -0.4823956 0.13864286 0.12154219 -0.16243078 -0.0062925583 0.36619273 0.40894765 -0.8730386 0.45881024 0.19028683 0.4735364 -0.30296084 0.163885 -0.94565517 -0.42931226 0.52449936; 0.33783782 -0.026352651 -0.61394244 0.021516506 1.2301589 0.34718698 -0.14685811 -0.008993369 0.26710758 -0.28859836 -1.0791125 0.7238075 -0.39153883 -1.1735833 -0.34123835 1.3163664 0.23396589 0.13857539 0.21551442 -0.3418975 -0.74947274 0.48957902 0.43637353 -0.36320406 -0.29557323 -1.3391513 0.79894245 0.76839006 0.70723605 -0.0072257207 0.1975094 -0.46455154; 0.22135407 -0.04274687 -0.027500272 0.18261428 1.0965649 0.6275103 -0.07949413 0.5243795 -0.49724957 0.12507965 -0.098583706 0.4372843 0.5037246 0.53959846 0.42143255 0.64803094 0.33866796 0.28726885 -0.34238505 1.044006 1.6205139 0.22854239 -0.69306463 -0.010711789 -0.9478157 -0.27787638 -0.78522116 0.20476232 -0.021236647 -0.276219 0.16580921 0.5511922; -0.70297796 0.13440835 0.3034858 -0.040962774 -0.735138 0.11831725 0.5726754 -0.10165633 -1.514815 -0.55316025 0.6250016 -0.32225117 -1.06863 0.6073781 1.071829 -0.62786734 -0.27038962 -0.115030475 0.057949048 0.97683513 -0.29900977 -0.513571 -0.2551261 -0.31764352 -0.29343614 0.23725978 -0.114166036 -1.0144721 -0.013780598 -0.80139196 0.21797249 -0.4791141; 0.7876804 0.28620636 -0.18961181 0.51386636 -0.73647004 0.23946537 0.09291557 -0.016553737 0.4055588 -1.0950317 0.79278785 0.09871724 -0.7767456 -0.05732626 0.001377365 -0.5952586 -0.10937494 0.8213527 1.4163476 -0.36974895 -0.6848033 -0.38359392 -0.6628976 0.18038419 0.2519996 -0.45263684 -0.2876166 -0.00801974 0.97684884 0.20885868 0.2630963 -1.069334; 0.45711675 0.06855 -0.20560654 -0.32751033 -0.87659186 -0.4965555 -0.028360793 -0.8580177 0.24791005 -0.5263438 -0.03758844 -0.2295868 0.19470061 -0.041184463 0.28469923 0.030916156 0.21579422 -0.53276104 -0.37707728 -0.79075277 -0.2268347 -0.18494603 -0.8944732 -0.3347961 0.90557575 -0.06424967 0.55470526 -0.56250536 0.47358635 -0.1345762 -0.60011584 0.24250473; -0.29350466 0.074764185 -0.009236284 -0.29626754 -0.56052816 0.5646797 -0.2121066 0.7041961 0.3406658 0.3423991 -0.1421234 0.3608111 -0.32171628 -0.39548168 -0.010568233 0.02497404 0.050575104 0.5632225 0.5558513 1.1167912 1.001433 1.6693245 0.037179418 -0.38450903 0.1351926 -0.30633855 -0.6623628 1.5610305 0.15628275 0.32918492 -0.18280429 0.99898684; 0.27956858 -0.098384306 0.18173027 0.01950598 0.5231369 0.3322547 -0.16973236 0.37197882 0.04273077 0.101192325 -0.45348063 0.6381072 0.2314173 0.5165387 0.7410124 0.9529104 -0.015460607 0.28653076 0.056824885 0.38802797 0.99995506 0.8168981 1.1207236 0.5429204 -1.0965014 0.29174668 -0.28262246 -0.09756423 -0.09207589 0.7008973 0.16073634 -0.3110465; -1.2030644 -0.0065155197 -0.714288 -0.8825254 1.0336586 -0.3616806 -0.091413885 0.32343644 0.63779426 -0.3682627 0.053004388 -0.39101106 -0.2834184 0.9658016 -1.206136 -0.06255151 -0.2862205 0.16408482 0.92926383 -0.9429376 -0.743567 0.13996813 0.047444876 0.23971635 -0.013369507 -0.56138974 0.32058415 -0.2226674 -0.27874902 -0.8181476 0.72579706 0.20076035; -0.304472 0.50581104 -0.5311466 0.030244634 0.68945205 0.2883647 0.056860324 -0.01196088 -0.6864524 0.095864266 -0.4105283 0.18817955 0.057473324 0.6546966 -0.5918956 -0.1331269 -0.3546523 -0.7153028 -0.80127025 -0.21581103 -0.037816156 0.26543006 0.16293345 -1.3782732 -0.57398033 0.031027397 0.23228964 -0.8520563 -0.3236434 -0.36986324 0.3043048 0.018868294; 0.2358889 -0.1744168 -0.23070303 -0.71078753 0.32150388 -0.34426898 0.54629695 -0.6492414 1.0167751 -0.6688188 0.2763904 0.32957575 -0.54105294 0.2802947 0.17915215 -0.5265066 0.30204564 0.492982 1.0824558 -0.7519701 -0.69803506 -0.05770057 0.031800672 0.17596546 1.1358209 0.52126664 0.08418607 -0.72207546 0.65628654 0.20690034 0.26990867 0.26933023; -0.2153258 -0.37531933 -0.3213711 -0.7713467 0.8879553 -0.24639551 0.26179472 0.68988204 -0.22900099 -0.5327524 -0.531878 -0.6213712 0.8094931 0.2447153 0.516134 0.5738744 0.0013552507 -0.13802387 -0.31586388 0.18388829 0.546437 0.5725489 0.2875683 0.11236265 -0.2093088 0.38764358 0.22154008 -0.62339884 -0.3724608 0.17521787 0.26945996 1.2431315; -1.1115767 0.3668065 -0.5110412 -0.38102195 0.44194326 0.29720148 -0.9306929 -0.008222177 -0.55308074 -0.12275925 -0.9097665 0.2976609 -0.31130794 0.18216713 1.1452469 -0.028636586 0.35399425 -0.299265 -0.6043246 0.69573784 1.2809716 0.44314885 -0.5595561 -0.6748122 -0.43376833 -0.6399698 -0.35440314 -0.4965953 -1.4157776 -1.2511587 -1.4096491 0.65934074; -1.6268604 -0.14312524 0.88448405 -0.3878806 -0.18271802 -0.80289096 0.5376877 0.20375878 -0.6935337 -0.04585205 1.4076266 -0.84763014 0.7982694 1.5000187 0.41971686 0.4670378 1.150668 -0.073837675 0.27655286 -0.65429467 0.49072015 -0.4325563 -1.1566019 0.32678524 -1.0812366 0.8477287 0.15633914 0.21672897 0.9015538 0.23033306 0.16708148 -0.6673651; 0.09242403 0.3124562 0.44236058 0.837848 1.2064128 0.6774716 0.5902868 1.4065455 0.19898401 0.18404834 -0.45648342 0.013469535 0.44284073 0.40372497 -0.6151503 -0.5205165 0.4639506 -0.1916693 -0.41008732 -0.8887778 0.17101482 -0.06977456 -0.6687642 -0.398835 0.43554965 -1.2665881 -0.2682616 -0.1780306 1.0803628 -0.5677286 1.7777942 -0.20368701; 0.4636736 0.28923613 -0.44543144 -0.22644283 0.45252788 1.0713465 1.0088551 -0.73665124 0.7953326 -0.08357276 -0.29383615 0.46349943 0.013074085 1.141665 1.5931089 0.5899175 0.74403894 0.2316189 -0.102622904 -1.0550736 -1.3689787 0.16014934 -1.2883548 0.6546875 0.14091088 -0.24334326 0.16096213 0.28714582 0.6318463 1.2743468 -0.50615937 -0.3632507; 0.3724666 0.6914803 -1.1210195 -0.001972146 0.84032726 0.11019876 0.17261738 0.39148062 0.42928362 -0.14950636 -0.6792753 0.25465545 0.1643668 -0.9111263 -0.823761 -1.1041108 0.021653138 0.20858401 0.1215132 -0.7334359 -0.7876134 -0.18238051 1.2339101 -0.32385293 0.47484973 -0.9121168 0.71350276 0.7484179 0.26903462 0.45248514 1.2362026 0.83813083; -0.1063096 1.230548 1.013436 -0.38176104 -0.99578667 0.62979597 0.5448851 0.13644265 -0.9646988 0.2499442 0.73095256 -0.05834376 0.46030813 0.026497127 0.23656507 -1.2450308 0.62931687 -0.2099994 -0.55554515 0.84414244 0.16230969 -0.5151888 -0.4162749 0.12559879 -1.1020648 0.34401086 -0.019340625 -0.68636173 0.56621367 -0.884602 -0.19217668 -0.48976; -0.55319756 0.6440522 -0.78752035 -0.9735291 2.4976637 0.41762868 0.0005642082 0.56804436 -0.0075017656 -0.7280591 -0.54392993 0.7355064 0.8274273 0.6985056 0.9045392 0.04993315 0.63982 0.7420409 0.81586856 0.16749656 0.23839054 -0.0131988 1.3566971 0.32415766 -1.3908353 -0.7634782 0.90838027 1.6704242 -0.64029515 0.7658659 0.8873957 -0.47969258; -0.74401796 -0.10787654 -0.3337535 -0.046330463 -1.0877056 -0.22830212 0.0070232064 0.28722137 0.6835976 0.67511916 -0.23115022 0.5680029 -0.085950136 0.045425165 0.4701034 -0.015141951 -0.16157022 -0.26456013 -0.5619007 -0.2271631 0.7020972 -0.2584178 0.6517655 0.12286448 0.42245755 0.39919043 0.02584959 1.0314512 -1.034869 0.37470943 -0.25567427 0.6895296; 0.9602171 0.4841928 0.180371 -0.13784806 -1.2962365 0.3336268 0.21559283 -0.10600125 0.16315235 0.6044462 -0.87217975 0.8798517 0.3759277 0.40876153 -0.08292098 -0.85712755 0.55440253 -0.66651535 -0.87244403 0.7698026 0.26602066 -0.28476864 0.106833234 -0.10706385 -0.40229046 0.72398055 0.20877957 0.42801732 0.515314 1.2247268 -0.51015186 -0.06907187; 0.01531509 0.94129175 1.806051 0.89205474 0.37373948 -0.7144353 0.5830645 0.532031 0.40500808 0.56885266 -0.4537285 -0.6024207 0.7663738 0.21140529 -0.6356773 -0.49589878 0.49413204 -0.16252336 -0.25606123 -0.7266703 -0.3488212 0.087134466 -0.8686055 -0.6992168 0.18692514 -0.41377038 0.40132564 0.7524265 0.888652 0.36481518 1.43236 -0.6307168; -0.12541512 0.76520324 -0.2363976 0.36876383 -0.5792033 -0.17704317 -0.45786542 0.14868936 -0.011869221 0.62032396 -0.49721217 -0.30655134 0.2632675 0.07469976 -0.2782349 -0.7388224 -0.049047325 -0.3064054 -0.26386303 0.2511813 0.6401712 0.120278955 0.16926213 -0.88229877 0.54641473 0.29656053 -0.28711054 -0.6940683 0.06902513 0.20097944 -0.29925114 0.88764703; 0.31474006 0.16944 -0.51041496 -0.9561099 0.105035074 0.65727085 -0.73705125 -0.5643329 -0.58895445 -0.2849398 0.8125123 0.52644473 0.51976913 0.4096798 0.12286528 -0.20393394 0.6573325 0.335912 -0.21335545 0.62881315 -0.0012894508 -0.47115496 -0.29708484 0.26767814 -1.1024895 0.52267313 0.96034926 0.2352085 -0.28588685 -0.15012917 -1.0044868 0.84393835; -0.11659277 -0.54613215 -0.9675873 0.18434334 0.35940585 0.44585228 -0.22042221 -0.09958735 0.79137796 -0.61615974 0.17193149 0.041879755 -0.34443694 -0.5714356 0.14246969 0.5321053 -0.61877275 0.793345 0.05105399 -0.06159033 -0.3184359 0.729116 -0.04772824 0.3622838 0.24367277 -0.39130142 -0.40524408 -0.35362515 -0.026669849 0.849495 0.64475584 0.6074278; -0.7158928 -0.842865 -0.761251 -0.5118484 -0.027548656 0.5879605 -0.2400839 -0.8221961 -0.07768324 -1.044397 0.72454023 0.31586227 -0.7736568 0.99743104 0.23666134 1.022919 -0.7012109 0.28081825 0.64917755 0.74108547 -0.013627707 -0.21241789 0.12344267 0.66715413 -0.06546625 0.6090162 0.18089062 -1.3738139 -0.10932159 -0.8389805 -0.6439139 -0.22149947; -1.2704676 0.5447812 -0.6442816 0.12122076 -0.0021443095 -0.33631468 -0.071105815 -0.0033960661 -0.95218825 -0.76136166 -0.013476173 0.11959386 0.065317236 -0.32715222 -0.44465986 -0.29733655 0.089837626 -0.57485765 -0.15102671 -0.67661035 -0.64786386 -0.62109685 -0.13730153 -1.2225087 0.03402459 -0.1736835 0.72688556 -0.8051181 -0.088483244 -0.845415 1.4065837 0.86934173; 0.19149022 0.4719401 -0.23021364 -0.08310467 -1.4916842 -0.21688884 0.61525214 0.41014278 0.1410259 0.18026592 -0.25848117 -0.42228192 -0.39462453 -1.0086232 -0.35203338 0.2098197 0.59412336 -0.12688336 -0.5407948 0.38060486 0.1519711 0.9413621 0.47547805 -0.5832145 0.78208506 -0.024454389 -0.76527876 -1.1062464 -0.48900852 -0.2864733 -1.6859107 -0.23503137; 0.82181257 -0.47815078 0.4807471 -0.5887729 -1.0121493 -0.67328334 0.50289387 0.22330512 0.6025479 1.2083777 -1.0969126 0.34283736 -0.27749562 -0.7754698 -0.4670164 -0.18404272 -0.5243201 -0.5662256 -0.2719042 0.13853337 0.23928441 0.36180764 -0.06982149 -0.12865067 0.38658735 0.35554925 0.3176503 0.8895351 -0.07446973 0.06466241 -0.5845471 0.34024388; -1.1468756 -0.81580293 0.3895001 -0.2822132 -2.2417054 -0.28091374 0.5782089 -0.1557909 1.2578785 -0.25311604 -0.3252115 -0.19776557 -1.2142341 -0.17751262 -0.4098602 -0.01455177 -0.15891944 -0.20254041 0.19103216 0.37672448 0.64937437 0.3618145 1.152375 0.014856128 0.19582961 0.63779587 0.10842551 0.4090225 -0.173552 0.6117327 -1.2470537 -0.5810952; -0.47916937 1.0296837 0.18977019 -0.5492241 0.2017495 -0.10156848 0.271921 -0.7552183 -0.09790941 0.53206813 -0.65959656 -0.25578186 0.6066777 0.065870516 0.10213259 -0.16077292 -0.025702735 -1.0526066 -0.6959036 0.25975952 -0.11542898 -0.11264547 0.33344865 -0.5069723 -0.036698665 0.34055012 0.3659064 0.43641794 0.2088635 -0.4153733 -0.08233093 0.32292828; 0.14402449 -0.29328355 -0.46196678 -0.50225437 -0.49673477 0.49743265 0.60233015 -1.3044418 -0.30664328 -0.43316045 0.24385011 0.6282748 -0.54672176 0.8907907 0.88847214 -0.22940457 0.28870344 0.03927299 -0.01771152 0.3719941 -0.7430466 -0.3138847 -0.4669159 -0.057468455 -0.1042561 1.439855 -0.0014644244 0.5380111 0.9509501 -0.04634559 -0.9033527 -0.10858981];
    b2 = Float32[-0.024882097, -0.0026112983, -0.36909348, -0.3232622, -0.2196465, -0.59232616, 0.8949424, 0.02158277, -0.35671902, 0.24836946, -0.7679545, 0.23118152, -0.15300319, -0.78421944, -0.39089328, 1.4769539, 0.4478099, 0.5264765, -0.16473249, 0.21223366, 0.7137157, 0.07046325, -0.1255484, -0.08307452, 0.24176377, 0.003734943, -0.15885453, 0.67915505, 0.58964086, -0.8239974, 0.23779191, 0.3168843];

    W3 = Float32[0.20533809 -0.41106328 -0.13860254 -0.9629813 -1.8970687 1.2849605 -0.2933595 -0.15171514 -0.4165185 -0.6928103 -0.17867887 0.76894844 -0.5718053 0.24093434 0.028635355 -0.06264878 -1.2029189 0.25981468 -1.3077531 -0.15942237 0.17805019 -1.1511883 -0.14883801 -0.094123326 -0.7586343 -0.34404412 -0.97675776 -0.4489359 0.45948836 1.011673 -0.17085582 -0.017975973; -0.003431288 0.3152834 0.70252657 -0.09777866 -0.0053030844 0.2783946 -0.26229915 -0.08878146 -0.085553445 -1.3019373 0.45804593 -0.18755795 0.34766516 0.7152086 -0.78765404 0.75012267 -1.3544054 -0.34043288 0.08943082 0.7652809 0.4888276 -0.09777465 0.7596791 -0.090944245 -0.14069834 -0.36992648 -0.26704907 0.008221689 0.89677185 0.4329592 -0.714222 -0.84943515; 0.56904733 0.17504376 0.28854755 0.09572665 -0.40581352 0.41284147 -0.0057112374 0.30394274 0.16913141 0.96053165 0.109475434 -0.37139624 0.43607855 -0.083068386 0.6381161 -1.1899396 0.57652885 0.45696318 -0.052723635 0.6188653 -0.39031804 0.2884737 -0.31824863 -0.2821247 0.30768046 0.47670123 -0.014394795 0.16413312 0.19421284 -0.7101263 0.44064108 -0.07390463; -0.60895205 -0.47039413 0.8493678 -0.38134554 -0.27236724 -0.2058588 0.37010884 0.39831176 0.29724392 -0.006184312 -0.33475098 -0.10411036 0.24748781 -0.20170613 -0.38849002 0.106848024 0.61057365 0.45698315 -0.3311618 -0.001835474 0.88045245 -0.7171201 -0.16196401 0.50245607 0.56557894 -0.92618424 0.44310364 -0.39712504 0.2530503 0.16362709 0.9847707 -0.0140459165; 0.78485644 0.21132499 -0.40502962 0.7718285 0.52431065 0.38665143 1.141252 -0.57895774 -0.8373647 0.07425888 1.3806933 0.25263792 -0.1297495 -0.16778713 0.61304075 0.75618464 -0.7160821 -0.27886987 -0.26864353 1.0837059 0.73381305 0.5629915 -0.40475133 0.4277438 -0.15848136 0.67621416 0.45632136 0.014375546 -1.2467955 -1.2821281 -0.11040579 0.06503409; -0.2703146 0.1875931 -0.40155473 -0.9226945 0.06836379 -0.47382832 0.48336563 0.18997827 0.2158048 0.55636626 0.28721797 -0.19503492 0.31552386 -1.0133241 1.1343939 -0.24704874 -0.10203384 0.0021621205 -0.30289516 0.26202005 -0.09595472 1.2680929 0.18268265 0.10606413 -0.42846236 0.47300035 0.61256146 0.93701476 -0.030976905 0.14462939 0.023120664 0.4181796; 0.10650003 -0.26290697 0.12896772 -0.57226676 -0.83683443 0.08588602 1.4290771 -0.8962288 1.0557187 0.11511148 1.1467239 0.2890789 -0.23401637 0.8606264 -0.5984647 0.546435 -0.7260774 -0.06311277 -0.4676936 -0.35636067 0.040782366 -0.86782014 0.29178444 0.47208437 -0.18519579 0.4029162 -0.34106284 -0.37330404 1.2855341 0.017455123 0.12439004 -0.020192409; -0.15878695 -0.11058709 -0.917149 0.7173898 0.98591304 0.36140582 -0.45185465 0.2044787 0.6183655 0.0831367 0.3623041 -0.6660932 0.56418234 -0.7871292 0.76157326 0.20522758 0.6318065 0.07481962 0.38462707 -0.45445508 0.5231617 0.60979974 -0.10480109 0.26348817 -0.18641582 -0.87196064 0.64315253 -0.5659732 -0.08398706 0.83232933 -0.22633936 -1.5695454; 0.39522162 0.040808458 0.105590135 -0.20527735 -0.61461097 -0.18670207 0.3652957 0.018949922 0.259449 0.3710509 -0.2370716 0.27767697 -0.4642537 0.25213215 -0.329339 0.2623031 0.15991344 0.31908524 0.5148598 0.013437153 0.54495025 -0.27018836 0.008494594 0.47419402 0.51466066 -0.02030406 1.0749215 -0.22578251 0.284174 -0.47713622 0.2571574 -0.29624724; -0.5003752 0.6565755 -0.80164135 0.49640298 -0.2779677 -0.35386667 0.6145379 -0.3263268 -0.082682475 -0.096838795 -0.2708555 -0.21691626 0.4344354 -0.4131453 0.3206389 -0.5047892 -0.5229118 0.17373908 0.018003467 -0.24933258 0.05955161 0.80629545 0.561063 0.21223296 0.35120338 0.5539882 -0.92978966 -0.19012617 0.4800278 0.020132167 -0.884382 1.5051757; 0.121099554 -0.26606688 0.5210699 -0.72312814 0.81431526 -0.43965837 0.33886355 0.305351 -0.57911366 -0.5919334 0.55025077 -0.400003 -0.10531322 0.24621536 0.09560701 0.19587454 0.09810366 -0.21519232 0.37659216 -0.15607466 0.23025304 -0.061316337 0.14682932 0.53962034 -0.09318403 -0.5920732 -1.0777359 -0.039656207 -0.2503273 -0.07289091 -0.79139644 0.038511652; 0.06361816 0.06368567 0.6388758 0.44238767 -0.29413006 0.18579769 0.5862523 -0.04873731 -0.6760875 0.081307195 -0.4845632 -0.54353046 -0.76005316 0.16507946 -0.55671656 -0.5615992 -0.026148705 -0.97643036 1.0455039 -0.1435558 0.89068735 -0.2627344 0.13616155 -0.050076604 1.1800591 -0.57706165 -0.015379149 -0.72101104 -0.024073325 -0.2628846 -0.530888 -0.42902556; -0.56153977 -0.8300559 0.16272661 0.22803497 -0.21250488 -0.03731282 0.61002517 0.07317524 0.68190646 0.4657603 0.2984822 -0.36372203 0.6695763 -0.36650214 -0.11063412 0.33338147 -0.009859767 -0.40292373 -0.81652516 -0.00953016 -0.00499175 -0.114329845 -0.31784657 0.1256656 0.27594793 -0.41349208 0.26780745 0.44989538 -0.50770855 -0.214492 -0.4784485 0.16825265; -1.0645255 0.5670972 0.29013625 -0.5118309 -0.43315867 -0.30847085 -0.27285984 -1.0695767 -0.51913494 -0.26088488 -0.18751404 0.56152457 -0.5921344 -0.97768503 1.3775253 -0.6890664 0.25976604 -0.43159008 -0.17736456 0.24552828 0.70802224 0.029887417 -0.24188873 0.45184883 0.081353866 -0.14477733 0.8858056 0.28753993 0.78778046 -0.33710688 0.23086783 0.26611015; -0.25922218 0.015274936 -1.1301281 -0.3199793 0.12882903 0.7202563 -0.5542642 0.09365351 -0.20065123 0.19525711 -0.20032781 -0.65573764 0.6947152 1.0581138 0.33522478 -0.5788504 0.38627464 0.05794068 0.3801358 0.12969843 -0.92937315 0.13537383 0.4719745 0.018350616 0.4613548 -0.18742678 0.82934034 -0.16898543 -0.68629014 0.34723008 0.10037133 -0.26989684; -0.2386536 -0.3558992 -0.119833 0.16240567 -0.054123063 0.032777946 0.1656164 0.5719948 0.58294034 -0.0036629348 -0.19586322 0.74992317 0.18093714 0.30725762 0.5325633 1.4504414 -0.98382545 -0.013507771 -0.15530874 0.14125974 0.3307113 0.59122956 0.75299555 -0.7263225 0.075003155 -0.3223046 -1.0100417 0.94498837 0.06344029 -0.21185686 0.15188648 -1.6136254; 0.8220917 0.46249256 -0.074663654 -0.68922657 1.0237217 -0.57728314 -0.45082396 -0.3084664 -0.7800262 -0.6740943 -0.14482573 -0.15518674 0.27131346 -0.4972529 -0.42489508 -0.39656067 0.07116953 0.12217554 -0.31541085 0.33655894 0.23691405 -0.23816009 -0.119953446 -0.7194887 -0.7327876 1.3123885 0.31173646 -0.102879845 0.88043344 0.6088577 0.07690334 -0.12983635; 0.3049532 0.52583426 -0.17578627 0.25360933 -0.4535461 0.51730204 -0.7753481 -0.5613596 0.038597282 0.3214977 0.059778646 0.2541444 0.1746875 0.15680866 -0.0061979024 0.13059622 0.5677557 0.2889217 -0.21282496 0.30511042 0.73829234 -0.29422745 0.24612074 0.43805215 -0.29610744 -0.2310602 -0.16332798 -0.021024777 0.22765124 -0.18432538 1.05603 0.07234458; 0.08089099 0.43126377 -0.12257677 0.16330887 -0.39234674 0.3160227 -0.32843938 -0.50223225 -0.021194892 0.2532827 -0.35311946 -0.35717964 -0.93724704 0.23318264 -0.46555775 -0.28037107 0.22630703 -0.036279447 -0.30144987 0.4737101 0.7569835 0.534748 -0.7239464 0.39520028 0.16505164 0.1439391 -0.6046981 -0.728969 -1.1393597 0.012989725 -0.32945672 -0.61025536; -0.16186936 0.53796804 0.9421473 -0.028851613 0.1735877 -0.4081164 -0.21945576 0.9183022 0.19556288 -0.46995395 0.18259214 -0.13820551 0.38233638 -0.13599734 0.09532475 0.48965973 0.0025235205 -0.11164645 -0.42709288 0.69392055 -0.9386877 -0.19284086 0.34364325 0.2776211 0.10363195 -0.5270927 0.029742114 -0.3733432 -0.07980072 -0.74587536 0.04771048 0.5294218; -0.6275003 0.0062437695 0.33864737 -0.21033935 1.0037025 -0.061309207 -0.71686876 -0.13098218 -0.49981624 0.17041364 0.07081456 0.25011548 -1.178361 1.1034495 -0.6592523 -1.0418812 0.69207805 0.20910195 0.36815745 -0.3452859 0.22890642 0.9373714 -0.70594203 -0.85355496 0.6271394 -0.36761037 -0.710204 -0.026811518 -0.26573667 -0.851814 0.15622117 -0.95234495; 0.07737461 0.2684504 -0.74326646 -0.7289905 0.84057045 -0.3824491 -0.23659265 0.15755197 -0.54764974 -0.52715945 -0.18411624 -0.07445617 1.4923458 -0.6274286 0.5059 -0.4886202 -0.09926407 0.57401496 -0.5462063 0.9743261 0.6353918 0.102751605 0.9043702 -0.5993595 0.38819855 -0.2326868 0.11847116 -0.10742506 0.009600305 -0.7488709 0.69084793 -0.40949303; -0.65655756 0.028774533 -0.3075163 0.35020193 1.1051403 -0.2391326 0.76579034 -0.03189075 0.060260493 -0.98102474 -0.05869151 -1.1572254 -0.5543124 -0.046100795 -0.74026304 -0.026955456 0.4933696 0.41587666 0.6015443 0.11976287 -0.49970493 -0.48979834 -0.18240212 0.6163819 -0.33501205 0.915268 -0.2038153 -0.20916149 0.23959549 -0.3634735 -0.13311586 -0.056360304; 0.16936132 1.3396428 -0.35383773 1.1728534 0.45332032 -0.0032010977 0.20809615 -0.5235349 -0.8048 -0.16160615 -0.19460632 -0.56772923 0.14737442 -0.5766509 0.2497204 0.2729569 -0.2072811 0.55728155 0.1769998 -0.526481 -0.4527378 0.53569895 -0.08567722 -0.4656315 -0.48780426 -0.2524442 -0.06617268 0.37365723 -0.42084387 -0.95236737 0.20498559 -0.15856327; -0.6252873 0.8881259 0.16744298 0.6508085 0.19798778 0.33817062 0.46066564 -1.0895818 0.6103884 -0.83561283 -0.5097995 -0.8210106 -0.039535988 -1.0050058 -0.283068 0.8328649 -0.7692068 0.43549064 -0.0031561446 -0.8135245 0.38993856 -0.0015180141 -0.45542786 1.0001689 -0.8081253 -0.46413606 -0.7213118 0.16723627 0.4053587 -0.08728242 -0.17672482 -0.31738245; -0.09020152 -0.3287121 -0.8564197 -0.20122992 0.3383422 0.42448747 0.09676342 -0.6870097 -0.31108147 -0.24026436 0.6297489 -0.07493471 -0.0030458255 -0.3677668 0.87230337 0.27557212 0.68660736 0.20687939 1.4090599 -0.09768821 1.1616338 -0.14695847 -0.23005058 0.1385014 -0.14893463 0.28399062 -0.46969053 -0.51194257 -0.6228432 0.82455176 -0.09025867 -1.0238136; 0.033164177 0.4073328 -0.2379289 -0.95638174 0.2085064 0.99673826 -0.8801633 -0.7990414 -0.9353708 -0.5942693 1.3069148 -0.96540207 -0.32490483 1.4550121 0.3243065 -0.25895688 0.9764331 -0.38080588 0.11790292 0.1631987 -0.22087109 -0.2531914 0.09573213 0.13864882 -1.232544 0.049962763 -0.10745659 0.0519821 0.19529207 0.70539653 -0.81152725 0.25654235; 0.25897238 0.56906855 0.30572695 -0.97500116 0.36226273 -0.0011385776 -0.40533233 0.7699807 0.21128651 0.046626553 -0.5228392 0.50576764 0.70584273 -0.8224552 0.025292132 -0.08733732 0.016865171 0.062033843 -0.5151933 0.36036342 0.12122896 -0.8400108 0.26983538 -0.28684938 0.33458784 -0.26931402 0.39285815 -0.06461715 0.25090224 -0.19342536 0.38475788 0.737818; 0.43106487 0.9448763 -0.25815988 -0.2876913 -0.28338835 -0.48259908 0.10531579 -0.06304436 0.44477743 0.09425497 0.19249567 0.33267435 0.2185132 0.5046082 -0.14975536 0.49735516 0.56801945 -0.5806736 0.728397 -0.4011794 -0.026351178 -0.18491933 -0.2064129 0.26191688 -0.21706139 0.16597424 0.37034184 -0.8605535 -0.22951788 0.688779 0.7764402 0.08641105; 0.3017974 -0.4953003 -0.35478014 -1.072422 0.483425 0.5370177 -0.4291917 -1.3480053 -0.78022975 -0.36800218 -0.9114689 0.022802943 -0.2626728 -0.45040363 -0.27740476 0.26829255 -0.8867265 0.542287 0.97306174 -1.0723906 0.13349046 -0.33906737 -0.43138194 0.88173777 0.11688897 0.6186026 -0.78321064 0.88472706 0.68348324 -0.033472225 -0.5648668 -0.43060964; 0.21109764 0.45646343 -0.6874206 -0.71367633 -0.30264026 0.3712082 0.10001916 -0.054534756 0.40804648 -0.038266122 0.031815294 -0.64124584 -0.56696105 -0.06836897 0.22854055 0.51355416 -0.43293756 0.38026983 0.88493526 0.9590771 0.29075357 0.6317953 0.2842665 -0.46547115 0.23635978 -0.32560155 0.48060194 0.04787019 -0.34551516 -0.4732386 0.9817961 0.32389495; -0.075336784 0.10892963 -0.40472057 -0.39212066 -0.09547349 0.1432483 -0.15125224 0.36515817 -0.21521585 0.39352208 0.66149676 0.66391486 -0.2947092 0.0667654 -0.13665143 -0.264737 0.084484816 0.76436764 0.13730898 0.6192258 1.491436 0.37673545 -0.020335613 0.1711287 0.46133414 -0.6490829 0.5746336 -0.019069642 0.746776 0.7809718 0.53210974 -0.09580776];
    b3 = Float32[0.096206784, -0.2390327, 0.48590726, 0.33061516, 0.39822403, 0.04388712, -0.48006204, 0.2879784, -0.101239145, -0.24840482, -0.34336218, 0.43773392, -0.57922417, -0.3526708, 0.3950133, 0.58662057, 1.1428145, 0.29346457, -0.60665536, -0.20996472, 1.0504376, 0.09317274, -0.47802052, 0.1008141, 0.8011498, 0.5504473, -0.88792354, -0.75492823, 0.43187365, 0.48290008, -0.118733235, 0.20117745];

    # W4 = Float32[0.0031297675 -0.70070004 0.8609931 0.28424865 0.73844284 -1.0468863 -0.32860088 0.0988063 -1.3642232 0.77325034 0.49830607 0.77514035 -0.68814117 0.80704963 0.7959812 0.7480641 0.3744666 0.49263152 0.45191488 0.16332187 -0.56995994 -0.77170473 -1.0389373 -0.34489077 0.34291556 -0.10244019 0.59362555 0.74389505 0.15539353 0.1899106 -1.5217375 -0.20311601; -0.0066863163 -0.3111632 1.0110573 1.2317684 -0.075199775 1.1530871 0.24391438 -0.072974846 -1.0127448 -0.4068718 0.47339836 -0.33078194 0.036923498 -1.1896777 -0.16908185 0.19488816 -0.19540295 0.16024466 -0.20025593 0.33271435 0.1851974 -0.60534453 0.6017938 0.08742508 0.22183979 -0.06904843 0.14947869 0.13807409 0.8157212 0.1824069 -0.15710667 0.77015895; 0.16761957 0.25973806 -1.3161138 -0.6291167 -0.40240613 1.1675882 1.0824345 -0.29067847 0.6048037 0.037276562 -0.5730638 0.19791251 -1.1759266 -0.019520508 0.5878012 0.17267728 -0.40459317 1.563563 0.011813549 1.1577456 -0.21838816 -0.7632831 0.16991402 1.1393272 -0.30929962 0.07673578 -0.10498064 0.15019126 -0.70707935 0.0143744685 -0.1319971 -0.8494896; -0.75333583 -0.18384708 -0.84190685 0.621681 0.8295873 1.2645888 -0.52264804 -0.85007435 0.6606096 0.586767 0.9141163 -0.67816955 -0.45194674 0.726779 0.4645929 -0.16449206 1.1226655 -1.0033714 0.09481509 -1.0531461 -0.35410318 -0.53846633 -0.5113347 -0.4905315 -0.31545913 -0.0078586005 -0.4169571 -0.7125172 0.95861614 -0.7128779 -1.2073138 0.32758513; 0.64003235 -1.6026698 0.25690576 -0.3354347 -0.5581222 -0.4048775 -0.063088045 0.5021416 -0.4764712 -0.6271975 0.60528904 -0.40582922 0.9898907 -0.9195368 -1.0999287 0.33539888 0.54790586 -0.410485 0.6765621 0.8591869 -0.21187015 0.8766645 -0.71545327 -0.018755142 -0.44904998 0.75672394 -0.8077237 -1.1873738 0.6969679 0.53294504 -0.7517767 1.5618443; -0.20857494 0.78263754 0.43966517 -0.2038045 -0.10740324 -0.06593002 0.81966525 0.79707956 0.8587005 0.8884383 1.4313861 -1.2716031 -0.81835824 -0.5211389 -1.008655 0.050382778 -0.103212714 0.4735864 0.8186511 -0.48135093 0.07591491 0.5276123 -0.69539875 0.9083532 -1.8306369 -0.68301713 -0.07379727 -0.0968854 0.79073364 0.6050883 0.021014005 -1.2070093];
    b4 = Float32[0.6525144, -0.13996503, 0.86447346, -0.6117222, -0.13055107, 0.98097247];

    MLP = Chain(
        Dense(W1, b1, softsign),
        Dense(W2, b2, softsign),
        Dense(W3, b3, softsign),
        Dense(W4, b4)     #
    )
    return MLP(xs)
end


function nn_forward2(xs, nn_params::AbstractVector)
    W1 = reshape(nn_params[1:224], 32,7); #unpack(nn_params)

    # W1 = Float32[1.875037 1.1254121 -1.6523789 1.5346975 1.0946065 2.0236628 -1.781368; 1.1849939 2.4872336 0.16947997 0.24015091 0.76725644 1.0294813 0.008388019; 0.19933994 0.041592497 0.9930616 3.3768384 -0.16517787 -0.8620704 1.1798269; 0.6621956 0.5697205 1.6394995 0.62589717 -1.2822636 -0.524545 -1.0280635; 0.75996464 1.2655748 2.1498165 -3.9478884 -1.0966669 2.515487 1.6903596; -1.2811621 1.2494835 -1.1632073 -1.6594534 -0.28918305 0.67527246 -1.0473766; 0.71244764 -0.027102798 1.3396991 1.3735096 1.1200949 -0.49458805 -0.62206423; -0.11508237 -0.01922267 1.5188955 1.3123283 -1.5188425 1.9113997 -1.1606687; 1.1261019 -1.1684437 0.41439736 -0.26806295 0.95478123 0.20197538 -2.5004952; 0.027464751 -0.6694523 0.30190885 2.1730852 -1.3137022 1.3764294 0.59978926; -0.79648256 1.7893125 0.790273 -0.38281518 -0.62346935 -2.2573824 -1.6544231; -2.0673068 0.08959968 -1.2679441 -0.18318911 0.47558436 2.3448966 -0.60707825; 0.27717242 1.3110815 0.73451287 0.12156324 -0.08354788 2.129595 0.49636868; -0.5185398 0.8297732 1.4335537 0.7593017 1.6420763 -1.1676195 1.8847827; -2.9929762 -1.693472 1.7082407 0.5164434 0.7216979 0.34592497 -0.29277512; -2.4589424 -1.5406679 1.5259192 -0.50386685 0.1312101 -0.06828885 0.7239177; 0.32808805 2.0651217 1.3987501 0.9505764 0.21946955 0.42859954 0.30438864; -0.4769967 -0.1268065 -0.1480291 -1.02924 0.35529235 0.38330525 -1.8763349; 0.048549738 0.030717384 -0.015512208 -1.2850326 1.6933136 0.027674092 -2.0974805; -1.9203032 1.3332775 -1.0716028 1.0925014 -1.6358042 -0.42013207 0.32777017; -1.7994617 0.36843354 0.9200355 1.6104907 -2.8435357 1.0258245 0.82370746; -0.35568294 -0.8280433 0.48461705 1.5055448 -2.0833967 0.3492692 -0.7755077; 0.2661939 -2.2464447 -1.1077467 0.8937257 1.2601322 2.5857713 1.4310482; -1.8176641 -0.13798366 0.34108278 0.045400903 1.8629364 0.90406436 -0.8243387; 2.3616302 -1.7160623 -0.51216495 -0.9347112 1.1020021 -1.1571113 -0.46800578; -1.4990104 0.58605605 -0.7178554 2.190985 1.9242573 -1.3922927 -0.13934413; 0.18476129 -0.58578783 -0.34979632 -0.5602423 2.241023 0.7317399 0.791364; 1.63639 -0.43810016 -0.12454961 2.9972796 1.1618222 3.285467 -0.97797906; 2.7793767 0.76737785 1.2944779 0.46054885 1.7080824 0.1778659 -1.1738527; -0.79900515 -0.71591353 1.5848976 0.55842113 0.80082273 0.8786477 -2.3495617; 3.6012979 0.063776866 0.5981749 -2.592507 -1.0484397 2.325337 -0.12874882; 0.74201524 -0.38235232 -2.0198178 -0.31031093 -1.541383 2.096844 -0.29958856];

    b1 = Float32[-0.5862943, -1.0257035, -0.73381644, -0.7884702, -0.9117348, 0.47210136, -0.39930332, -0.4684479, 0.8132911, 0.10442278, -0.47558445, 0.37302473, -1.1047943, -1.9203515, 1.0013118, 0.14018516, -0.90396297, 0.21087494, -0.014168853, -0.15436468, -0.47222131, 0.7049316, -0.14248064, -0.05979966, 0.58153534, -0.2080053, 0.22227293, -0.8042843, -0.65096706, 1.0692599, -0.42351288, 0.40101072];

    W2 = Float32[0.6804578 0.28278744 -0.16062957 0.003617258 0.20550005 0.108358726 -0.21805543 -1.2395384 0.2651021 -0.39506698 -0.07302815 -0.39976382 -0.4350195 -0.786347 -0.24521859 -0.24244462 -0.4823956 0.13864286 0.12154219 -0.16243078 -0.0062925583 0.36619273 0.40894765 -0.8730386 0.45881024 0.19028683 0.4735364 -0.30296084 0.163885 -0.94565517 -0.42931226 0.52449936; 0.33783782 -0.026352651 -0.61394244 0.021516506 1.2301589 0.34718698 -0.14685811 -0.008993369 0.26710758 -0.28859836 -1.0791125 0.7238075 -0.39153883 -1.1735833 -0.34123835 1.3163664 0.23396589 0.13857539 0.21551442 -0.3418975 -0.74947274 0.48957902 0.43637353 -0.36320406 -0.29557323 -1.3391513 0.79894245 0.76839006 0.70723605 -0.0072257207 0.1975094 -0.46455154; 0.22135407 -0.04274687 -0.027500272 0.18261428 1.0965649 0.6275103 -0.07949413 0.5243795 -0.49724957 0.12507965 -0.098583706 0.4372843 0.5037246 0.53959846 0.42143255 0.64803094 0.33866796 0.28726885 -0.34238505 1.044006 1.6205139 0.22854239 -0.69306463 -0.010711789 -0.9478157 -0.27787638 -0.78522116 0.20476232 -0.021236647 -0.276219 0.16580921 0.5511922; -0.70297796 0.13440835 0.3034858 -0.040962774 -0.735138 0.11831725 0.5726754 -0.10165633 -1.514815 -0.55316025 0.6250016 -0.32225117 -1.06863 0.6073781 1.071829 -0.62786734 -0.27038962 -0.115030475 0.057949048 0.97683513 -0.29900977 -0.513571 -0.2551261 -0.31764352 -0.29343614 0.23725978 -0.114166036 -1.0144721 -0.013780598 -0.80139196 0.21797249 -0.4791141; 0.7876804 0.28620636 -0.18961181 0.51386636 -0.73647004 0.23946537 0.09291557 -0.016553737 0.4055588 -1.0950317 0.79278785 0.09871724 -0.7767456 -0.05732626 0.001377365 -0.5952586 -0.10937494 0.8213527 1.4163476 -0.36974895 -0.6848033 -0.38359392 -0.6628976 0.18038419 0.2519996 -0.45263684 -0.2876166 -0.00801974 0.97684884 0.20885868 0.2630963 -1.069334; 0.45711675 0.06855 -0.20560654 -0.32751033 -0.87659186 -0.4965555 -0.028360793 -0.8580177 0.24791005 -0.5263438 -0.03758844 -0.2295868 0.19470061 -0.041184463 0.28469923 0.030916156 0.21579422 -0.53276104 -0.37707728 -0.79075277 -0.2268347 -0.18494603 -0.8944732 -0.3347961 0.90557575 -0.06424967 0.55470526 -0.56250536 0.47358635 -0.1345762 -0.60011584 0.24250473; -0.29350466 0.074764185 -0.009236284 -0.29626754 -0.56052816 0.5646797 -0.2121066 0.7041961 0.3406658 0.3423991 -0.1421234 0.3608111 -0.32171628 -0.39548168 -0.010568233 0.02497404 0.050575104 0.5632225 0.5558513 1.1167912 1.001433 1.6693245 0.037179418 -0.38450903 0.1351926 -0.30633855 -0.6623628 1.5610305 0.15628275 0.32918492 -0.18280429 0.99898684; 0.27956858 -0.098384306 0.18173027 0.01950598 0.5231369 0.3322547 -0.16973236 0.37197882 0.04273077 0.101192325 -0.45348063 0.6381072 0.2314173 0.5165387 0.7410124 0.9529104 -0.015460607 0.28653076 0.056824885 0.38802797 0.99995506 0.8168981 1.1207236 0.5429204 -1.0965014 0.29174668 -0.28262246 -0.09756423 -0.09207589 0.7008973 0.16073634 -0.3110465; -1.2030644 -0.0065155197 -0.714288 -0.8825254 1.0336586 -0.3616806 -0.091413885 0.32343644 0.63779426 -0.3682627 0.053004388 -0.39101106 -0.2834184 0.9658016 -1.206136 -0.06255151 -0.2862205 0.16408482 0.92926383 -0.9429376 -0.743567 0.13996813 0.047444876 0.23971635 -0.013369507 -0.56138974 0.32058415 -0.2226674 -0.27874902 -0.8181476 0.72579706 0.20076035; -0.304472 0.50581104 -0.5311466 0.030244634 0.68945205 0.2883647 0.056860324 -0.01196088 -0.6864524 0.095864266 -0.4105283 0.18817955 0.057473324 0.6546966 -0.5918956 -0.1331269 -0.3546523 -0.7153028 -0.80127025 -0.21581103 -0.037816156 0.26543006 0.16293345 -1.3782732 -0.57398033 0.031027397 0.23228964 -0.8520563 -0.3236434 -0.36986324 0.3043048 0.018868294; 0.2358889 -0.1744168 -0.23070303 -0.71078753 0.32150388 -0.34426898 0.54629695 -0.6492414 1.0167751 -0.6688188 0.2763904 0.32957575 -0.54105294 0.2802947 0.17915215 -0.5265066 0.30204564 0.492982 1.0824558 -0.7519701 -0.69803506 -0.05770057 0.031800672 0.17596546 1.1358209 0.52126664 0.08418607 -0.72207546 0.65628654 0.20690034 0.26990867 0.26933023; -0.2153258 -0.37531933 -0.3213711 -0.7713467 0.8879553 -0.24639551 0.26179472 0.68988204 -0.22900099 -0.5327524 -0.531878 -0.6213712 0.8094931 0.2447153 0.516134 0.5738744 0.0013552507 -0.13802387 -0.31586388 0.18388829 0.546437 0.5725489 0.2875683 0.11236265 -0.2093088 0.38764358 0.22154008 -0.62339884 -0.3724608 0.17521787 0.26945996 1.2431315; -1.1115767 0.3668065 -0.5110412 -0.38102195 0.44194326 0.29720148 -0.9306929 -0.008222177 -0.55308074 -0.12275925 -0.9097665 0.2976609 -0.31130794 0.18216713 1.1452469 -0.028636586 0.35399425 -0.299265 -0.6043246 0.69573784 1.2809716 0.44314885 -0.5595561 -0.6748122 -0.43376833 -0.6399698 -0.35440314 -0.4965953 -1.4157776 -1.2511587 -1.4096491 0.65934074; -1.6268604 -0.14312524 0.88448405 -0.3878806 -0.18271802 -0.80289096 0.5376877 0.20375878 -0.6935337 -0.04585205 1.4076266 -0.84763014 0.7982694 1.5000187 0.41971686 0.4670378 1.150668 -0.073837675 0.27655286 -0.65429467 0.49072015 -0.4325563 -1.1566019 0.32678524 -1.0812366 0.8477287 0.15633914 0.21672897 0.9015538 0.23033306 0.16708148 -0.6673651; 0.09242403 0.3124562 0.44236058 0.837848 1.2064128 0.6774716 0.5902868 1.4065455 0.19898401 0.18404834 -0.45648342 0.013469535 0.44284073 0.40372497 -0.6151503 -0.5205165 0.4639506 -0.1916693 -0.41008732 -0.8887778 0.17101482 -0.06977456 -0.6687642 -0.398835 0.43554965 -1.2665881 -0.2682616 -0.1780306 1.0803628 -0.5677286 1.7777942 -0.20368701; 0.4636736 0.28923613 -0.44543144 -0.22644283 0.45252788 1.0713465 1.0088551 -0.73665124 0.7953326 -0.08357276 -0.29383615 0.46349943 0.013074085 1.141665 1.5931089 0.5899175 0.74403894 0.2316189 -0.102622904 -1.0550736 -1.3689787 0.16014934 -1.2883548 0.6546875 0.14091088 -0.24334326 0.16096213 0.28714582 0.6318463 1.2743468 -0.50615937 -0.3632507; 0.3724666 0.6914803 -1.1210195 -0.001972146 0.84032726 0.11019876 0.17261738 0.39148062 0.42928362 -0.14950636 -0.6792753 0.25465545 0.1643668 -0.9111263 -0.823761 -1.1041108 0.021653138 0.20858401 0.1215132 -0.7334359 -0.7876134 -0.18238051 1.2339101 -0.32385293 0.47484973 -0.9121168 0.71350276 0.7484179 0.26903462 0.45248514 1.2362026 0.83813083; -0.1063096 1.230548 1.013436 -0.38176104 -0.99578667 0.62979597 0.5448851 0.13644265 -0.9646988 0.2499442 0.73095256 -0.05834376 0.46030813 0.026497127 0.23656507 -1.2450308 0.62931687 -0.2099994 -0.55554515 0.84414244 0.16230969 -0.5151888 -0.4162749 0.12559879 -1.1020648 0.34401086 -0.019340625 -0.68636173 0.56621367 -0.884602 -0.19217668 -0.48976; -0.55319756 0.6440522 -0.78752035 -0.9735291 2.4976637 0.41762868 0.0005642082 0.56804436 -0.0075017656 -0.7280591 -0.54392993 0.7355064 0.8274273 0.6985056 0.9045392 0.04993315 0.63982 0.7420409 0.81586856 0.16749656 0.23839054 -0.0131988 1.3566971 0.32415766 -1.3908353 -0.7634782 0.90838027 1.6704242 -0.64029515 0.7658659 0.8873957 -0.47969258; -0.74401796 -0.10787654 -0.3337535 -0.046330463 -1.0877056 -0.22830212 0.0070232064 0.28722137 0.6835976 0.67511916 -0.23115022 0.5680029 -0.085950136 0.045425165 0.4701034 -0.015141951 -0.16157022 -0.26456013 -0.5619007 -0.2271631 0.7020972 -0.2584178 0.6517655 0.12286448 0.42245755 0.39919043 0.02584959 1.0314512 -1.034869 0.37470943 -0.25567427 0.6895296; 0.9602171 0.4841928 0.180371 -0.13784806 -1.2962365 0.3336268 0.21559283 -0.10600125 0.16315235 0.6044462 -0.87217975 0.8798517 0.3759277 0.40876153 -0.08292098 -0.85712755 0.55440253 -0.66651535 -0.87244403 0.7698026 0.26602066 -0.28476864 0.106833234 -0.10706385 -0.40229046 0.72398055 0.20877957 0.42801732 0.515314 1.2247268 -0.51015186 -0.06907187; 0.01531509 0.94129175 1.806051 0.89205474 0.37373948 -0.7144353 0.5830645 0.532031 0.40500808 0.56885266 -0.4537285 -0.6024207 0.7663738 0.21140529 -0.6356773 -0.49589878 0.49413204 -0.16252336 -0.25606123 -0.7266703 -0.3488212 0.087134466 -0.8686055 -0.6992168 0.18692514 -0.41377038 0.40132564 0.7524265 0.888652 0.36481518 1.43236 -0.6307168; -0.12541512 0.76520324 -0.2363976 0.36876383 -0.5792033 -0.17704317 -0.45786542 0.14868936 -0.011869221 0.62032396 -0.49721217 -0.30655134 0.2632675 0.07469976 -0.2782349 -0.7388224 -0.049047325 -0.3064054 -0.26386303 0.2511813 0.6401712 0.120278955 0.16926213 -0.88229877 0.54641473 0.29656053 -0.28711054 -0.6940683 0.06902513 0.20097944 -0.29925114 0.88764703; 0.31474006 0.16944 -0.51041496 -0.9561099 0.105035074 0.65727085 -0.73705125 -0.5643329 -0.58895445 -0.2849398 0.8125123 0.52644473 0.51976913 0.4096798 0.12286528 -0.20393394 0.6573325 0.335912 -0.21335545 0.62881315 -0.0012894508 -0.47115496 -0.29708484 0.26767814 -1.1024895 0.52267313 0.96034926 0.2352085 -0.28588685 -0.15012917 -1.0044868 0.84393835; -0.11659277 -0.54613215 -0.9675873 0.18434334 0.35940585 0.44585228 -0.22042221 -0.09958735 0.79137796 -0.61615974 0.17193149 0.041879755 -0.34443694 -0.5714356 0.14246969 0.5321053 -0.61877275 0.793345 0.05105399 -0.06159033 -0.3184359 0.729116 -0.04772824 0.3622838 0.24367277 -0.39130142 -0.40524408 -0.35362515 -0.026669849 0.849495 0.64475584 0.6074278; -0.7158928 -0.842865 -0.761251 -0.5118484 -0.027548656 0.5879605 -0.2400839 -0.8221961 -0.07768324 -1.044397 0.72454023 0.31586227 -0.7736568 0.99743104 0.23666134 1.022919 -0.7012109 0.28081825 0.64917755 0.74108547 -0.013627707 -0.21241789 0.12344267 0.66715413 -0.06546625 0.6090162 0.18089062 -1.3738139 -0.10932159 -0.8389805 -0.6439139 -0.22149947; -1.2704676 0.5447812 -0.6442816 0.12122076 -0.0021443095 -0.33631468 -0.071105815 -0.0033960661 -0.95218825 -0.76136166 -0.013476173 0.11959386 0.065317236 -0.32715222 -0.44465986 -0.29733655 0.089837626 -0.57485765 -0.15102671 -0.67661035 -0.64786386 -0.62109685 -0.13730153 -1.2225087 0.03402459 -0.1736835 0.72688556 -0.8051181 -0.088483244 -0.845415 1.4065837 0.86934173; 0.19149022 0.4719401 -0.23021364 -0.08310467 -1.4916842 -0.21688884 0.61525214 0.41014278 0.1410259 0.18026592 -0.25848117 -0.42228192 -0.39462453 -1.0086232 -0.35203338 0.2098197 0.59412336 -0.12688336 -0.5407948 0.38060486 0.1519711 0.9413621 0.47547805 -0.5832145 0.78208506 -0.024454389 -0.76527876 -1.1062464 -0.48900852 -0.2864733 -1.6859107 -0.23503137; 0.82181257 -0.47815078 0.4807471 -0.5887729 -1.0121493 -0.67328334 0.50289387 0.22330512 0.6025479 1.2083777 -1.0969126 0.34283736 -0.27749562 -0.7754698 -0.4670164 -0.18404272 -0.5243201 -0.5662256 -0.2719042 0.13853337 0.23928441 0.36180764 -0.06982149 -0.12865067 0.38658735 0.35554925 0.3176503 0.8895351 -0.07446973 0.06466241 -0.5845471 0.34024388; -1.1468756 -0.81580293 0.3895001 -0.2822132 -2.2417054 -0.28091374 0.5782089 -0.1557909 1.2578785 -0.25311604 -0.3252115 -0.19776557 -1.2142341 -0.17751262 -0.4098602 -0.01455177 -0.15891944 -0.20254041 0.19103216 0.37672448 0.64937437 0.3618145 1.152375 0.014856128 0.19582961 0.63779587 0.10842551 0.4090225 -0.173552 0.6117327 -1.2470537 -0.5810952; -0.47916937 1.0296837 0.18977019 -0.5492241 0.2017495 -0.10156848 0.271921 -0.7552183 -0.09790941 0.53206813 -0.65959656 -0.25578186 0.6066777 0.065870516 0.10213259 -0.16077292 -0.025702735 -1.0526066 -0.6959036 0.25975952 -0.11542898 -0.11264547 0.33344865 -0.5069723 -0.036698665 0.34055012 0.3659064 0.43641794 0.2088635 -0.4153733 -0.08233093 0.32292828; 0.14402449 -0.29328355 -0.46196678 -0.50225437 -0.49673477 0.49743265 0.60233015 -1.3044418 -0.30664328 -0.43316045 0.24385011 0.6282748 -0.54672176 0.8907907 0.88847214 -0.22940457 0.28870344 0.03927299 -0.01771152 0.3719941 -0.7430466 -0.3138847 -0.4669159 -0.057468455 -0.1042561 1.439855 -0.0014644244 0.5380111 0.9509501 -0.04634559 -0.9033527 -0.10858981];
    b2 = Float32[-0.024882097, -0.0026112983, -0.36909348, -0.3232622, -0.2196465, -0.59232616, 0.8949424, 0.02158277, -0.35671902, 0.24836946, -0.7679545, 0.23118152, -0.15300319, -0.78421944, -0.39089328, 1.4769539, 0.4478099, 0.5264765, -0.16473249, 0.21223366, 0.7137157, 0.07046325, -0.1255484, -0.08307452, 0.24176377, 0.003734943, -0.15885453, 0.67915505, 0.58964086, -0.8239974, 0.23779191, 0.3168843];

    W3 = Float32[0.20533809 -0.41106328 -0.13860254 -0.9629813 -1.8970687 1.2849605 -0.2933595 -0.15171514 -0.4165185 -0.6928103 -0.17867887 0.76894844 -0.5718053 0.24093434 0.028635355 -0.06264878 -1.2029189 0.25981468 -1.3077531 -0.15942237 0.17805019 -1.1511883 -0.14883801 -0.094123326 -0.7586343 -0.34404412 -0.97675776 -0.4489359 0.45948836 1.011673 -0.17085582 -0.017975973; -0.003431288 0.3152834 0.70252657 -0.09777866 -0.0053030844 0.2783946 -0.26229915 -0.08878146 -0.085553445 -1.3019373 0.45804593 -0.18755795 0.34766516 0.7152086 -0.78765404 0.75012267 -1.3544054 -0.34043288 0.08943082 0.7652809 0.4888276 -0.09777465 0.7596791 -0.090944245 -0.14069834 -0.36992648 -0.26704907 0.008221689 0.89677185 0.4329592 -0.714222 -0.84943515; 0.56904733 0.17504376 0.28854755 0.09572665 -0.40581352 0.41284147 -0.0057112374 0.30394274 0.16913141 0.96053165 0.109475434 -0.37139624 0.43607855 -0.083068386 0.6381161 -1.1899396 0.57652885 0.45696318 -0.052723635 0.6188653 -0.39031804 0.2884737 -0.31824863 -0.2821247 0.30768046 0.47670123 -0.014394795 0.16413312 0.19421284 -0.7101263 0.44064108 -0.07390463; -0.60895205 -0.47039413 0.8493678 -0.38134554 -0.27236724 -0.2058588 0.37010884 0.39831176 0.29724392 -0.006184312 -0.33475098 -0.10411036 0.24748781 -0.20170613 -0.38849002 0.106848024 0.61057365 0.45698315 -0.3311618 -0.001835474 0.88045245 -0.7171201 -0.16196401 0.50245607 0.56557894 -0.92618424 0.44310364 -0.39712504 0.2530503 0.16362709 0.9847707 -0.0140459165; 0.78485644 0.21132499 -0.40502962 0.7718285 0.52431065 0.38665143 1.141252 -0.57895774 -0.8373647 0.07425888 1.3806933 0.25263792 -0.1297495 -0.16778713 0.61304075 0.75618464 -0.7160821 -0.27886987 -0.26864353 1.0837059 0.73381305 0.5629915 -0.40475133 0.4277438 -0.15848136 0.67621416 0.45632136 0.014375546 -1.2467955 -1.2821281 -0.11040579 0.06503409; -0.2703146 0.1875931 -0.40155473 -0.9226945 0.06836379 -0.47382832 0.48336563 0.18997827 0.2158048 0.55636626 0.28721797 -0.19503492 0.31552386 -1.0133241 1.1343939 -0.24704874 -0.10203384 0.0021621205 -0.30289516 0.26202005 -0.09595472 1.2680929 0.18268265 0.10606413 -0.42846236 0.47300035 0.61256146 0.93701476 -0.030976905 0.14462939 0.023120664 0.4181796; 0.10650003 -0.26290697 0.12896772 -0.57226676 -0.83683443 0.08588602 1.4290771 -0.8962288 1.0557187 0.11511148 1.1467239 0.2890789 -0.23401637 0.8606264 -0.5984647 0.546435 -0.7260774 -0.06311277 -0.4676936 -0.35636067 0.040782366 -0.86782014 0.29178444 0.47208437 -0.18519579 0.4029162 -0.34106284 -0.37330404 1.2855341 0.017455123 0.12439004 -0.020192409; -0.15878695 -0.11058709 -0.917149 0.7173898 0.98591304 0.36140582 -0.45185465 0.2044787 0.6183655 0.0831367 0.3623041 -0.6660932 0.56418234 -0.7871292 0.76157326 0.20522758 0.6318065 0.07481962 0.38462707 -0.45445508 0.5231617 0.60979974 -0.10480109 0.26348817 -0.18641582 -0.87196064 0.64315253 -0.5659732 -0.08398706 0.83232933 -0.22633936 -1.5695454; 0.39522162 0.040808458 0.105590135 -0.20527735 -0.61461097 -0.18670207 0.3652957 0.018949922 0.259449 0.3710509 -0.2370716 0.27767697 -0.4642537 0.25213215 -0.329339 0.2623031 0.15991344 0.31908524 0.5148598 0.013437153 0.54495025 -0.27018836 0.008494594 0.47419402 0.51466066 -0.02030406 1.0749215 -0.22578251 0.284174 -0.47713622 0.2571574 -0.29624724; -0.5003752 0.6565755 -0.80164135 0.49640298 -0.2779677 -0.35386667 0.6145379 -0.3263268 -0.082682475 -0.096838795 -0.2708555 -0.21691626 0.4344354 -0.4131453 0.3206389 -0.5047892 -0.5229118 0.17373908 0.018003467 -0.24933258 0.05955161 0.80629545 0.561063 0.21223296 0.35120338 0.5539882 -0.92978966 -0.19012617 0.4800278 0.020132167 -0.884382 1.5051757; 0.121099554 -0.26606688 0.5210699 -0.72312814 0.81431526 -0.43965837 0.33886355 0.305351 -0.57911366 -0.5919334 0.55025077 -0.400003 -0.10531322 0.24621536 0.09560701 0.19587454 0.09810366 -0.21519232 0.37659216 -0.15607466 0.23025304 -0.061316337 0.14682932 0.53962034 -0.09318403 -0.5920732 -1.0777359 -0.039656207 -0.2503273 -0.07289091 -0.79139644 0.038511652; 0.06361816 0.06368567 0.6388758 0.44238767 -0.29413006 0.18579769 0.5862523 -0.04873731 -0.6760875 0.081307195 -0.4845632 -0.54353046 -0.76005316 0.16507946 -0.55671656 -0.5615992 -0.026148705 -0.97643036 1.0455039 -0.1435558 0.89068735 -0.2627344 0.13616155 -0.050076604 1.1800591 -0.57706165 -0.015379149 -0.72101104 -0.024073325 -0.2628846 -0.530888 -0.42902556; -0.56153977 -0.8300559 0.16272661 0.22803497 -0.21250488 -0.03731282 0.61002517 0.07317524 0.68190646 0.4657603 0.2984822 -0.36372203 0.6695763 -0.36650214 -0.11063412 0.33338147 -0.009859767 -0.40292373 -0.81652516 -0.00953016 -0.00499175 -0.114329845 -0.31784657 0.1256656 0.27594793 -0.41349208 0.26780745 0.44989538 -0.50770855 -0.214492 -0.4784485 0.16825265; -1.0645255 0.5670972 0.29013625 -0.5118309 -0.43315867 -0.30847085 -0.27285984 -1.0695767 -0.51913494 -0.26088488 -0.18751404 0.56152457 -0.5921344 -0.97768503 1.3775253 -0.6890664 0.25976604 -0.43159008 -0.17736456 0.24552828 0.70802224 0.029887417 -0.24188873 0.45184883 0.081353866 -0.14477733 0.8858056 0.28753993 0.78778046 -0.33710688 0.23086783 0.26611015; -0.25922218 0.015274936 -1.1301281 -0.3199793 0.12882903 0.7202563 -0.5542642 0.09365351 -0.20065123 0.19525711 -0.20032781 -0.65573764 0.6947152 1.0581138 0.33522478 -0.5788504 0.38627464 0.05794068 0.3801358 0.12969843 -0.92937315 0.13537383 0.4719745 0.018350616 0.4613548 -0.18742678 0.82934034 -0.16898543 -0.68629014 0.34723008 0.10037133 -0.26989684; -0.2386536 -0.3558992 -0.119833 0.16240567 -0.054123063 0.032777946 0.1656164 0.5719948 0.58294034 -0.0036629348 -0.19586322 0.74992317 0.18093714 0.30725762 0.5325633 1.4504414 -0.98382545 -0.013507771 -0.15530874 0.14125974 0.3307113 0.59122956 0.75299555 -0.7263225 0.075003155 -0.3223046 -1.0100417 0.94498837 0.06344029 -0.21185686 0.15188648 -1.6136254; 0.8220917 0.46249256 -0.074663654 -0.68922657 1.0237217 -0.57728314 -0.45082396 -0.3084664 -0.7800262 -0.6740943 -0.14482573 -0.15518674 0.27131346 -0.4972529 -0.42489508 -0.39656067 0.07116953 0.12217554 -0.31541085 0.33655894 0.23691405 -0.23816009 -0.119953446 -0.7194887 -0.7327876 1.3123885 0.31173646 -0.102879845 0.88043344 0.6088577 0.07690334 -0.12983635; 0.3049532 0.52583426 -0.17578627 0.25360933 -0.4535461 0.51730204 -0.7753481 -0.5613596 0.038597282 0.3214977 0.059778646 0.2541444 0.1746875 0.15680866 -0.0061979024 0.13059622 0.5677557 0.2889217 -0.21282496 0.30511042 0.73829234 -0.29422745 0.24612074 0.43805215 -0.29610744 -0.2310602 -0.16332798 -0.021024777 0.22765124 -0.18432538 1.05603 0.07234458; 0.08089099 0.43126377 -0.12257677 0.16330887 -0.39234674 0.3160227 -0.32843938 -0.50223225 -0.021194892 0.2532827 -0.35311946 -0.35717964 -0.93724704 0.23318264 -0.46555775 -0.28037107 0.22630703 -0.036279447 -0.30144987 0.4737101 0.7569835 0.534748 -0.7239464 0.39520028 0.16505164 0.1439391 -0.6046981 -0.728969 -1.1393597 0.012989725 -0.32945672 -0.61025536; -0.16186936 0.53796804 0.9421473 -0.028851613 0.1735877 -0.4081164 -0.21945576 0.9183022 0.19556288 -0.46995395 0.18259214 -0.13820551 0.38233638 -0.13599734 0.09532475 0.48965973 0.0025235205 -0.11164645 -0.42709288 0.69392055 -0.9386877 -0.19284086 0.34364325 0.2776211 0.10363195 -0.5270927 0.029742114 -0.3733432 -0.07980072 -0.74587536 0.04771048 0.5294218; -0.6275003 0.0062437695 0.33864737 -0.21033935 1.0037025 -0.061309207 -0.71686876 -0.13098218 -0.49981624 0.17041364 0.07081456 0.25011548 -1.178361 1.1034495 -0.6592523 -1.0418812 0.69207805 0.20910195 0.36815745 -0.3452859 0.22890642 0.9373714 -0.70594203 -0.85355496 0.6271394 -0.36761037 -0.710204 -0.026811518 -0.26573667 -0.851814 0.15622117 -0.95234495; 0.07737461 0.2684504 -0.74326646 -0.7289905 0.84057045 -0.3824491 -0.23659265 0.15755197 -0.54764974 -0.52715945 -0.18411624 -0.07445617 1.4923458 -0.6274286 0.5059 -0.4886202 -0.09926407 0.57401496 -0.5462063 0.9743261 0.6353918 0.102751605 0.9043702 -0.5993595 0.38819855 -0.2326868 0.11847116 -0.10742506 0.009600305 -0.7488709 0.69084793 -0.40949303; -0.65655756 0.028774533 -0.3075163 0.35020193 1.1051403 -0.2391326 0.76579034 -0.03189075 0.060260493 -0.98102474 -0.05869151 -1.1572254 -0.5543124 -0.046100795 -0.74026304 -0.026955456 0.4933696 0.41587666 0.6015443 0.11976287 -0.49970493 -0.48979834 -0.18240212 0.6163819 -0.33501205 0.915268 -0.2038153 -0.20916149 0.23959549 -0.3634735 -0.13311586 -0.056360304; 0.16936132 1.3396428 -0.35383773 1.1728534 0.45332032 -0.0032010977 0.20809615 -0.5235349 -0.8048 -0.16160615 -0.19460632 -0.56772923 0.14737442 -0.5766509 0.2497204 0.2729569 -0.2072811 0.55728155 0.1769998 -0.526481 -0.4527378 0.53569895 -0.08567722 -0.4656315 -0.48780426 -0.2524442 -0.06617268 0.37365723 -0.42084387 -0.95236737 0.20498559 -0.15856327; -0.6252873 0.8881259 0.16744298 0.6508085 0.19798778 0.33817062 0.46066564 -1.0895818 0.6103884 -0.83561283 -0.5097995 -0.8210106 -0.039535988 -1.0050058 -0.283068 0.8328649 -0.7692068 0.43549064 -0.0031561446 -0.8135245 0.38993856 -0.0015180141 -0.45542786 1.0001689 -0.8081253 -0.46413606 -0.7213118 0.16723627 0.4053587 -0.08728242 -0.17672482 -0.31738245; -0.09020152 -0.3287121 -0.8564197 -0.20122992 0.3383422 0.42448747 0.09676342 -0.6870097 -0.31108147 -0.24026436 0.6297489 -0.07493471 -0.0030458255 -0.3677668 0.87230337 0.27557212 0.68660736 0.20687939 1.4090599 -0.09768821 1.1616338 -0.14695847 -0.23005058 0.1385014 -0.14893463 0.28399062 -0.46969053 -0.51194257 -0.6228432 0.82455176 -0.09025867 -1.0238136; 0.033164177 0.4073328 -0.2379289 -0.95638174 0.2085064 0.99673826 -0.8801633 -0.7990414 -0.9353708 -0.5942693 1.3069148 -0.96540207 -0.32490483 1.4550121 0.3243065 -0.25895688 0.9764331 -0.38080588 0.11790292 0.1631987 -0.22087109 -0.2531914 0.09573213 0.13864882 -1.232544 0.049962763 -0.10745659 0.0519821 0.19529207 0.70539653 -0.81152725 0.25654235; 0.25897238 0.56906855 0.30572695 -0.97500116 0.36226273 -0.0011385776 -0.40533233 0.7699807 0.21128651 0.046626553 -0.5228392 0.50576764 0.70584273 -0.8224552 0.025292132 -0.08733732 0.016865171 0.062033843 -0.5151933 0.36036342 0.12122896 -0.8400108 0.26983538 -0.28684938 0.33458784 -0.26931402 0.39285815 -0.06461715 0.25090224 -0.19342536 0.38475788 0.737818; 0.43106487 0.9448763 -0.25815988 -0.2876913 -0.28338835 -0.48259908 0.10531579 -0.06304436 0.44477743 0.09425497 0.19249567 0.33267435 0.2185132 0.5046082 -0.14975536 0.49735516 0.56801945 -0.5806736 0.728397 -0.4011794 -0.026351178 -0.18491933 -0.2064129 0.26191688 -0.21706139 0.16597424 0.37034184 -0.8605535 -0.22951788 0.688779 0.7764402 0.08641105; 0.3017974 -0.4953003 -0.35478014 -1.072422 0.483425 0.5370177 -0.4291917 -1.3480053 -0.78022975 -0.36800218 -0.9114689 0.022802943 -0.2626728 -0.45040363 -0.27740476 0.26829255 -0.8867265 0.542287 0.97306174 -1.0723906 0.13349046 -0.33906737 -0.43138194 0.88173777 0.11688897 0.6186026 -0.78321064 0.88472706 0.68348324 -0.033472225 -0.5648668 -0.43060964; 0.21109764 0.45646343 -0.6874206 -0.71367633 -0.30264026 0.3712082 0.10001916 -0.054534756 0.40804648 -0.038266122 0.031815294 -0.64124584 -0.56696105 -0.06836897 0.22854055 0.51355416 -0.43293756 0.38026983 0.88493526 0.9590771 0.29075357 0.6317953 0.2842665 -0.46547115 0.23635978 -0.32560155 0.48060194 0.04787019 -0.34551516 -0.4732386 0.9817961 0.32389495; -0.075336784 0.10892963 -0.40472057 -0.39212066 -0.09547349 0.1432483 -0.15125224 0.36515817 -0.21521585 0.39352208 0.66149676 0.66391486 -0.2947092 0.0667654 -0.13665143 -0.264737 0.084484816 0.76436764 0.13730898 0.6192258 1.491436 0.37673545 -0.020335613 0.1711287 0.46133414 -0.6490829 0.5746336 -0.019069642 0.746776 0.7809718 0.53210974 -0.09580776];
    b3 = Float32[0.096206784, -0.2390327, 0.48590726, 0.33061516, 0.39822403, 0.04388712, -0.48006204, 0.2879784, -0.101239145, -0.24840482, -0.34336218, 0.43773392, -0.57922417, -0.3526708, 0.3950133, 0.58662057, 1.1428145, 0.29346457, -0.60665536, -0.20996472, 1.0504376, 0.09317274, -0.47802052, 0.1008141, 0.8011498, 0.5504473, -0.88792354, -0.75492823, 0.43187365, 0.48290008, -0.118733235, 0.20117745];

    W4 = Float32[0.0031297675 -0.70070004 0.8609931 0.28424865 0.73844284 -1.0468863 -0.32860088 0.0988063 -1.3642232 0.77325034 0.49830607 0.77514035 -0.68814117 0.80704963 0.7959812 0.7480641 0.3744666 0.49263152 0.45191488 0.16332187 -0.56995994 -0.77170473 -1.0389373 -0.34489077 0.34291556 -0.10244019 0.59362555 0.74389505 0.15539353 0.1899106 -1.5217375 -0.20311601; -0.0066863163 -0.3111632 1.0110573 1.2317684 -0.075199775 1.1530871 0.24391438 -0.072974846 -1.0127448 -0.4068718 0.47339836 -0.33078194 0.036923498 -1.1896777 -0.16908185 0.19488816 -0.19540295 0.16024466 -0.20025593 0.33271435 0.1851974 -0.60534453 0.6017938 0.08742508 0.22183979 -0.06904843 0.14947869 0.13807409 0.8157212 0.1824069 -0.15710667 0.77015895; 0.16761957 0.25973806 -1.3161138 -0.6291167 -0.40240613 1.1675882 1.0824345 -0.29067847 0.6048037 0.037276562 -0.5730638 0.19791251 -1.1759266 -0.019520508 0.5878012 0.17267728 -0.40459317 1.563563 0.011813549 1.1577456 -0.21838816 -0.7632831 0.16991402 1.1393272 -0.30929962 0.07673578 -0.10498064 0.15019126 -0.70707935 0.0143744685 -0.1319971 -0.8494896; -0.75333583 -0.18384708 -0.84190685 0.621681 0.8295873 1.2645888 -0.52264804 -0.85007435 0.6606096 0.586767 0.9141163 -0.67816955 -0.45194674 0.726779 0.4645929 -0.16449206 1.1226655 -1.0033714 0.09481509 -1.0531461 -0.35410318 -0.53846633 -0.5113347 -0.4905315 -0.31545913 -0.0078586005 -0.4169571 -0.7125172 0.95861614 -0.7128779 -1.2073138 0.32758513; 0.64003235 -1.6026698 0.25690576 -0.3354347 -0.5581222 -0.4048775 -0.063088045 0.5021416 -0.4764712 -0.6271975 0.60528904 -0.40582922 0.9898907 -0.9195368 -1.0999287 0.33539888 0.54790586 -0.410485 0.6765621 0.8591869 -0.21187015 0.8766645 -0.71545327 -0.018755142 -0.44904998 0.75672394 -0.8077237 -1.1873738 0.6969679 0.53294504 -0.7517767 1.5618443; -0.20857494 0.78263754 0.43966517 -0.2038045 -0.10740324 -0.06593002 0.81966525 0.79707956 0.8587005 0.8884383 1.4313861 -1.2716031 -0.81835824 -0.5211389 -1.008655 0.050382778 -0.103212714 0.4735864 0.8186511 -0.48135093 0.07591491 0.5276123 -0.69539875 0.9083532 -1.8306369 -0.68301713 -0.07379727 -0.0968854 0.79073364 0.6050883 0.021014005 -1.2070093];
    b4 = Float32[0.6525144, -0.13996503, 0.86447346, -0.6117222, -0.13055107, 0.98097247];

    MLP = Chain(
        Dense(W1, b1, softsign),
        Dense(W2, b2, softsign),
        Dense(W3, b3, softsign),
        Dense(W4, b4)     #
    )
    return MLP(xs)
end


function nn_forward3(xs, nn_params::AbstractVector)
    b4 = reshape(nn_params[1:6], 6)#unpack(nn_params)

    W1 = Float32[1.875037 1.1254121 -1.6523789 1.5346975 1.0946065 2.0236628 -1.781368; 1.1849939 2.4872336 0.16947997 0.24015091 0.76725644 1.0294813 0.008388019; 0.19933994 0.041592497 0.9930616 3.3768384 -0.16517787 -0.8620704 1.1798269; 0.6621956 0.5697205 1.6394995 0.62589717 -1.2822636 -0.524545 -1.0280635; 0.75996464 1.2655748 2.1498165 -3.9478884 -1.0966669 2.515487 1.6903596; -1.2811621 1.2494835 -1.1632073 -1.6594534 -0.28918305 0.67527246 -1.0473766; 0.71244764 -0.027102798 1.3396991 1.3735096 1.1200949 -0.49458805 -0.62206423; -0.11508237 -0.01922267 1.5188955 1.3123283 -1.5188425 1.9113997 -1.1606687; 1.1261019 -1.1684437 0.41439736 -0.26806295 0.95478123 0.20197538 -2.5004952; 0.027464751 -0.6694523 0.30190885 2.1730852 -1.3137022 1.3764294 0.59978926; -0.79648256 1.7893125 0.790273 -0.38281518 -0.62346935 -2.2573824 -1.6544231; -2.0673068 0.08959968 -1.2679441 -0.18318911 0.47558436 2.3448966 -0.60707825; 0.27717242 1.3110815 0.73451287 0.12156324 -0.08354788 2.129595 0.49636868; -0.5185398 0.8297732 1.4335537 0.7593017 1.6420763 -1.1676195 1.8847827; -2.9929762 -1.693472 1.7082407 0.5164434 0.7216979 0.34592497 -0.29277512; -2.4589424 -1.5406679 1.5259192 -0.50386685 0.1312101 -0.06828885 0.7239177; 0.32808805 2.0651217 1.3987501 0.9505764 0.21946955 0.42859954 0.30438864; -0.4769967 -0.1268065 -0.1480291 -1.02924 0.35529235 0.38330525 -1.8763349; 0.048549738 0.030717384 -0.015512208 -1.2850326 1.6933136 0.027674092 -2.0974805; -1.9203032 1.3332775 -1.0716028 1.0925014 -1.6358042 -0.42013207 0.32777017; -1.7994617 0.36843354 0.9200355 1.6104907 -2.8435357 1.0258245 0.82370746; -0.35568294 -0.8280433 0.48461705 1.5055448 -2.0833967 0.3492692 -0.7755077; 0.2661939 -2.2464447 -1.1077467 0.8937257 1.2601322 2.5857713 1.4310482; -1.8176641 -0.13798366 0.34108278 0.045400903 1.8629364 0.90406436 -0.8243387; 2.3616302 -1.7160623 -0.51216495 -0.9347112 1.1020021 -1.1571113 -0.46800578; -1.4990104 0.58605605 -0.7178554 2.190985 1.9242573 -1.3922927 -0.13934413; 0.18476129 -0.58578783 -0.34979632 -0.5602423 2.241023 0.7317399 0.791364; 1.63639 -0.43810016 -0.12454961 2.9972796 1.1618222 3.285467 -0.97797906; 2.7793767 0.76737785 1.2944779 0.46054885 1.7080824 0.1778659 -1.1738527; -0.79900515 -0.71591353 1.5848976 0.55842113 0.80082273 0.8786477 -2.3495617; 3.6012979 0.063776866 0.5981749 -2.592507 -1.0484397 2.325337 -0.12874882; 0.74201524 -0.38235232 -2.0198178 -0.31031093 -1.541383 2.096844 -0.29958856];

    b1 = Float32[-0.5862943, -1.0257035, -0.73381644, -0.7884702, -0.9117348, 0.47210136, -0.39930332, -0.4684479, 0.8132911, 0.10442278, -0.47558445, 0.37302473, -1.1047943, -1.9203515, 1.0013118, 0.14018516, -0.90396297, 0.21087494, -0.014168853, -0.15436468, -0.47222131, 0.7049316, -0.14248064, -0.05979966, 0.58153534, -0.2080053, 0.22227293, -0.8042843, -0.65096706, 1.0692599, -0.42351288, 0.40101072];

    W2 = Float32[0.6804578 0.28278744 -0.16062957 0.003617258 0.20550005 0.108358726 -0.21805543 -1.2395384 0.2651021 -0.39506698 -0.07302815 -0.39976382 -0.4350195 -0.786347 -0.24521859 -0.24244462 -0.4823956 0.13864286 0.12154219 -0.16243078 -0.0062925583 0.36619273 0.40894765 -0.8730386 0.45881024 0.19028683 0.4735364 -0.30296084 0.163885 -0.94565517 -0.42931226 0.52449936; 0.33783782 -0.026352651 -0.61394244 0.021516506 1.2301589 0.34718698 -0.14685811 -0.008993369 0.26710758 -0.28859836 -1.0791125 0.7238075 -0.39153883 -1.1735833 -0.34123835 1.3163664 0.23396589 0.13857539 0.21551442 -0.3418975 -0.74947274 0.48957902 0.43637353 -0.36320406 -0.29557323 -1.3391513 0.79894245 0.76839006 0.70723605 -0.0072257207 0.1975094 -0.46455154; 0.22135407 -0.04274687 -0.027500272 0.18261428 1.0965649 0.6275103 -0.07949413 0.5243795 -0.49724957 0.12507965 -0.098583706 0.4372843 0.5037246 0.53959846 0.42143255 0.64803094 0.33866796 0.28726885 -0.34238505 1.044006 1.6205139 0.22854239 -0.69306463 -0.010711789 -0.9478157 -0.27787638 -0.78522116 0.20476232 -0.021236647 -0.276219 0.16580921 0.5511922; -0.70297796 0.13440835 0.3034858 -0.040962774 -0.735138 0.11831725 0.5726754 -0.10165633 -1.514815 -0.55316025 0.6250016 -0.32225117 -1.06863 0.6073781 1.071829 -0.62786734 -0.27038962 -0.115030475 0.057949048 0.97683513 -0.29900977 -0.513571 -0.2551261 -0.31764352 -0.29343614 0.23725978 -0.114166036 -1.0144721 -0.013780598 -0.80139196 0.21797249 -0.4791141; 0.7876804 0.28620636 -0.18961181 0.51386636 -0.73647004 0.23946537 0.09291557 -0.016553737 0.4055588 -1.0950317 0.79278785 0.09871724 -0.7767456 -0.05732626 0.001377365 -0.5952586 -0.10937494 0.8213527 1.4163476 -0.36974895 -0.6848033 -0.38359392 -0.6628976 0.18038419 0.2519996 -0.45263684 -0.2876166 -0.00801974 0.97684884 0.20885868 0.2630963 -1.069334; 0.45711675 0.06855 -0.20560654 -0.32751033 -0.87659186 -0.4965555 -0.028360793 -0.8580177 0.24791005 -0.5263438 -0.03758844 -0.2295868 0.19470061 -0.041184463 0.28469923 0.030916156 0.21579422 -0.53276104 -0.37707728 -0.79075277 -0.2268347 -0.18494603 -0.8944732 -0.3347961 0.90557575 -0.06424967 0.55470526 -0.56250536 0.47358635 -0.1345762 -0.60011584 0.24250473; -0.29350466 0.074764185 -0.009236284 -0.29626754 -0.56052816 0.5646797 -0.2121066 0.7041961 0.3406658 0.3423991 -0.1421234 0.3608111 -0.32171628 -0.39548168 -0.010568233 0.02497404 0.050575104 0.5632225 0.5558513 1.1167912 1.001433 1.6693245 0.037179418 -0.38450903 0.1351926 -0.30633855 -0.6623628 1.5610305 0.15628275 0.32918492 -0.18280429 0.99898684; 0.27956858 -0.098384306 0.18173027 0.01950598 0.5231369 0.3322547 -0.16973236 0.37197882 0.04273077 0.101192325 -0.45348063 0.6381072 0.2314173 0.5165387 0.7410124 0.9529104 -0.015460607 0.28653076 0.056824885 0.38802797 0.99995506 0.8168981 1.1207236 0.5429204 -1.0965014 0.29174668 -0.28262246 -0.09756423 -0.09207589 0.7008973 0.16073634 -0.3110465; -1.2030644 -0.0065155197 -0.714288 -0.8825254 1.0336586 -0.3616806 -0.091413885 0.32343644 0.63779426 -0.3682627 0.053004388 -0.39101106 -0.2834184 0.9658016 -1.206136 -0.06255151 -0.2862205 0.16408482 0.92926383 -0.9429376 -0.743567 0.13996813 0.047444876 0.23971635 -0.013369507 -0.56138974 0.32058415 -0.2226674 -0.27874902 -0.8181476 0.72579706 0.20076035; -0.304472 0.50581104 -0.5311466 0.030244634 0.68945205 0.2883647 0.056860324 -0.01196088 -0.6864524 0.095864266 -0.4105283 0.18817955 0.057473324 0.6546966 -0.5918956 -0.1331269 -0.3546523 -0.7153028 -0.80127025 -0.21581103 -0.037816156 0.26543006 0.16293345 -1.3782732 -0.57398033 0.031027397 0.23228964 -0.8520563 -0.3236434 -0.36986324 0.3043048 0.018868294; 0.2358889 -0.1744168 -0.23070303 -0.71078753 0.32150388 -0.34426898 0.54629695 -0.6492414 1.0167751 -0.6688188 0.2763904 0.32957575 -0.54105294 0.2802947 0.17915215 -0.5265066 0.30204564 0.492982 1.0824558 -0.7519701 -0.69803506 -0.05770057 0.031800672 0.17596546 1.1358209 0.52126664 0.08418607 -0.72207546 0.65628654 0.20690034 0.26990867 0.26933023; -0.2153258 -0.37531933 -0.3213711 -0.7713467 0.8879553 -0.24639551 0.26179472 0.68988204 -0.22900099 -0.5327524 -0.531878 -0.6213712 0.8094931 0.2447153 0.516134 0.5738744 0.0013552507 -0.13802387 -0.31586388 0.18388829 0.546437 0.5725489 0.2875683 0.11236265 -0.2093088 0.38764358 0.22154008 -0.62339884 -0.3724608 0.17521787 0.26945996 1.2431315; -1.1115767 0.3668065 -0.5110412 -0.38102195 0.44194326 0.29720148 -0.9306929 -0.008222177 -0.55308074 -0.12275925 -0.9097665 0.2976609 -0.31130794 0.18216713 1.1452469 -0.028636586 0.35399425 -0.299265 -0.6043246 0.69573784 1.2809716 0.44314885 -0.5595561 -0.6748122 -0.43376833 -0.6399698 -0.35440314 -0.4965953 -1.4157776 -1.2511587 -1.4096491 0.65934074; -1.6268604 -0.14312524 0.88448405 -0.3878806 -0.18271802 -0.80289096 0.5376877 0.20375878 -0.6935337 -0.04585205 1.4076266 -0.84763014 0.7982694 1.5000187 0.41971686 0.4670378 1.150668 -0.073837675 0.27655286 -0.65429467 0.49072015 -0.4325563 -1.1566019 0.32678524 -1.0812366 0.8477287 0.15633914 0.21672897 0.9015538 0.23033306 0.16708148 -0.6673651; 0.09242403 0.3124562 0.44236058 0.837848 1.2064128 0.6774716 0.5902868 1.4065455 0.19898401 0.18404834 -0.45648342 0.013469535 0.44284073 0.40372497 -0.6151503 -0.5205165 0.4639506 -0.1916693 -0.41008732 -0.8887778 0.17101482 -0.06977456 -0.6687642 -0.398835 0.43554965 -1.2665881 -0.2682616 -0.1780306 1.0803628 -0.5677286 1.7777942 -0.20368701; 0.4636736 0.28923613 -0.44543144 -0.22644283 0.45252788 1.0713465 1.0088551 -0.73665124 0.7953326 -0.08357276 -0.29383615 0.46349943 0.013074085 1.141665 1.5931089 0.5899175 0.74403894 0.2316189 -0.102622904 -1.0550736 -1.3689787 0.16014934 -1.2883548 0.6546875 0.14091088 -0.24334326 0.16096213 0.28714582 0.6318463 1.2743468 -0.50615937 -0.3632507; 0.3724666 0.6914803 -1.1210195 -0.001972146 0.84032726 0.11019876 0.17261738 0.39148062 0.42928362 -0.14950636 -0.6792753 0.25465545 0.1643668 -0.9111263 -0.823761 -1.1041108 0.021653138 0.20858401 0.1215132 -0.7334359 -0.7876134 -0.18238051 1.2339101 -0.32385293 0.47484973 -0.9121168 0.71350276 0.7484179 0.26903462 0.45248514 1.2362026 0.83813083; -0.1063096 1.230548 1.013436 -0.38176104 -0.99578667 0.62979597 0.5448851 0.13644265 -0.9646988 0.2499442 0.73095256 -0.05834376 0.46030813 0.026497127 0.23656507 -1.2450308 0.62931687 -0.2099994 -0.55554515 0.84414244 0.16230969 -0.5151888 -0.4162749 0.12559879 -1.1020648 0.34401086 -0.019340625 -0.68636173 0.56621367 -0.884602 -0.19217668 -0.48976; -0.55319756 0.6440522 -0.78752035 -0.9735291 2.4976637 0.41762868 0.0005642082 0.56804436 -0.0075017656 -0.7280591 -0.54392993 0.7355064 0.8274273 0.6985056 0.9045392 0.04993315 0.63982 0.7420409 0.81586856 0.16749656 0.23839054 -0.0131988 1.3566971 0.32415766 -1.3908353 -0.7634782 0.90838027 1.6704242 -0.64029515 0.7658659 0.8873957 -0.47969258; -0.74401796 -0.10787654 -0.3337535 -0.046330463 -1.0877056 -0.22830212 0.0070232064 0.28722137 0.6835976 0.67511916 -0.23115022 0.5680029 -0.085950136 0.045425165 0.4701034 -0.015141951 -0.16157022 -0.26456013 -0.5619007 -0.2271631 0.7020972 -0.2584178 0.6517655 0.12286448 0.42245755 0.39919043 0.02584959 1.0314512 -1.034869 0.37470943 -0.25567427 0.6895296; 0.9602171 0.4841928 0.180371 -0.13784806 -1.2962365 0.3336268 0.21559283 -0.10600125 0.16315235 0.6044462 -0.87217975 0.8798517 0.3759277 0.40876153 -0.08292098 -0.85712755 0.55440253 -0.66651535 -0.87244403 0.7698026 0.26602066 -0.28476864 0.106833234 -0.10706385 -0.40229046 0.72398055 0.20877957 0.42801732 0.515314 1.2247268 -0.51015186 -0.06907187; 0.01531509 0.94129175 1.806051 0.89205474 0.37373948 -0.7144353 0.5830645 0.532031 0.40500808 0.56885266 -0.4537285 -0.6024207 0.7663738 0.21140529 -0.6356773 -0.49589878 0.49413204 -0.16252336 -0.25606123 -0.7266703 -0.3488212 0.087134466 -0.8686055 -0.6992168 0.18692514 -0.41377038 0.40132564 0.7524265 0.888652 0.36481518 1.43236 -0.6307168; -0.12541512 0.76520324 -0.2363976 0.36876383 -0.5792033 -0.17704317 -0.45786542 0.14868936 -0.011869221 0.62032396 -0.49721217 -0.30655134 0.2632675 0.07469976 -0.2782349 -0.7388224 -0.049047325 -0.3064054 -0.26386303 0.2511813 0.6401712 0.120278955 0.16926213 -0.88229877 0.54641473 0.29656053 -0.28711054 -0.6940683 0.06902513 0.20097944 -0.29925114 0.88764703; 0.31474006 0.16944 -0.51041496 -0.9561099 0.105035074 0.65727085 -0.73705125 -0.5643329 -0.58895445 -0.2849398 0.8125123 0.52644473 0.51976913 0.4096798 0.12286528 -0.20393394 0.6573325 0.335912 -0.21335545 0.62881315 -0.0012894508 -0.47115496 -0.29708484 0.26767814 -1.1024895 0.52267313 0.96034926 0.2352085 -0.28588685 -0.15012917 -1.0044868 0.84393835; -0.11659277 -0.54613215 -0.9675873 0.18434334 0.35940585 0.44585228 -0.22042221 -0.09958735 0.79137796 -0.61615974 0.17193149 0.041879755 -0.34443694 -0.5714356 0.14246969 0.5321053 -0.61877275 0.793345 0.05105399 -0.06159033 -0.3184359 0.729116 -0.04772824 0.3622838 0.24367277 -0.39130142 -0.40524408 -0.35362515 -0.026669849 0.849495 0.64475584 0.6074278; -0.7158928 -0.842865 -0.761251 -0.5118484 -0.027548656 0.5879605 -0.2400839 -0.8221961 -0.07768324 -1.044397 0.72454023 0.31586227 -0.7736568 0.99743104 0.23666134 1.022919 -0.7012109 0.28081825 0.64917755 0.74108547 -0.013627707 -0.21241789 0.12344267 0.66715413 -0.06546625 0.6090162 0.18089062 -1.3738139 -0.10932159 -0.8389805 -0.6439139 -0.22149947; -1.2704676 0.5447812 -0.6442816 0.12122076 -0.0021443095 -0.33631468 -0.071105815 -0.0033960661 -0.95218825 -0.76136166 -0.013476173 0.11959386 0.065317236 -0.32715222 -0.44465986 -0.29733655 0.089837626 -0.57485765 -0.15102671 -0.67661035 -0.64786386 -0.62109685 -0.13730153 -1.2225087 0.03402459 -0.1736835 0.72688556 -0.8051181 -0.088483244 -0.845415 1.4065837 0.86934173; 0.19149022 0.4719401 -0.23021364 -0.08310467 -1.4916842 -0.21688884 0.61525214 0.41014278 0.1410259 0.18026592 -0.25848117 -0.42228192 -0.39462453 -1.0086232 -0.35203338 0.2098197 0.59412336 -0.12688336 -0.5407948 0.38060486 0.1519711 0.9413621 0.47547805 -0.5832145 0.78208506 -0.024454389 -0.76527876 -1.1062464 -0.48900852 -0.2864733 -1.6859107 -0.23503137; 0.82181257 -0.47815078 0.4807471 -0.5887729 -1.0121493 -0.67328334 0.50289387 0.22330512 0.6025479 1.2083777 -1.0969126 0.34283736 -0.27749562 -0.7754698 -0.4670164 -0.18404272 -0.5243201 -0.5662256 -0.2719042 0.13853337 0.23928441 0.36180764 -0.06982149 -0.12865067 0.38658735 0.35554925 0.3176503 0.8895351 -0.07446973 0.06466241 -0.5845471 0.34024388; -1.1468756 -0.81580293 0.3895001 -0.2822132 -2.2417054 -0.28091374 0.5782089 -0.1557909 1.2578785 -0.25311604 -0.3252115 -0.19776557 -1.2142341 -0.17751262 -0.4098602 -0.01455177 -0.15891944 -0.20254041 0.19103216 0.37672448 0.64937437 0.3618145 1.152375 0.014856128 0.19582961 0.63779587 0.10842551 0.4090225 -0.173552 0.6117327 -1.2470537 -0.5810952; -0.47916937 1.0296837 0.18977019 -0.5492241 0.2017495 -0.10156848 0.271921 -0.7552183 -0.09790941 0.53206813 -0.65959656 -0.25578186 0.6066777 0.065870516 0.10213259 -0.16077292 -0.025702735 -1.0526066 -0.6959036 0.25975952 -0.11542898 -0.11264547 0.33344865 -0.5069723 -0.036698665 0.34055012 0.3659064 0.43641794 0.2088635 -0.4153733 -0.08233093 0.32292828; 0.14402449 -0.29328355 -0.46196678 -0.50225437 -0.49673477 0.49743265 0.60233015 -1.3044418 -0.30664328 -0.43316045 0.24385011 0.6282748 -0.54672176 0.8907907 0.88847214 -0.22940457 0.28870344 0.03927299 -0.01771152 0.3719941 -0.7430466 -0.3138847 -0.4669159 -0.057468455 -0.1042561 1.439855 -0.0014644244 0.5380111 0.9509501 -0.04634559 -0.9033527 -0.10858981];
    b2 = Float32[-0.024882097, -0.0026112983, -0.36909348, -0.3232622, -0.2196465, -0.59232616, 0.8949424, 0.02158277, -0.35671902, 0.24836946, -0.7679545, 0.23118152, -0.15300319, -0.78421944, -0.39089328, 1.4769539, 0.4478099, 0.5264765, -0.16473249, 0.21223366, 0.7137157, 0.07046325, -0.1255484, -0.08307452, 0.24176377, 0.003734943, -0.15885453, 0.67915505, 0.58964086, -0.8239974, 0.23779191, 0.3168843];

    W3 = Float32[0.20533809 -0.41106328 -0.13860254 -0.9629813 -1.8970687 1.2849605 -0.2933595 -0.15171514 -0.4165185 -0.6928103 -0.17867887 0.76894844 -0.5718053 0.24093434 0.028635355 -0.06264878 -1.2029189 0.25981468 -1.3077531 -0.15942237 0.17805019 -1.1511883 -0.14883801 -0.094123326 -0.7586343 -0.34404412 -0.97675776 -0.4489359 0.45948836 1.011673 -0.17085582 -0.017975973; -0.003431288 0.3152834 0.70252657 -0.09777866 -0.0053030844 0.2783946 -0.26229915 -0.08878146 -0.085553445 -1.3019373 0.45804593 -0.18755795 0.34766516 0.7152086 -0.78765404 0.75012267 -1.3544054 -0.34043288 0.08943082 0.7652809 0.4888276 -0.09777465 0.7596791 -0.090944245 -0.14069834 -0.36992648 -0.26704907 0.008221689 0.89677185 0.4329592 -0.714222 -0.84943515; 0.56904733 0.17504376 0.28854755 0.09572665 -0.40581352 0.41284147 -0.0057112374 0.30394274 0.16913141 0.96053165 0.109475434 -0.37139624 0.43607855 -0.083068386 0.6381161 -1.1899396 0.57652885 0.45696318 -0.052723635 0.6188653 -0.39031804 0.2884737 -0.31824863 -0.2821247 0.30768046 0.47670123 -0.014394795 0.16413312 0.19421284 -0.7101263 0.44064108 -0.07390463; -0.60895205 -0.47039413 0.8493678 -0.38134554 -0.27236724 -0.2058588 0.37010884 0.39831176 0.29724392 -0.006184312 -0.33475098 -0.10411036 0.24748781 -0.20170613 -0.38849002 0.106848024 0.61057365 0.45698315 -0.3311618 -0.001835474 0.88045245 -0.7171201 -0.16196401 0.50245607 0.56557894 -0.92618424 0.44310364 -0.39712504 0.2530503 0.16362709 0.9847707 -0.0140459165; 0.78485644 0.21132499 -0.40502962 0.7718285 0.52431065 0.38665143 1.141252 -0.57895774 -0.8373647 0.07425888 1.3806933 0.25263792 -0.1297495 -0.16778713 0.61304075 0.75618464 -0.7160821 -0.27886987 -0.26864353 1.0837059 0.73381305 0.5629915 -0.40475133 0.4277438 -0.15848136 0.67621416 0.45632136 0.014375546 -1.2467955 -1.2821281 -0.11040579 0.06503409; -0.2703146 0.1875931 -0.40155473 -0.9226945 0.06836379 -0.47382832 0.48336563 0.18997827 0.2158048 0.55636626 0.28721797 -0.19503492 0.31552386 -1.0133241 1.1343939 -0.24704874 -0.10203384 0.0021621205 -0.30289516 0.26202005 -0.09595472 1.2680929 0.18268265 0.10606413 -0.42846236 0.47300035 0.61256146 0.93701476 -0.030976905 0.14462939 0.023120664 0.4181796; 0.10650003 -0.26290697 0.12896772 -0.57226676 -0.83683443 0.08588602 1.4290771 -0.8962288 1.0557187 0.11511148 1.1467239 0.2890789 -0.23401637 0.8606264 -0.5984647 0.546435 -0.7260774 -0.06311277 -0.4676936 -0.35636067 0.040782366 -0.86782014 0.29178444 0.47208437 -0.18519579 0.4029162 -0.34106284 -0.37330404 1.2855341 0.017455123 0.12439004 -0.020192409; -0.15878695 -0.11058709 -0.917149 0.7173898 0.98591304 0.36140582 -0.45185465 0.2044787 0.6183655 0.0831367 0.3623041 -0.6660932 0.56418234 -0.7871292 0.76157326 0.20522758 0.6318065 0.07481962 0.38462707 -0.45445508 0.5231617 0.60979974 -0.10480109 0.26348817 -0.18641582 -0.87196064 0.64315253 -0.5659732 -0.08398706 0.83232933 -0.22633936 -1.5695454; 0.39522162 0.040808458 0.105590135 -0.20527735 -0.61461097 -0.18670207 0.3652957 0.018949922 0.259449 0.3710509 -0.2370716 0.27767697 -0.4642537 0.25213215 -0.329339 0.2623031 0.15991344 0.31908524 0.5148598 0.013437153 0.54495025 -0.27018836 0.008494594 0.47419402 0.51466066 -0.02030406 1.0749215 -0.22578251 0.284174 -0.47713622 0.2571574 -0.29624724; -0.5003752 0.6565755 -0.80164135 0.49640298 -0.2779677 -0.35386667 0.6145379 -0.3263268 -0.082682475 -0.096838795 -0.2708555 -0.21691626 0.4344354 -0.4131453 0.3206389 -0.5047892 -0.5229118 0.17373908 0.018003467 -0.24933258 0.05955161 0.80629545 0.561063 0.21223296 0.35120338 0.5539882 -0.92978966 -0.19012617 0.4800278 0.020132167 -0.884382 1.5051757; 0.121099554 -0.26606688 0.5210699 -0.72312814 0.81431526 -0.43965837 0.33886355 0.305351 -0.57911366 -0.5919334 0.55025077 -0.400003 -0.10531322 0.24621536 0.09560701 0.19587454 0.09810366 -0.21519232 0.37659216 -0.15607466 0.23025304 -0.061316337 0.14682932 0.53962034 -0.09318403 -0.5920732 -1.0777359 -0.039656207 -0.2503273 -0.07289091 -0.79139644 0.038511652; 0.06361816 0.06368567 0.6388758 0.44238767 -0.29413006 0.18579769 0.5862523 -0.04873731 -0.6760875 0.081307195 -0.4845632 -0.54353046 -0.76005316 0.16507946 -0.55671656 -0.5615992 -0.026148705 -0.97643036 1.0455039 -0.1435558 0.89068735 -0.2627344 0.13616155 -0.050076604 1.1800591 -0.57706165 -0.015379149 -0.72101104 -0.024073325 -0.2628846 -0.530888 -0.42902556; -0.56153977 -0.8300559 0.16272661 0.22803497 -0.21250488 -0.03731282 0.61002517 0.07317524 0.68190646 0.4657603 0.2984822 -0.36372203 0.6695763 -0.36650214 -0.11063412 0.33338147 -0.009859767 -0.40292373 -0.81652516 -0.00953016 -0.00499175 -0.114329845 -0.31784657 0.1256656 0.27594793 -0.41349208 0.26780745 0.44989538 -0.50770855 -0.214492 -0.4784485 0.16825265; -1.0645255 0.5670972 0.29013625 -0.5118309 -0.43315867 -0.30847085 -0.27285984 -1.0695767 -0.51913494 -0.26088488 -0.18751404 0.56152457 -0.5921344 -0.97768503 1.3775253 -0.6890664 0.25976604 -0.43159008 -0.17736456 0.24552828 0.70802224 0.029887417 -0.24188873 0.45184883 0.081353866 -0.14477733 0.8858056 0.28753993 0.78778046 -0.33710688 0.23086783 0.26611015; -0.25922218 0.015274936 -1.1301281 -0.3199793 0.12882903 0.7202563 -0.5542642 0.09365351 -0.20065123 0.19525711 -0.20032781 -0.65573764 0.6947152 1.0581138 0.33522478 -0.5788504 0.38627464 0.05794068 0.3801358 0.12969843 -0.92937315 0.13537383 0.4719745 0.018350616 0.4613548 -0.18742678 0.82934034 -0.16898543 -0.68629014 0.34723008 0.10037133 -0.26989684; -0.2386536 -0.3558992 -0.119833 0.16240567 -0.054123063 0.032777946 0.1656164 0.5719948 0.58294034 -0.0036629348 -0.19586322 0.74992317 0.18093714 0.30725762 0.5325633 1.4504414 -0.98382545 -0.013507771 -0.15530874 0.14125974 0.3307113 0.59122956 0.75299555 -0.7263225 0.075003155 -0.3223046 -1.0100417 0.94498837 0.06344029 -0.21185686 0.15188648 -1.6136254; 0.8220917 0.46249256 -0.074663654 -0.68922657 1.0237217 -0.57728314 -0.45082396 -0.3084664 -0.7800262 -0.6740943 -0.14482573 -0.15518674 0.27131346 -0.4972529 -0.42489508 -0.39656067 0.07116953 0.12217554 -0.31541085 0.33655894 0.23691405 -0.23816009 -0.119953446 -0.7194887 -0.7327876 1.3123885 0.31173646 -0.102879845 0.88043344 0.6088577 0.07690334 -0.12983635; 0.3049532 0.52583426 -0.17578627 0.25360933 -0.4535461 0.51730204 -0.7753481 -0.5613596 0.038597282 0.3214977 0.059778646 0.2541444 0.1746875 0.15680866 -0.0061979024 0.13059622 0.5677557 0.2889217 -0.21282496 0.30511042 0.73829234 -0.29422745 0.24612074 0.43805215 -0.29610744 -0.2310602 -0.16332798 -0.021024777 0.22765124 -0.18432538 1.05603 0.07234458; 0.08089099 0.43126377 -0.12257677 0.16330887 -0.39234674 0.3160227 -0.32843938 -0.50223225 -0.021194892 0.2532827 -0.35311946 -0.35717964 -0.93724704 0.23318264 -0.46555775 -0.28037107 0.22630703 -0.036279447 -0.30144987 0.4737101 0.7569835 0.534748 -0.7239464 0.39520028 0.16505164 0.1439391 -0.6046981 -0.728969 -1.1393597 0.012989725 -0.32945672 -0.61025536; -0.16186936 0.53796804 0.9421473 -0.028851613 0.1735877 -0.4081164 -0.21945576 0.9183022 0.19556288 -0.46995395 0.18259214 -0.13820551 0.38233638 -0.13599734 0.09532475 0.48965973 0.0025235205 -0.11164645 -0.42709288 0.69392055 -0.9386877 -0.19284086 0.34364325 0.2776211 0.10363195 -0.5270927 0.029742114 -0.3733432 -0.07980072 -0.74587536 0.04771048 0.5294218; -0.6275003 0.0062437695 0.33864737 -0.21033935 1.0037025 -0.061309207 -0.71686876 -0.13098218 -0.49981624 0.17041364 0.07081456 0.25011548 -1.178361 1.1034495 -0.6592523 -1.0418812 0.69207805 0.20910195 0.36815745 -0.3452859 0.22890642 0.9373714 -0.70594203 -0.85355496 0.6271394 -0.36761037 -0.710204 -0.026811518 -0.26573667 -0.851814 0.15622117 -0.95234495; 0.07737461 0.2684504 -0.74326646 -0.7289905 0.84057045 -0.3824491 -0.23659265 0.15755197 -0.54764974 -0.52715945 -0.18411624 -0.07445617 1.4923458 -0.6274286 0.5059 -0.4886202 -0.09926407 0.57401496 -0.5462063 0.9743261 0.6353918 0.102751605 0.9043702 -0.5993595 0.38819855 -0.2326868 0.11847116 -0.10742506 0.009600305 -0.7488709 0.69084793 -0.40949303; -0.65655756 0.028774533 -0.3075163 0.35020193 1.1051403 -0.2391326 0.76579034 -0.03189075 0.060260493 -0.98102474 -0.05869151 -1.1572254 -0.5543124 -0.046100795 -0.74026304 -0.026955456 0.4933696 0.41587666 0.6015443 0.11976287 -0.49970493 -0.48979834 -0.18240212 0.6163819 -0.33501205 0.915268 -0.2038153 -0.20916149 0.23959549 -0.3634735 -0.13311586 -0.056360304; 0.16936132 1.3396428 -0.35383773 1.1728534 0.45332032 -0.0032010977 0.20809615 -0.5235349 -0.8048 -0.16160615 -0.19460632 -0.56772923 0.14737442 -0.5766509 0.2497204 0.2729569 -0.2072811 0.55728155 0.1769998 -0.526481 -0.4527378 0.53569895 -0.08567722 -0.4656315 -0.48780426 -0.2524442 -0.06617268 0.37365723 -0.42084387 -0.95236737 0.20498559 -0.15856327; -0.6252873 0.8881259 0.16744298 0.6508085 0.19798778 0.33817062 0.46066564 -1.0895818 0.6103884 -0.83561283 -0.5097995 -0.8210106 -0.039535988 -1.0050058 -0.283068 0.8328649 -0.7692068 0.43549064 -0.0031561446 -0.8135245 0.38993856 -0.0015180141 -0.45542786 1.0001689 -0.8081253 -0.46413606 -0.7213118 0.16723627 0.4053587 -0.08728242 -0.17672482 -0.31738245; -0.09020152 -0.3287121 -0.8564197 -0.20122992 0.3383422 0.42448747 0.09676342 -0.6870097 -0.31108147 -0.24026436 0.6297489 -0.07493471 -0.0030458255 -0.3677668 0.87230337 0.27557212 0.68660736 0.20687939 1.4090599 -0.09768821 1.1616338 -0.14695847 -0.23005058 0.1385014 -0.14893463 0.28399062 -0.46969053 -0.51194257 -0.6228432 0.82455176 -0.09025867 -1.0238136; 0.033164177 0.4073328 -0.2379289 -0.95638174 0.2085064 0.99673826 -0.8801633 -0.7990414 -0.9353708 -0.5942693 1.3069148 -0.96540207 -0.32490483 1.4550121 0.3243065 -0.25895688 0.9764331 -0.38080588 0.11790292 0.1631987 -0.22087109 -0.2531914 0.09573213 0.13864882 -1.232544 0.049962763 -0.10745659 0.0519821 0.19529207 0.70539653 -0.81152725 0.25654235; 0.25897238 0.56906855 0.30572695 -0.97500116 0.36226273 -0.0011385776 -0.40533233 0.7699807 0.21128651 0.046626553 -0.5228392 0.50576764 0.70584273 -0.8224552 0.025292132 -0.08733732 0.016865171 0.062033843 -0.5151933 0.36036342 0.12122896 -0.8400108 0.26983538 -0.28684938 0.33458784 -0.26931402 0.39285815 -0.06461715 0.25090224 -0.19342536 0.38475788 0.737818; 0.43106487 0.9448763 -0.25815988 -0.2876913 -0.28338835 -0.48259908 0.10531579 -0.06304436 0.44477743 0.09425497 0.19249567 0.33267435 0.2185132 0.5046082 -0.14975536 0.49735516 0.56801945 -0.5806736 0.728397 -0.4011794 -0.026351178 -0.18491933 -0.2064129 0.26191688 -0.21706139 0.16597424 0.37034184 -0.8605535 -0.22951788 0.688779 0.7764402 0.08641105; 0.3017974 -0.4953003 -0.35478014 -1.072422 0.483425 0.5370177 -0.4291917 -1.3480053 -0.78022975 -0.36800218 -0.9114689 0.022802943 -0.2626728 -0.45040363 -0.27740476 0.26829255 -0.8867265 0.542287 0.97306174 -1.0723906 0.13349046 -0.33906737 -0.43138194 0.88173777 0.11688897 0.6186026 -0.78321064 0.88472706 0.68348324 -0.033472225 -0.5648668 -0.43060964; 0.21109764 0.45646343 -0.6874206 -0.71367633 -0.30264026 0.3712082 0.10001916 -0.054534756 0.40804648 -0.038266122 0.031815294 -0.64124584 -0.56696105 -0.06836897 0.22854055 0.51355416 -0.43293756 0.38026983 0.88493526 0.9590771 0.29075357 0.6317953 0.2842665 -0.46547115 0.23635978 -0.32560155 0.48060194 0.04787019 -0.34551516 -0.4732386 0.9817961 0.32389495; -0.075336784 0.10892963 -0.40472057 -0.39212066 -0.09547349 0.1432483 -0.15125224 0.36515817 -0.21521585 0.39352208 0.66149676 0.66391486 -0.2947092 0.0667654 -0.13665143 -0.264737 0.084484816 0.76436764 0.13730898 0.6192258 1.491436 0.37673545 -0.020335613 0.1711287 0.46133414 -0.6490829 0.5746336 -0.019069642 0.746776 0.7809718 0.53210974 -0.09580776];
    b3 = Float32[0.096206784, -0.2390327, 0.48590726, 0.33061516, 0.39822403, 0.04388712, -0.48006204, 0.2879784, -0.101239145, -0.24840482, -0.34336218, 0.43773392, -0.57922417, -0.3526708, 0.3950133, 0.58662057, 1.1428145, 0.29346457, -0.60665536, -0.20996472, 1.0504376, 0.09317274, -0.47802052, 0.1008141, 0.8011498, 0.5504473, -0.88792354, -0.75492823, 0.43187365, 0.48290008, -0.118733235, 0.20117745];

    W4 = Float32[0.0031297675 -0.70070004 0.8609931 0.28424865 0.73844284 -1.0468863 -0.32860088 0.0988063 -1.3642232 0.77325034 0.49830607 0.77514035 -0.68814117 0.80704963 0.7959812 0.7480641 0.3744666 0.49263152 0.45191488 0.16332187 -0.56995994 -0.77170473 -1.0389373 -0.34489077 0.34291556 -0.10244019 0.59362555 0.74389505 0.15539353 0.1899106 -1.5217375 -0.20311601; -0.0066863163 -0.3111632 1.0110573 1.2317684 -0.075199775 1.1530871 0.24391438 -0.072974846 -1.0127448 -0.4068718 0.47339836 -0.33078194 0.036923498 -1.1896777 -0.16908185 0.19488816 -0.19540295 0.16024466 -0.20025593 0.33271435 0.1851974 -0.60534453 0.6017938 0.08742508 0.22183979 -0.06904843 0.14947869 0.13807409 0.8157212 0.1824069 -0.15710667 0.77015895; 0.16761957 0.25973806 -1.3161138 -0.6291167 -0.40240613 1.1675882 1.0824345 -0.29067847 0.6048037 0.037276562 -0.5730638 0.19791251 -1.1759266 -0.019520508 0.5878012 0.17267728 -0.40459317 1.563563 0.011813549 1.1577456 -0.21838816 -0.7632831 0.16991402 1.1393272 -0.30929962 0.07673578 -0.10498064 0.15019126 -0.70707935 0.0143744685 -0.1319971 -0.8494896; -0.75333583 -0.18384708 -0.84190685 0.621681 0.8295873 1.2645888 -0.52264804 -0.85007435 0.6606096 0.586767 0.9141163 -0.67816955 -0.45194674 0.726779 0.4645929 -0.16449206 1.1226655 -1.0033714 0.09481509 -1.0531461 -0.35410318 -0.53846633 -0.5113347 -0.4905315 -0.31545913 -0.0078586005 -0.4169571 -0.7125172 0.95861614 -0.7128779 -1.2073138 0.32758513; 0.64003235 -1.6026698 0.25690576 -0.3354347 -0.5581222 -0.4048775 -0.063088045 0.5021416 -0.4764712 -0.6271975 0.60528904 -0.40582922 0.9898907 -0.9195368 -1.0999287 0.33539888 0.54790586 -0.410485 0.6765621 0.8591869 -0.21187015 0.8766645 -0.71545327 -0.018755142 -0.44904998 0.75672394 -0.8077237 -1.1873738 0.6969679 0.53294504 -0.7517767 1.5618443; -0.20857494 0.78263754 0.43966517 -0.2038045 -0.10740324 -0.06593002 0.81966525 0.79707956 0.8587005 0.8884383 1.4313861 -1.2716031 -0.81835824 -0.5211389 -1.008655 0.050382778 -0.103212714 0.4735864 0.8186511 -0.48135093 0.07591491 0.5276123 -0.69539875 0.9083532 -1.8306369 -0.68301713 -0.07379727 -0.0968854 0.79073364 0.6050883 0.021014005 -1.2070093];
    # b4 = Float32[0.6525144, -0.13996503, 0.86447346, -0.6117222, -0.13055107, 0.98097247];

    MLP = Chain(
        Dense(W1, b1, softsign),
        Dense(W2, b2, softsign),
        Dense(W3, b3, softsign),
        Dense(W4, b4)     #
    )
    return MLP(xs)
end

function BNN_prediction(nnf,estimated_params,inpt) # make predictions with MLP ensemble where input is states(t) and output params(t)
    #the input is normalized and the output is unnromalized.
    row_prediction=[]
    u0=normalize_input(inpt)
    for j=1:length(estimated_params)
        p=nnf(u0,estimated_params[j])
        #p=ensemble[j](u0)
        p=unnormalize_output(p)
        push!(row_prediction,p)
    end
    rp=vcat(map(x->x', row_prediction)...)
    rp_mean= [mean(rp[:,1]),mean(rp[:,2]),mean(rp[:,3]),mean(rp[:,4]),mean(rp[:,5]),mean(rp[:,6])]
    rp_std = [std(rp[:,1]),std(rp[:,2]),std(rp[:,3]),std(rp[:,4]),std(rp[:,5]),std(rp[:,6])]
    return rp_mean,rp_std #return mean and std
end


# nn_forward(normalize_input(xdt[1][1][1,:]),BHM_params_frozen_obj[1])








#inference for W3 as obj function
#bnn_frozen_params5_objF.jl
pathBNN_frozen_obj="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/bnn_as_obj/BHM_inference_w3_objF_25 Feb 2024 19:2:396.csv"
frozen_obj = CSV.read(pathBNN_frozen_obj, DataFrame)


sz=1
N=5000
lp, maxInd = findmax(frozen_obj.lp[100:end])
BHM_params_frozen_obj=[]
for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
    push!(BHM_params_frozen_obj,Array(frozen_obj[100:end,:][i,1+2:1024+2]))
end
#
# N=5000
lp, maxInd = findmax(frozen_obj.lp[100:end])
BHM_params_frozen_obj=[Array(frozen_obj[100:end,:][maxInd,1+2:1024+2])]
#
# N=5000
# lp, maxInd = findmax(frozen_obj.lp[100:end])
# BHM_params_frozen_obj=[]
# for i=4980:N
#     push!(BHM_params_frozen_obj,Array(frozen_obj[i,1+2:192+2]))
# end
#
#
# tmp=[]
# for j=1:1024
#     push!(tmp,mean(frozen_obj[100:end,:][:,j+2]))
# end
# BHM_params_frozen_obj=[tmp]
#


for e in xdt
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_BNN=[]
    for i=1:datasetsize
        u02=xtest[i,1:6] #state (t)
        p=BNN_prediction(nn_forward_w3,BHM_params_frozen_obj,xtest[i,:]) #parameters(t) with value ± std

        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        pp = Measurement{Float64}[]
        for j=1:length(p[1])
            push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
        end
        prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
        sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
        push!(pred_BNN,sol[:,end])
    end

    pred_BNN=vcat(map(x->x', pred_BNN)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for i = 1:6
        plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_BNN[:, i]), ribbon = Measurements.uncertainty.(pred_BNN[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
    end
    # plot(tgrid_opt[2:end],pred_BNN,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)
end





#inference for W4 as obj function
#bnn_frozen_params3.jl
pathBNN_frozen_obj="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/bnn_as_obj/chain_BayesianMLP_23 Feb 2024 11:2:548.csv"
frozen_obj = CSV.read(pathBNN_frozen_obj, DataFrame)


sz=10
N=5000
lp, maxInd = findmax(frozen_obj.lp[100:end])
BHM_params_frozen_obj=[]
for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
    push!(BHM_params_frozen_obj,Array(frozen_obj[100:end,:][i,1+2:192+2]))
end
#
# N=5000
# lp, maxInd = findmax(frozen_obj.lp[100:end])
# BHM_params_frozen_obj=[Array(frozen_obj[100:end,:][maxInd,1+2:192+2])]
# #
# N=5000
# lp, maxInd = findmax(frozen_obj.lp[100:end])
# BHM_params_frozen_obj=[]
# for i=4980:N
#     push!(BHM_params_frozen_obj,Array(frozen_obj[i,1+2:192+2]))
# end
#
# N=5000
# lp, maxInd = findmax(frozen_obj.lp[100:end])
# tmp=[]
# for j=1:192
#     push!(tmp,mean(frozen_obj[100:end,:][:,j+2]))
# end
# BHM_params_frozen_obj=[tmp]
#


for e in xdt
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_BNN=[]
    for i=1:datasetsize
        u02=xtest[i,1:6] #state (t)
        p=BNN_prediction(nn_forward,BHM_params_frozen_obj,xtest[i,:]) #parameters(t) with value ± std

        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        pp = Measurement{Float64}[]
        for j=1:length(p[1])
            push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
        end
        prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
        sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
        push!(pred_BNN,sol[:,end])
    end

    pred_BNN=vcat(map(x->x', pred_BNN)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for i = 1:6
        plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_BNN[:, i]), ribbon = Measurements.uncertainty.(pred_BNN[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
    end
    # plot(tgrid_opt[2:end],pred_BNN,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)
end










#inference for b4
#bnn_frozen_params4.jl N=5000
pathBNN_frozen3="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BayesianMLP_24 Feb 2024 7:2:074.csv"
frozen3 = CSV.read(pathBNN_frozen3, DataFrame)

#bnn_frozen_params4.jl N=5000
pathBNN_frozen3="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BayesianMLP_24 Feb 2024 9:2:842.csv"
frozen3 = CSV.read(pathBNN_frozen3, DataFrame)

sz=100
N=10000
# lp, maxInd = findmax(frozen3.lp[100:end])
# BHM_params_frozen3=[]
# for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
#     push!(BHM_params_frozen3,Array(frozen3[100:end,:][i,1+2:6+2]))
# end
#
# lp, maxInd = findmax(frozen3.lp[100:end])
# BHM_params_frozen3=[Array(frozen3[100:end,:][maxInd,1+2:6+2])]
#
lp, maxInd = findmax(frozen3.lp[100:end])
BHM_params_frozen3=[]
for i=N-300:N
    push!(BHM_params_frozen3,Array(frozen3[i,1+2:6+2]))
end

# BHM_params_frozen3=[[ 0.6131,-0.1486 ,0.8677,-0.6385,-0.1961,0.9546]]


for e in xdt
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_BNN=[]
    for i=1:datasetsize
        u02=xtest[i,1:6] #state (t)
        p=BNN_prediction(nn_forward3,BHM_params_frozen3,xtest[i,:]) #parameters(t) with value ± std

        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        pp = Measurement{Float64}[]
        for j=1:length(p[1])
            push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
        end
        prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
        sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
        push!(pred_BNN,sol[:,end])
    end

    pred_BNN=vcat(map(x->x', pred_BNN)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for i = 1:6
        plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_BNN[:, i]), ribbon = Measurements.uncertainty.(pred_BNN[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
    end
    # plot(tgrid_opt[2:end],pred_BNN,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)
end

#
# nn_params[1]    0.6131    0.0213     0.0003    0.0012   335.3249    0.9998        0.2424
#   nn_params[2]   -0.1486    0.0208     0.0003    0.0013   236.0750    1.0001        0.1707
#   nn_params[3]    0.8677    0.0198     0.0003    0.0013   162.0922    1.0003        0.1172
#   nn_params[4]   -0.6385    0.0198     0.0003    0.0011   264.6534    0.9998        0.1913
#   nn_params[5]   -0.1961    0.0219     0.0003    0.0012   325.1877    0.9999        0.2351
#   nn_params[6]    0.9546    0.0203





#
#
#
#
#
# # # Xv,GLC,GLN,    states,     time
# # X = hcat(X[1:3,:]',  X[6:6,:]',  X[7:7,:]')'
# # Y = hcat(Y[3:3,:])
#
# pparm=[]
# for i=1:85
#     push!(pparm,mean(chain_BNN_pxv[100:end,:][:,1+3]))
# end
#
#
# inpt=xdt[1][1]'
# inpt_a=[]
# for i=1:14
#     tt=normalize_input(inpt[:,i])
#     tt=hcat(tt[1:3,:]',  tt[6:6,:]',  tt[7:7,:]')'
#     push!(inpt_a,tt)
# end
#
# # Xv,GLC,GLN,    states,     time
# # X = hcat(inpt[1:3,:]',  inpt[6:6,:]',  inpt[7:7,:]')'
# # nn_forward(X, pparm)
#
# rrr=nn_forward(hcat(inpt_a...), Array(chain_BNN_pmAb[maxInd,1+2:291+2]))
# # rrr=nn_forward(hcat(inpt_a...), Array(chain_BNN_pglc[100:end,:][maxInd,1+2:85+2]))
#
# plot(rrr')
#
# # rrr=nn_forward(hcat(inpt_a...),pparm)
# # plot(rrr')
#
# min_values_estimated_params=[-0.13240732597403193, -5.0243094334252736e-9, -7.242819067849792e-10, -2.075801104192634e-9, -4.1946626959321127e-10, -7.189692896472483e-8]
# max_values_estimated_params=[0.2247201064149725, 6.382248486023288e-9, 9.252830910761743e-10, 3.860459201515955e-9, 1.0219287122168513e-9, 1.2732423754124306e-7]
# i=6
# restBNN=[]
# for j=1:14
# push!(restBNN,inverse_normalizetion(rrr[j],min_values_estimated_params[i],max_values_estimated_params[i]))
# println(inverse_normalizetion(rrr[j],min_values_estimated_params[i],max_values_estimated_params[i]))
# end
#
#
#
# yy=[[0.04697757483881504, 1.6653490479117395e-9, 3.86688766486935e-10, 9.447041138158076e-11, 4.2477928533989273e-10, 6.026716077550061e-8],
# [-0.08107546324058655, 3.6556449960585604e-9, 2.791199910543287e-10, 1.9807627690834076e-9, 1.447759647650815e-10, -3.639379762511664e-8],
# [0.2247201064149725, -8.76571055667918e-10, 1.2907561474663883e-10, 7.601510313262345e-10, 3.7382478497752586e-11, 3.7569780282384976e-8],
# [-0.07411731833854303, 5.271379978248598e-10, 2.442886963433655e-10, 6.337932404153123e-10, -5.736086732119152e-11, 1.5509920065475417e-8],
# [0.08588002251355902, 5.015371963609382e-10, 2.3009907681295157e-11, -2.9087146227111396e-10, 2.1318464591445362e-10, -3.29338952113673e-8],
# [0.008844466684061981, 7.498680457582508e-10, 8.017503297866003e-11, 8.607662647189983e-10, 8.067740163796432e-11, 4.071496558767031e-8],
# [0.015201235241261817, -1.680902408967688e-10, 9.665983547890558e-11, 1.0971107020574699e-9, 5.039444463466816e-11, 1.803843825118847e-8],
# [0.018971961814644823, 5.809923750617929e-10, 7.398023030967056e-11, 4.2152889122624615e-10, 5.172934984295373e-11, 2.020067160203011e-8],
# [-0.0074909012126365675, -3.017585090610922e-10, -2.2138044155577198e-11, -2.4739974246411057e-11, -4.3972588648062644e-11, 1.4271589241955448e-8],
# [-0.041043655732285286, 3.635034430540076e-10, -3.301130252803775e-11, -5.232306336804949e-10, -2.7341705495582088e-11, 1.968964778140048e-8],
# [-0.013304616695068208, -1.6323680603211043e-10, 5.707264173210976e-11, 8.2758263479189e-11, -1.377024494446168e-11, 5.418726687870174e-10],
# [-0.019498158069304713, 5.797067178624486e-10, -1.1160551167937471e-11, -2.924617911351988e-10, 3.970246328876975e-11, 1.836060443532476e-8],
# [0.018367836586508098, -5.305068411666227e-10, -8.484570476343561e-12, -3.0885791005884455e-10, 1.3071636714875083e-12, 1.593038622234472e-8],
# [-0.09031490828142127, 7.81319283179718e-10, 4.0823349809873876e-11, 6.660714465847812e-10, 5.7249838085465766e-12, 1.5177686387705487e-8]]
#
#
#
#
#
# plot(hcat(yy...)[6,:])
# plot!(restBNN)
#
#
#
#
#
# path="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/tests_mlp4bnn/"
#
# #load all trained sub-MLP that compose the ensemble
# MLP4bnn = Dict()
# ensemble_size=["Xv","glc","gln","lac","amm","mAb"]
# for i in 1:6
#     pt=path*"$(ensemble_size[i])_sub_MLP.bson"
#     m = BSON.load(pt, @__MODULE__)
#     MLP4bnn[i]=m[:model]
#
#     println("$(ensemble_size[i])_sub_MLP.bson")
#     for j=1:4
#         println("W$(j) maximum: ",maximum(Flux.params(MLP4bnn[i][j])[1]))
#         println("W$(j) minimum: ",minimum(Flux.params(MLP4bnn[i][j])[1]))
#         # println("b$(j) maximum: ",maximum(Flux.params(MLP4bnn[i][j])[2]))
#         # println("b$(j) minimum: ",minimum(Flux.params(MLP4bnn[i][j])[2]))
#     end
#
#     for j=1:4
#         # println("W$(j) maximum: ",maximum(Flux.params(MLP4bnn[i][j])[1]))
#         # println("W$(j) minimum: ",minimum(Flux.params(MLP4bnn[i][j])[1]))
#         println("b$(j) maximum: ",maximum(Flux.params(MLP4bnn[i][j])[2]))
#         println("b$(j) minimum: ",minimum(Flux.params(MLP4bnn[i][j])[2]))
#     end
# end
#
#
#
# pt="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/tests_mlp4bnn/7inp6out_sub_MLP.bson"
# m = BSON.load(pt, @__MODULE__)
# mlp4bnn=m[:model]
# for j=1:4
#     println("W$(j) maximum: ",maximum(Flux.params(mlp4bnn[j])[1]))
#     println("W$(j) minimum: ",minimum(Flux.params(mlp4bnn[j])[1]))
# end
# for j=1:4
#     println("b$(j) maximum: ",maximum(Flux.params(mlp4bnn[j])[2]))
#     println("b$(j) minimum: ",minimum(Flux.params(mlp4bnn[j])[2]))
# end
#
#
# #
# # W1 maximum: 3.6012979
# # W1 minimum: -3.9478884
# # W2 maximum: 2.4976637
# # W2 minimum: -2.2417054
# # W3 maximum: 1.5051757
# # W3 minimum: -1.8970687
# # W4 maximum: 1.563563
# # W4 minimum: -1.8306369
# # b1 maximum: 1.0692599
# # b1 minimum: -1.9203515
# # b2 maximum: 1.4769539
# # b2 minimum: -0.8239974
# # b3 maximum: 1.1428145
# # b3 minimum: -0.88792354
# # b4 maximum: 0.98097247
# # b4 minimum: -0.6117222
# #
# #
# #
# # sd=Float32[1.875037 1.1254121 -1.6523789 1.5346975 1.0946065 2.0236628 -1.781368; 1.1849939 2.4872336 0.16947997 0.24015091 0.76725644 1.0294813 0.008388019; 0.19933994 0.041592497 0.9930616 3.3768384 -0.16517787 -0.8620704 1.1798269; 0.6621956 0.5697205 1.6394995 0.62589717 -1.2822636 -0.524545 -1.0280635; 0.75996464 1.2655748 2.1498165 -3.9478884 -1.0966669 2.515487 1.6903596; -1.2811621 1.2494835 -1.1632073 -1.6594534 -0.28918305 0.67527246 -1.0473766; 0.71244764 -0.027102798 1.3396991 1.3735096 1.1200949 -0.49458805 -0.62206423; -0.11508237 -0.01922267 1.5188955 1.3123283 -1.5188425 1.9113997 -1.1606687; 1.1261019 -1.1684437 0.41439736 -0.26806295 0.95478123 0.20197538 -2.5004952; 0.027464751 -0.6694523 0.30190885 2.1730852 -1.3137022 1.3764294 0.59978926; -0.79648256 1.7893125 0.790273 -0.38281518 -0.62346935 -2.2573824 -1.6544231; -2.0673068 0.08959968 -1.2679441 -0.18318911 0.47558436 2.3448966 -0.60707825; 0.27717242 1.3110815 0.73451287 0.12156324 -0.08354788 2.129595 0.49636868; -0.5185398 0.8297732 1.4335537 0.7593017 1.6420763 -1.1676195 1.8847827; -2.9929762 -1.693472 1.7082407 0.5164434 0.7216979 0.34592497 -0.29277512; -2.4589424 -1.5406679 1.5259192 -0.50386685 0.1312101 -0.06828885 0.7239177; 0.32808805 2.0651217 1.3987501 0.9505764 0.21946955 0.42859954 0.30438864; -0.4769967 -0.1268065 -0.1480291 -1.02924 0.35529235 0.38330525 -1.8763349; 0.048549738 0.030717384 -0.015512208 -1.2850326 1.6933136 0.027674092 -2.0974805; -1.9203032 1.3332775 -1.0716028 1.0925014 -1.6358042 -0.42013207 0.32777017; -1.7994617 0.36843354 0.9200355 1.6104907 -2.8435357 1.0258245 0.82370746; -0.35568294 -0.8280433 0.48461705 1.5055448 -2.0833967 0.3492692 -0.7755077; 0.2661939 -2.2464447 -1.1077467 0.8937257 1.2601322 2.5857713 1.4310482; -1.8176641 -0.13798366 0.34108278 0.045400903 1.8629364 0.90406436 -0.8243387; 2.3616302 -1.7160623 -0.51216495 -0.9347112 1.1020021 -1.1571113 -0.46800578; -1.4990104 0.58605605 -0.7178554 2.190985 1.9242573 -1.3922927 -0.13934413; 0.18476129 -0.58578783 -0.34979632 -0.5602423 2.241023 0.7317399 0.791364; 1.63639 -0.43810016 -0.12454961 2.9972796 1.1618222 3.285467 -0.97797906; 2.7793767 0.76737785 1.2944779 0.46054885 1.7080824 0.1778659 -1.1738527; -0.79900515 -0.71591353 1.5848976 0.55842113 0.80082273 0.8786477 -2.3495617; 3.6012979 0.063776866 0.5981749 -2.592507 -1.0484397 2.325337 -0.12874882; 0.74201524 -0.38235232 -2.0198178 -0.31031093 -1.541383 2.096844 -0.29958856]
# #


#
# #inference for W4 ------ ok
# #bnn_frozen_params2.jl
# # pathBNN_frozen="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BayesianMLP_23 Feb 2024 23:2:17.csv"
# pathBNN_frozen="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BNN_w4_1000026 Feb 2024 21:2:98.csv"
#
# #inference for W4 and sigma
# #bnn_frozen_params2_sig.jl
# # pathBNN_frozen="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/bnn_frozen_params2_sig_24 Feb 2024 22:2:765.csv"
# frozen = CSV.read(pathBNN_frozen, DataFrame)
#
# sz=100
# N=10000
# lp, maxInd = findmax(frozen.lp[100:end])
# BHM_params_frozen=[]
# for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
#     push!(BHM_params_frozen,Array(frozen[100:end,:][i,1+2:192+2]))
# end
#
# # lp, maxInd = findmax(frozen.lp[100:end])
# # BHM_params_frozen=[Array(frozen[100:end,:][maxInd,1+2:192+2])]
#
# #
# # N=5000
# # lp, maxInd = findmax(frozen.lp[100:end])
# # BHM_params_frozen=[]
# # for i=N-100:N
# #     push!(BHM_params_frozen,Array(frozen[i,1+2:192+2]))
# # end
# #
# # tmp=[]
# # for j=1:192
# #     push!(tmp,mean(frozen[100:end,:][:,j+2]))
# # end
# # BHM_params_frozen=[tmp]
#
#
# for e in xdt
#     xtest =e[1]
#     sol_gt =e[2]
#
#     sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])
#
#     tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
#     datasetsize=14
#     pred_BNN=[]
#     for i=1:datasetsize
#         u02=xtest[i,1:6] #state (t)
#         p=BNN_prediction(nn_forward,BHM_params_frozen,xtest[i,:]) #parameters(t) with value ± std
#
#         tstart=tgrid_opt[i]
#         tend=tgrid_opt[i+1]
#         pp = Measurement{Float64}[]
#         for j=1:length(p[1])
#             push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
#         end
#         prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
#         sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
#         push!(pred_BNN,sol[:,end])
#     end
#
#     pred_BNN=vcat(map(x->x', pred_BNN)...)
#
#     #plots
#     lws=2.5
#     gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
#     plots=plot(layout = (3, 2), size = (800, 700))
#     for i = 1:6
#         plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_BNN[:, i]), ribbon = Measurements.uncertainty.(pred_BNN[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
#     end
#     # plot(tgrid_opt[2:end],pred_BNN,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
#     Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
#     plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
#     display(plots)
# end
#
#
#
#
#
#
#
#
#
#
# #inference for W1  ------ ok
# #bnn_frozen_params1.jl
# # pathBNN_frozen2="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BayesianMLP_24 Feb 2024 6:2:2.csv"
# pathBNN_frozen2="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BNN_w1_1000027 Feb 2024 4:2:156.csv"
#
# frozen2 = CSV.read(pathBNN_frozen2, DataFrame)
#
# sz=100
# N=10000
# lp, maxInd = findmax(frozen2.lp[100:end])
# BHM_params_frozen2=[]
# for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
#     push!(BHM_params_frozen2,Array(frozen2[100:end,:][i,1+2:224+2]))
# end
# #
# # N=5000
# # lp, maxInd = findmax(frozen2.lp[100:end])
# # BHM_params_frozen2=[Array(frozen2[100:end,:][maxInd,1+2:224+2])]
# #
# # N=5000
# # lp, maxInd = findmax(frozen2.lp[100:end])
# # BHM_params_frozen2=[]
# # for i=N-50:N
# #     push!(BHM_params_frozen2,Array(frozen2[i,1+2:224+2]))
# # end
#
#
# for e in xdt
#     xtest =e[1]
#     sol_gt =e[2]
#
#     sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])
#
#     tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
#     datasetsize=14
#     pred_BNN=[]
#     for i=1:datasetsize
#         u02=xtest[i,1:6] #state (t)
#         p=BNN_prediction(nn_forward2,BHM_params_frozen2,xtest[i,:]) #parameters(t) with value ± std
#
#         tstart=tgrid_opt[i]
#         tend=tgrid_opt[i+1]
#         pp = Measurement{Float64}[]
#         for j=1:length(p[1])
#             push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
#         end
#         prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
#         sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
#         push!(pred_BNN,sol[:,end])
#     end
#
#     pred_BNN=vcat(map(x->x', pred_BNN)...)
#
#     #plots
#     lws=2.5
#     gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
#     plots=plot(layout = (3, 2), size = (800, 700))
#     for i = 1:6
#         plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_BNN[:, i]), ribbon = Measurements.uncertainty.(pred_BNN[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
#     end
#     # plot(tgrid_opt[2:end],pred_BNN,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
#     Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
#     plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
#     display(plots)
# end
#
#











































function BNN_prediction2(nnf,estimated_params,inpt) # make predictions with MLP ensemble where input is states(t) and output params(t)
    #the input is normalized and the output is unnromalized.
    row_prediction=[]
    u0=normalize_input(inpt)
    for j=1:length(estimated_params)
        p=nnf(u0,estimated_params[j])
        #p=ensemble[j](u0)
        p=unnormalize_output(p)
        push!(row_prediction,p)
    end
    rp=vcat(map(x->x', row_prediction)...)
    # rp_mean= [mean(rp[:,1]),mean(rp[:,2]),mean(rp[:,3]),mean(rp[:,4]),mean(rp[:,5]),mean(rp[:,6])]
    # rp_std = [std(rp[:,1]),std(rp[:,2]),std(rp[:,3]),std(rp[:,4]),std(rp[:,5]),std(rp[:,6])]
    # return rp_mean,rp_std #return mean and std
    return rp
end



#inference for W4 ------ ok
#bnn_frozen_params2.jl
# pathBNN_frozen="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BayesianMLP_23 Feb 2024 23:2:17.csv"
pathBNN_frozen="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BNN_w4_1000026 Feb 2024 21:2:98.csv"

#inference for W4 and sigma
#bnn_frozen_params2_sig.jl
# pathBNN_frozen="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/bnn_frozen_params2_sig_24 Feb 2024 22:2:765.csv"
frozen = CSV.read(pathBNN_frozen, DataFrame)

sz=200
N=10000
lp, maxInd = findmax(frozen.lp[1:end])
BHM_params_frozen=[]
for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
    push!(BHM_params_frozen,Array(frozen[1:end,:][i,1+2:192+2]))
end

# lp, maxInd = findmax(frozen.lp[100:end])
# BHM_params_frozen=[Array(frozen[100:end,:][maxInd,1+2:192+2])]

#
# N=5000
# lp, maxInd = findmax(frozen.lp[100:end])
# BHM_params_frozen=[]
# for i=N-100:N
#     push!(BHM_params_frozen,Array(frozen[i,1+2:192+2]))
# end
#
# tmp=[]
# for j=1:192
#     push!(tmp,mean(frozen[100:end,:][:,j+2]))
# end
# BHM_params_frozen=[tmp]


for e in xdt
    # e=xdt[1]
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_BNN_total=[]
    pred_BNN_std_total=[]
    for i=1:datasetsize
        pred_BNN=[]
        u02=xtest[i,1:6] #state (t)
        p=BNN_prediction2(nn_forward,BHM_params_frozen,xtest[i,:]) #parameters(t) with value ± std

        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        prob =  ODEProblem(ode_system, u02, (tstart,tend),p[1,:])
        for j=1:length(p[:,1])
            sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid,p=p[j,:]) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
            push!(pred_BNN,sol[:,end])
        end
        pred_BNN=vcat(map(x->x',pred_BNN)...)
        predm=  [mean(pred_BNN[:,1]),mean(pred_BNN[:,2]),mean(pred_BNN[:,3]),mean(pred_BNN[:,4]),mean(pred_BNN[:,5]),mean(pred_BNN[:,6])]
        predstd=[std(pred_BNN[:,1]),std(pred_BNN[:,2]),std(pred_BNN[:,3]),std(pred_BNN[:,4]),std(pred_BNN[:,5]),std(pred_BNN[:,6])]
        push!(pred_BNN_total,predm)
        push!(pred_BNN_std_total,predstd)
    end

    pred_BNN_total=vcat(map(x->x', pred_BNN_total)...)
    pred_BNN_std_total=vcat(map(x->x', pred_BNN_std_total)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for s = 1:6
        plot!(plots[s], tgrid_opt[2:end], pred_BNN_total[:,s], label = "BHM", grid=false,ribbon= (1/2)*1.645 .*sqrt.(pred_BNN_std_total[:,s]),fillalpha=.3,color=:orange, lw=lws)
    end
    # plot!(tgrid_opt[2:end], pred_BNN_total, label = "BHM", grid=false,ribbon=2*sqrt.(pred_BNN_std_total),fillalpha=.3,color=:purple, lw=lws,layout=(3,2))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)

end










#inference for W1  ------ ok
#bnn_frozen_params1.jl
# pathBNN_frozen2="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BayesianMLP_24 Feb 2024 6:2:2.csv"
pathBNN_frozen2="/Users/cristovao/PhD_courses/Thesis/BHM_NSE_vs_EnMLP_NSE/BHM/params_frozen/chain_BNN_w1_1000027 Feb 2024 4:2:156.csv"

frozen2 = CSV.read(pathBNN_frozen2, DataFrame)

sz=500
N=10000
lp, maxInd = findmax(frozen2.lp[100:end])
BHM_params_frozen2=[]
for i in max(1, (maxInd[1]-sz)):min(N, (maxInd[1]+sz))
    push!(BHM_params_frozen2,Array(frozen2[100:end,:][i,1+2:224+2]))
end

# lp, maxInd = findmax(frozen2.lp[100:end])
# BHM_params_frozen2=[Array(frozen2[100:end,:][maxInd,1+2:224+2])]
#
# lp, maxInd = findmax(frozen2.lp[100:end])
# BHM_params_frozen2=[]
# for i=N-500:N
#     push!(BHM_params_frozen2,Array(frozen2[i,1+2:224+2]))
# end


for e in xdt
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_BNN=[]
    for i=1:datasetsize
        u02=xtest[i,1:6] #state (t)
        p=BNN_prediction(nn_forward2,BHM_params_frozen2,xtest[i,:]) #parameters(t) with value ± std

        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        pp = Measurement{Float64}[]
        for j=1:length(p[1])
            push!(pp,measurement(p[1][j], p[2][j]))#parameters with value ± std
        end
        prob =  ODEProblem(ode_system, u02, (tstart,tend),pp)
        sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
        push!(pred_BNN,sol[:,end])
    end

    pred_BNN=vcat(map(x->x', pred_BNN)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for i = 1:6
        plot!(plots[i], tgrid_opt[2:end], Measurements.value.(pred_BNN[:, i]), ribbon = Measurements.uncertainty.(pred_BNN[:, i]), color = :blue, fillalpha=.075, lw = lws, label = "pred", ylabel = "[$(i)]")
    end
    # plot(tgrid_opt[2:end],pred_BNN,color=:black ,lw=lws, label = "pred", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)
end

for e in xdt
    # e=xdt[1]
    xtest =e[1]
    sol_gt =e[2]

    sol_gt= hcat(sol_gt[1,:], sol_gt'[:,3:end])

    tgrid_opt=[0.0, 7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0, 56.0, 63.0, 70.0, 77.0, 84.0, 91.0, 98.0]
    datasetsize=14
    pred_BNN_total=[]
    pred_BNN_std_total=[]
    for i=1:datasetsize
        pred_BNN=[]
        u02=xtest[i,1:6] #state (t)
        p=BNN_prediction2(nn_forward2,BHM_params_frozen2,xtest[i,:]) #parameters(t) with value ± std

        tstart=tgrid_opt[i]
        tend=tgrid_opt[i+1]
        prob =  ODEProblem(ode_system, u02, (tstart,tend),p[1,:])
        for j=1:length(p[:,1])
            sol = solve(prob, AutoTsit5(Rosenbrock23()),saveat=tgrid,p=p[j,:]) #states (t+1) with uncertainty based on states (t) and parameters(t) with value ± std
            push!(pred_BNN,sol[:,end])
        end
        pred_BNN=vcat(map(x->x',pred_BNN)...)
        predm=  [mean(pred_BNN[:,1]),mean(pred_BNN[:,2]),mean(pred_BNN[:,3]),mean(pred_BNN[:,4]),mean(pred_BNN[:,5]),mean(pred_BNN[:,6])]
        predstd=[std(pred_BNN[:,1]),std(pred_BNN[:,2]),std(pred_BNN[:,3]),std(pred_BNN[:,4]),std(pred_BNN[:,5]),std(pred_BNN[:,6])]
        push!(pred_BNN_total,predm)
        push!(pred_BNN_std_total,predstd)
    end

    pred_BNN_total=vcat(map(x->x', pred_BNN_total)...)
    pred_BNN_std_total=vcat(map(x->x', pred_BNN_std_total)...)

    #plots
    lws=2.5
    gr( xtickfontsize=7, ytickfontsize=7, xguidefontsize=9, yguidefontsize=9, legendfontsize=6);
    plots=plot(layout = (3, 2), size = (800, 700))
    for s = 1:6
        plot!(plots[s], tgrid_opt[2:end], pred_BNN_total[:,s], label = "BHM", grid=false,ribbon= (1/2)*1.645 .*sqrt.(pred_BNN_std_total[:,s]),fillalpha=.3,color=:orange, lw=lws)
    end
    # plot!(tgrid_opt[2:end], pred_BNN_total, label = "BHM", grid=false,ribbon=2*sqrt.(pred_BNN_std_total),fillalpha=.3,color=:purple, lw=lws,layout=(3,2))
    Plots.scatter!(tgrid_opt,xtest[:,1:6],color=:red, markerstrokewidth = 0, lw=lws, label = "noise dt", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    plot!(tgrid_opt, sol_gt,color=:green , lw=lws, label = "true", ylabel=["[Xv]" "[GLC]" "[GLN]" "[LAC]" "[AMM]" "[mAb]"], layout=(3,2),size = (800,700))
    display(plots)

end
